{
  "version": 3,
  "sources": ["../../three/examples/jsm/nodes/core/constants.js", "../../three/examples/jsm/nodes/core/NodeUtils.js", "../../three/examples/jsm/nodes/core/Node.js", "../../three/examples/jsm/nodes/core/TempNode.js", "../../three/examples/jsm/nodes/utils/ArrayElementNode.js", "../../three/examples/jsm/nodes/utils/ConvertNode.js", "../../three/examples/jsm/nodes/utils/JoinNode.js", "../../three/examples/jsm/nodes/utils/SplitNode.js", "../../three/examples/jsm/nodes/utils/SetNode.js", "../../three/examples/jsm/nodes/core/InputNode.js", "../../three/examples/jsm/nodes/core/ConstNode.js", "../../three/examples/jsm/nodes/shadernode/ShaderNode.js", "../../three/examples/jsm/nodes/core/AssignNode.js", "../../three/examples/jsm/nodes/core/VaryingNode.js", "../../three/examples/jsm/nodes/core/AttributeNode.js", "../../three/examples/jsm/nodes/core/BypassNode.js", "../../three/examples/jsm/nodes/core/NodeCache.js", "../../three/examples/jsm/nodes/core/CacheNode.js", "../../three/examples/jsm/nodes/core/ContextNode.js", "../../three/examples/jsm/nodes/core/IndexNode.js", "../../three/examples/jsm/nodes/core/LightingModel.js", "../../three/examples/jsm/nodes/core/VarNode.js", "../../three/examples/jsm/nodes/core/NodeAttribute.js", "../../three/examples/jsm/nodes/core/NodeUniform.js", "../../three/examples/jsm/nodes/core/NodeVar.js", "../../three/examples/jsm/nodes/core/NodeVarying.js", "../../three/examples/jsm/nodes/core/NodeCode.js", "../../three/examples/jsm/nodes/core/NodeKeywords.js", "../../three/examples/jsm/nodes/core/PropertyNode.js", "../../three/examples/jsm/nodes/core/ParameterNode.js", "../../three/examples/jsm/nodes/code/CodeNode.js", "../../three/examples/jsm/nodes/code/FunctionNode.js", "../../three/examples/jsm/nodes/core/UniformGroupNode.js", "../../three/examples/jsm/nodes/core/UniformNode.js", "../../three/examples/jsm/nodes/accessors/UVNode.js", "../../three/examples/jsm/nodes/accessors/TextureSizeNode.js", "../../three/examples/jsm/nodes/math/OperatorNode.js", "../../three/examples/jsm/nodes/math/MathNode.js", "../../three/examples/jsm/nodes/display/ColorSpaceNode.js", "../../three/examples/jsm/nodes/code/ExpressionNode.js", "../../three/examples/jsm/nodes/utils/MaxMipLevelNode.js", "../../three/examples/jsm/nodes/accessors/TextureNode.js", "../../three/examples/jsm/nodes/accessors/BufferNode.js", "../../three/examples/jsm/nodes/accessors/UniformsNode.js", "../../three/examples/jsm/nodes/accessors/ReferenceNode.js", "../../three/examples/jsm/nodes/accessors/MaterialReferenceNode.js", "../../three/examples/jsm/nodes/accessors/Object3DNode.js", "../../three/examples/jsm/nodes/accessors/CameraNode.js", "../../three/examples/jsm/nodes/accessors/ModelNode.js", "../../three/examples/jsm/nodes/accessors/NormalNode.js", "../../three/examples/jsm/nodes/accessors/MaterialNode.js", "../../three/examples/jsm/nodes/accessors/PositionNode.js", "../../three/examples/jsm/nodes/accessors/ModelViewProjectionNode.js", "../../three/examples/jsm/nodes/accessors/BufferAttributeNode.js", "../../three/examples/jsm/nodes/accessors/InstanceNode.js", "../../three/examples/jsm/nodes/accessors/TangentNode.js", "../../three/examples/jsm/nodes/accessors/SkinningNode.js", "../../three/examples/jsm/nodes/utils/LoopNode.js", "../../three/examples/jsm/nodes/accessors/MorphNode.js", "../../three/examples/jsm/nodes/accessors/ReflectVectorNode.js", "../../three/examples/jsm/nodes/accessors/CubeTextureNode.js", "../../three/examples/jsm/nodes/lighting/LightingNode.js", "../../three/examples/jsm/nodes/lighting/AnalyticLightNode.js", "../../three/examples/jsm/nodes/lighting/LightsNode.js", "../../three/examples/jsm/nodes/lighting/AONode.js", "../../three/examples/jsm/nodes/lighting/LightingContextNode.js", "../../three/examples/jsm/nodes/utils/EquirectUVNode.js", "../../three/examples/jsm/nodes/utils/SpecularMIPLevelNode.js", "../../three/examples/jsm/nodes/lighting/EnvironmentNode.js", "../../three/examples/jsm/nodes/display/ViewportNode.js", "../../three/examples/jsm/nodes/display/ViewportTextureNode.js", "../../three/examples/jsm/nodes/display/ViewportDepthTextureNode.js", "../../three/examples/jsm/nodes/display/ViewportDepthNode.js", "../../three/examples/jsm/nodes/accessors/ClippingNode.js", "../../three/examples/jsm/nodes/display/FrontFacingNode.js", "../../three/examples/jsm/nodes/materials/NodeMaterial.js", "../../three/examples/jsm/renderers/common/Uniform.js", "../../three/examples/jsm/renderers/common/nodes/NodeUniform.js", "../../three/examples/jsm/nodes/math/CondNode.js", "../../three/examples/jsm/nodes/core/StackNode.js", "../../three/examples/jsm/renderers/common/CubeRenderTarget.js", "../../three/examples/jsm/renderers/common/ChainMap.js", "../../three/examples/jsm/nodes/core/NodeBuilder.js", "../../three/examples/jsm/nodes/core/NodeFrame.js", "../../three/examples/jsm/nodes/core/NodeFunctionInput.js", "../../three/examples/jsm/nodes/core/StructTypeNode.js", "../../three/examples/jsm/nodes/core/OutputStructNode.js", "../../three/examples/jsm/nodes/math/HashNode.js", "../../three/examples/jsm/nodes/math/MathUtils.js", "../../three/examples/jsm/nodes/math/TriNoise3D.js", "../../three/examples/jsm/nodes/utils/DiscardNode.js", "../../three/examples/jsm/nodes/utils/FunctionOverloadingNode.js", "../../three/examples/jsm/nodes/utils/MatcapUVNode.js", "../../three/examples/jsm/nodes/utils/TimerNode.js", "../../three/examples/jsm/nodes/utils/OscNode.js", "../../three/examples/jsm/nodes/utils/PackingNode.js", "../../three/examples/jsm/nodes/utils/RemapNode.js", "../../three/examples/jsm/nodes/utils/RotateUVNode.js", "../../three/examples/jsm/nodes/utils/RotateNode.js", "../../three/examples/jsm/nodes/utils/SpriteSheetUVNode.js", "../../three/examples/jsm/nodes/utils/StorageArrayElementNode.js", "../../three/examples/jsm/nodes/utils/TriplanarTexturesNode.js", "../../three/examples/jsm/nodes/utils/ReflectorNode.js", "../../three/examples/jsm/nodes/accessors/BitangentNode.js", "../../three/examples/jsm/nodes/accessors/AccessorsUtils.js", "../../three/examples/jsm/nodes/accessors/VertexColorNode.js", "../../three/examples/jsm/nodes/accessors/TextureBicubicNode.js", "../../three/examples/jsm/nodes/accessors/PointUVNode.js", "../../three/examples/jsm/nodes/accessors/SceneNode.js", "../../three/examples/jsm/nodes/accessors/StorageBufferNode.js", "../../three/examples/jsm/nodes/accessors/TextureStoreNode.js", "../../three/examples/jsm/nodes/accessors/UserDataNode.js", "../../three/examples/jsm/nodes/display/BlendModeNode.js", "../../three/examples/jsm/nodes/display/BumpMapNode.js", "../../three/examples/jsm/nodes/display/ColorAdjustmentNode.js", "../../three/examples/jsm/nodes/display/NormalMapNode.js", "../../three/examples/jsm/nodes/display/PosterizeNode.js", "../../three/examples/jsm/nodes/display/ToneMappingNode.js", "../../three/examples/jsm/nodes/display/ViewportSharedTextureNode.js", "../../three/examples/jsm/nodes/display/PassNode.js", "../../three/examples/jsm/objects/QuadMesh.js", "../../three/examples/jsm/nodes/display/GaussianBlurNode.js", "../../three/examples/jsm/nodes/display/AfterImageNode.js", "../../three/examples/jsm/nodes/display/AnamorphicNode.js", "../../three/examples/jsm/nodes/code/FunctionCallNode.js", "../../three/examples/jsm/nodes/code/ScriptableValueNode.js", "../../three/examples/jsm/nodes/code/ScriptableNode.js", "../../three/examples/jsm/nodes/fog/FogNode.js", "../../three/examples/jsm/nodes/fog/FogRangeNode.js", "../../three/examples/jsm/nodes/fog/FogExp2Node.js", "../../three/examples/jsm/nodes/geometry/RangeNode.js", "../../three/examples/jsm/nodes/gpgpu/ComputeNode.js", "../../three/examples/jsm/nodes/lighting/LightNode.js", "../../three/examples/jsm/nodes/lighting/LightUtils.js", "../../three/examples/jsm/nodes/lighting/PointLightNode.js", "../../three/examples/jsm/nodes/lighting/DirectionalLightNode.js", "../../three/examples/jsm/nodes/lighting/SpotLightNode.js", "../../three/examples/jsm/lights/IESSpotLight.js", "../../three/examples/jsm/nodes/lighting/IESSpotLightNode.js", "../../three/examples/jsm/nodes/lighting/AmbientLightNode.js", "../../three/examples/jsm/nodes/lighting/HemisphereLightNode.js", "../../three/examples/jsm/nodes/procedural/CheckerNode.js", "../../three/examples/jsm/nodes/loaders/NodeLoader.js", "../../three/examples/jsm/nodes/materials/InstancedPointsNodeMaterial.js", "../../three/examples/jsm/nodes/materials/LineBasicNodeMaterial.js", "../../three/examples/jsm/nodes/materials/LineDashedNodeMaterial.js", "../../three/examples/jsm/nodes/materials/Line2NodeMaterial.js", "../../three/examples/jsm/nodes/materials/MeshNormalNodeMaterial.js", "../../three/examples/jsm/nodes/materials/MeshBasicNodeMaterial.js", "../../three/examples/jsm/nodes/functions/BSDF/F_Schlick.js", "../../three/examples/jsm/nodes/functions/BSDF/BRDF_Lambert.js", "../../three/examples/jsm/nodes/functions/PhongLightingModel.js", "../../three/examples/jsm/nodes/materials/MeshLambertNodeMaterial.js", "../../three/examples/jsm/nodes/materials/MeshPhongNodeMaterial.js", "../../three/examples/jsm/nodes/functions/material/getGeometryRoughness.js", "../../three/examples/jsm/nodes/functions/material/getRoughness.js", "../../three/examples/jsm/nodes/functions/BSDF/V_GGX_SmithCorrelated.js", "../../three/examples/jsm/nodes/functions/BSDF/D_GGX.js", "../../three/examples/jsm/nodes/functions/BSDF/BRDF_GGX.js", "../../three/examples/jsm/nodes/functions/BSDF/DFGApprox.js", "../../three/examples/jsm/nodes/functions/BSDF/EnvironmentBRDF.js", "../../three/examples/jsm/nodes/functions/BSDF/Schlick_to_F0.js", "../../three/examples/jsm/nodes/functions/BSDF/BRDF_Sheen.js", "../../three/examples/jsm/nodes/functions/PhysicalLightingModel.js", "../../three/examples/jsm/nodes/materials/MeshStandardNodeMaterial.js", "../../three/examples/jsm/nodes/materials/MeshPhysicalNodeMaterial.js", "../../three/examples/jsm/nodes/materials/MeshSSSNodeMaterial.js", "../../three/examples/jsm/nodes/materials/PointsNodeMaterial.js", "../../three/examples/jsm/nodes/materials/SpriteNodeMaterial.js", "../../three/examples/jsm/nodes/loaders/NodeMaterialLoader.js", "../../three/examples/jsm/nodes/loaders/NodeObjectLoader.js", "../../three/examples/jsm/nodes/core/NodeParser.js", "../../three/examples/jsm/nodes/core/NodeFunction.js", "../../three/examples/jsm/nodes/parsers/GLSLNodeFunction.js", "../../three/examples/jsm/nodes/parsers/GLSLNodeParser.js", "../../three/examples/jsm/nodes/materialx/lib/mx_noise.js", "../../three/examples/jsm/nodes/materialx/lib/mx_hsv.js", "../../three/examples/jsm/nodes/materialx/lib/mx_transform_color.js", "../../three/examples/jsm/nodes/materialx/MaterialXNodes.js"],
  "sourcesContent": ["export const NodeShaderStage = {\r\n\tVERTEX: 'vertex',\r\n\tFRAGMENT: 'fragment'\r\n};\r\n\r\nexport const NodeUpdateType = {\r\n\tNONE: 'none',\r\n\tFRAME: 'frame',\r\n\tRENDER: 'render',\r\n\tOBJECT: 'object'\r\n};\r\n\r\nexport const NodeType = {\r\n\tBOOLEAN: 'bool',\r\n\tINTEGER: 'int',\r\n\tFLOAT: 'float',\r\n\tVECTOR2: 'vec2',\r\n\tVECTOR3: 'vec3',\r\n\tVECTOR4: 'vec4',\r\n\tMATRIX2: 'mat2',\r\n\tMATRIX3: 'mat3',\r\n\tMATRIX4: 'mat4'\r\n};\r\n\r\nexport const defaultShaderStages = [ 'fragment', 'vertex' ];\r\nexport const defaultBuildStages = [ 'setup', 'analyze', 'generate' ];\r\nexport const shaderStages = [ ...defaultShaderStages, 'compute' ];\r\nexport const vectorComponents = [ 'x', 'y', 'z', 'w' ];\r\n", "import { Color, Matrix3, Matrix4, Vector2, Vector3, Vector4 } from 'three';\r\n\r\nexport function getCacheKey( object ) {\r\n\r\n\tlet cacheKey = '{';\r\n\r\n\tif ( object.isNode === true ) {\r\n\r\n\t\tcacheKey += object.id;\r\n\r\n\t}\r\n\r\n\tfor ( const { property, childNode } of getNodeChildren( object ) ) {\r\n\r\n\t\tcacheKey += ',' + property.slice( 0, - 4 ) + ':' + childNode.getCacheKey();\r\n\r\n\t}\r\n\r\n\tcacheKey += '}';\r\n\r\n\treturn cacheKey;\r\n\r\n}\r\n\r\nexport function* getNodeChildren( node, toJSON = false ) {\r\n\r\n\tfor ( const property in node ) {\r\n\r\n\t\t// Ignore private properties.\r\n\t\tif ( property.startsWith( '_' ) === true ) continue;\r\n\r\n\t\tconst object = node[ property ];\r\n\r\n\t\tif ( Array.isArray( object ) === true ) {\r\n\r\n\t\t\tfor ( let i = 0; i < object.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = object[ i ];\r\n\r\n\t\t\t\tif ( child && ( child.isNode === true || toJSON && typeof child.toJSON === 'function' ) ) {\r\n\r\n\t\t\t\t\tyield { property, index: i, childNode: child };\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object && object.isNode === true ) {\r\n\r\n\t\t\tyield { property, childNode: object };\r\n\r\n\t\t} else if ( typeof object === 'object' ) {\r\n\r\n\t\t\tfor ( const subProperty in object ) {\r\n\r\n\t\t\t\tconst child = object[ subProperty ];\r\n\r\n\t\t\t\tif ( child && ( child.isNode === true || toJSON && typeof child.toJSON === 'function' ) ) {\r\n\r\n\t\t\t\t\tyield { property, index: subProperty, childNode: child };\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport function getValueType( value ) {\r\n\r\n\tif ( value === undefined || value === null ) return null;\r\n\r\n\tconst typeOf = typeof value;\r\n\r\n\tif ( value.isNode === true ) {\r\n\r\n\t\treturn 'node';\r\n\r\n\t} else if ( typeOf === 'number' ) {\r\n\r\n\t\treturn 'float';\r\n\r\n\t} else if ( typeOf === 'boolean' ) {\r\n\r\n\t\treturn 'bool';\r\n\r\n\t} else if ( typeOf === 'string' ) {\r\n\r\n\t\treturn 'string';\r\n\r\n\t} else if ( typeOf === 'function' ) {\r\n\r\n\t\treturn 'shader';\r\n\r\n\t} else if ( value.isVector2 === true ) {\r\n\r\n\t\treturn 'vec2';\r\n\r\n\t} else if ( value.isVector3 === true ) {\r\n\r\n\t\treturn 'vec3';\r\n\r\n\t} else if ( value.isVector4 === true ) {\r\n\r\n\t\treturn 'vec4';\r\n\r\n\t} else if ( value.isMatrix3 === true ) {\r\n\r\n\t\treturn 'mat3';\r\n\r\n\t} else if ( value.isMatrix4 === true ) {\r\n\r\n\t\treturn 'mat4';\r\n\r\n\t} else if ( value.isColor === true ) {\r\n\r\n\t\treturn 'color';\r\n\r\n\t} else if ( value instanceof ArrayBuffer ) {\r\n\r\n\t\treturn 'ArrayBuffer';\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\nexport function getValueFromType( type, ...params ) {\r\n\r\n\tconst last4 = type ? type.slice( - 4 ) : undefined;\r\n\r\n\tif ( params.length === 1 ) { // ensure same behaviour as in NodeBuilder.format()\r\n\r\n\t\tif ( last4 === 'vec2' ) params = [ params[ 0 ], params[ 0 ] ];\r\n\t\telse if ( last4 === 'vec3' ) params = [ params[ 0 ], params[ 0 ], params[ 0 ] ];\r\n\t\telse if ( last4 === 'vec4' ) params = [ params[ 0 ], params[ 0 ], params[ 0 ], params[ 0 ] ];\r\n\r\n\t}\r\n\r\n\tif ( type === 'color' ) {\r\n\r\n\t\treturn new Color( ...params );\r\n\r\n\t} else if ( last4 === 'vec2' ) {\r\n\r\n\t\treturn new Vector2( ...params );\r\n\r\n\t} else if ( last4 === 'vec3' ) {\r\n\r\n\t\treturn new Vector3( ...params );\r\n\r\n\t} else if ( last4 === 'vec4' ) {\r\n\r\n\t\treturn new Vector4( ...params );\r\n\r\n\t} else if ( last4 === 'mat3' ) {\r\n\r\n\t\treturn new Matrix3( ...params );\r\n\r\n\t} else if ( last4 === 'mat4' ) {\r\n\r\n\t\treturn new Matrix4( ...params );\r\n\r\n\t} else if ( type === 'bool' ) {\r\n\r\n\t\treturn params[ 0 ] || false;\r\n\r\n\t} else if ( ( type === 'float' ) || ( type === 'int' ) || ( type === 'uint' ) ) {\r\n\r\n\t\treturn params[ 0 ] || 0;\r\n\r\n\t} else if ( type === 'string' ) {\r\n\r\n\t\treturn params[ 0 ] || '';\r\n\r\n\t} else if ( type === 'ArrayBuffer' ) {\r\n\r\n\t\treturn base64ToArrayBuffer( params[ 0 ] );\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\nexport function arrayBufferToBase64( arrayBuffer ) {\r\n\r\n\tlet chars = '';\r\n\r\n\tconst array = new Uint8Array( arrayBuffer );\r\n\r\n\tfor ( let i = 0; i < array.length; i ++ ) {\r\n\r\n\t\tchars += String.fromCharCode( array[ i ] );\r\n\r\n\t}\r\n\r\n\treturn btoa( chars );\r\n\r\n}\r\n\r\nexport function base64ToArrayBuffer( base64 ) {\r\n\r\n\treturn Uint8Array.from( atob( base64 ), c => c.charCodeAt( 0 ) ).buffer;\r\n\r\n}\r\n", "import { EventDispatcher } from 'three';\r\nimport { NodeUpdateType } from './constants.js';\r\nimport { getNodeChildren, getCacheKey } from './NodeUtils.js';\r\nimport { MathUtils } from 'three';\r\n\r\nconst NodeClasses = new Map();\r\n\r\nlet _nodeId = 0;\r\n\r\nclass Node extends EventDispatcher {\r\n\r\n\tconstructor( nodeType = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.nodeType = nodeType;\r\n\r\n\t\tthis.updateType = NodeUpdateType.NONE;\r\n\t\tthis.updateBeforeType = NodeUpdateType.NONE;\r\n\r\n\t\tthis.uuid = MathUtils.generateUUID();\r\n\r\n\t\tthis.isNode = true;\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: _nodeId ++ } );\r\n\r\n\t}\r\n\r\n\tget type() {\r\n\r\n\t\treturn this.constructor.type;\r\n\r\n\t}\r\n\r\n\tgetSelf() {\r\n\r\n\t\t// Returns non-node object.\r\n\r\n\t\treturn this.self || this;\r\n\r\n\t}\r\n\r\n\tsetReference( /*state*/ ) {\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tisGlobal( /*builder*/ ) {\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t* getChildren() {\r\n\r\n\t\tfor ( const { childNode } of getNodeChildren( this ) ) {\r\n\r\n\t\t\tyield childNode;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n\ttraverse( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tfor ( const childNode of this.getChildren() ) {\r\n\r\n\t\t\tchildNode.traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetCacheKey() {\r\n\r\n\t\treturn getCacheKey( this );\r\n\r\n\t}\r\n\r\n\tgetHash( /*builder*/ ) {\r\n\r\n\t\treturn this.uuid;\r\n\r\n\t}\r\n\r\n\tgetUpdateType() {\r\n\r\n\t\treturn this.updateType;\r\n\r\n\t}\r\n\r\n\tgetUpdateBeforeType() {\r\n\r\n\t\treturn this.updateBeforeType;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst nodeProperties = builder.getNodeProperties( this );\r\n\r\n\t\tif ( nodeProperties.outputNode ) {\r\n\r\n\t\t\treturn nodeProperties.outputNode.getNodeType( builder );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.nodeType;\r\n\r\n\t}\r\n\r\n\tgetShared( builder ) {\r\n\r\n\t\tconst hash = this.getHash( builder );\r\n\t\tconst nodeFromHash = builder.getNodeFromHash( hash );\r\n\r\n\t\treturn nodeFromHash || this;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst nodeProperties = builder.getNodeProperties( this );\r\n\r\n\t\tfor ( const childNode of this.getChildren() ) {\r\n\r\n\t\t\tnodeProperties[ '_node' + childNode.id ] = childNode;\r\n\r\n\t\t}\r\n\r\n\t\t// return a outputNode if exists\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) { // @deprecated, r157\r\n\r\n\t\tconsole.warn( 'THREE.Node: construct() is deprecated. Use setup() instead.' );\r\n\r\n\t\treturn this.setup( builder );\r\n\r\n\t}\r\n\r\n\tincreaseUsage( builder ) {\r\n\r\n\t\tconst nodeData = builder.getDataFromNode( this );\r\n\t\tnodeData.usageCount = nodeData.usageCount === undefined ? 1 : nodeData.usageCount + 1;\r\n\r\n\t\treturn nodeData.usageCount;\r\n\r\n\t}\r\n\r\n\tanalyze( builder ) {\r\n\r\n\t\tconst usageCount = this.increaseUsage( builder );\r\n\r\n\t\tif ( usageCount === 1 ) {\r\n\r\n\t\t\t// node flow children\r\n\r\n\t\t\tconst nodeProperties = builder.getNodeProperties( this );\r\n\r\n\t\t\tfor ( const childNode of Object.values( nodeProperties ) ) {\r\n\r\n\t\t\t\tif ( childNode && childNode.isNode === true ) {\r\n\r\n\t\t\t\t\tchildNode.build( builder );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst { outputNode } = builder.getNodeProperties( this );\r\n\r\n\t\tif ( outputNode && outputNode.isNode === true ) {\r\n\r\n\t\t\treturn outputNode.build( builder, output );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdateBefore( /*frame*/ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tupdate( /*frame*/ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tbuild( builder, output = null ) {\r\n\r\n\t\tconst refNode = this.getShared( builder );\r\n\r\n\t\tif ( this !== refNode ) {\r\n\r\n\t\t\treturn refNode.build( builder, output );\r\n\r\n\t\t}\r\n\r\n\t\tbuilder.addNode( this );\r\n\t\tbuilder.addChain( this );\r\n\r\n\t\t/* Build stages expected results:\r\n\t\t\t- \"setup\"\t\t-> Node\r\n\t\t\t- \"analyze\"\t\t-> null\r\n\t\t\t- \"generate\"\t-> String\r\n\t\t*/\r\n\t\tlet result = null;\r\n\r\n\t\tconst buildStage = builder.getBuildStage();\r\n\r\n\t\tif ( buildStage === 'setup' ) {\r\n\r\n\t\t\tthis.setReference( builder );\r\n\r\n\t\t\tconst properties = builder.getNodeProperties( this );\r\n\r\n\t\t\tif ( properties.initialized !== true || builder.context.tempRead === false ) {\r\n\r\n\t\t\t\tconst stackNodesBeforeSetup = builder.stack.nodes.length;\r\n\r\n\t\t\t\tproperties.initialized = true;\r\n\t\t\t\tproperties.outputNode = this.setup( builder );\r\n\r\n\t\t\t\tif ( properties.outputNode !== null && builder.stack.nodes.length !== stackNodesBeforeSetup ) {\r\n\r\n\t\t\t\t\tproperties.outputNode = builder.stack;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( const childNode of Object.values( properties ) ) {\r\n\r\n\t\t\t\t\tif ( childNode && childNode.isNode === true ) {\r\n\r\n\t\t\t\t\t\tchildNode.build( builder );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( buildStage === 'analyze' ) {\r\n\r\n\t\t\tthis.analyze( builder );\r\n\r\n\t\t} else if ( buildStage === 'generate' ) {\r\n\r\n\t\t\tconst isGenerateOnce = this.generate.length === 1;\r\n\r\n\t\t\tif ( isGenerateOnce ) {\r\n\r\n\t\t\t\tconst type = this.getNodeType( builder );\r\n\t\t\t\tconst nodeData = builder.getDataFromNode( this );\r\n\r\n\t\t\t\tresult = nodeData.snippet;\r\n\r\n\t\t\t\tif ( result === undefined /*|| builder.context.tempRead === false*/ ) {\r\n\r\n\t\t\t\t\tresult = this.generate( builder ) || '';\r\n\r\n\t\t\t\t\tnodeData.snippet = result;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult = builder.format( result, type, output );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tresult = this.generate( builder, output ) || '';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tbuilder.removeChain( this );\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tgetSerializeChildren() {\r\n\r\n\t\treturn getNodeChildren( this );\r\n\r\n\t}\r\n\r\n\tserialize( json ) {\r\n\r\n\t\tconst nodeChildren = this.getSerializeChildren();\r\n\r\n\t\tconst inputNodes = {};\r\n\r\n\t\tfor ( const { property, index, childNode } of nodeChildren ) {\r\n\r\n\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\tif ( inputNodes[ property ] === undefined ) {\r\n\r\n\t\t\t\t\tinputNodes[ property ] = Number.isInteger( index ) ? [] : {};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinputNodes[ property ][ index ] = childNode.toJSON( json.meta ).uuid;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tinputNodes[ property ] = childNode.toJSON( json.meta ).uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( Object.keys( inputNodes ).length > 0 ) {\r\n\r\n\t\t\tjson.inputNodes = inputNodes;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdeserialize( json ) {\r\n\r\n\t\tif ( json.inputNodes !== undefined ) {\r\n\r\n\t\t\tconst nodes = json.meta.nodes;\r\n\r\n\t\t\tfor ( const property in json.inputNodes ) {\r\n\r\n\t\t\t\tif ( Array.isArray( json.inputNodes[ property ] ) ) {\r\n\r\n\t\t\t\t\tconst inputArray = [];\r\n\r\n\t\t\t\t\tfor ( const uuid of json.inputNodes[ property ] ) {\r\n\r\n\t\t\t\t\t\tinputArray.push( nodes[ uuid ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis[ property ] = inputArray;\r\n\r\n\t\t\t\t} else if ( typeof json.inputNodes[ property ] === 'object' ) {\r\n\r\n\t\t\t\t\tconst inputObject = {};\r\n\r\n\t\t\t\t\tfor ( const subProperty in json.inputNodes[ property ] ) {\r\n\r\n\t\t\t\t\t\tconst uuid = json.inputNodes[ property ][ subProperty ];\r\n\r\n\t\t\t\t\t\tinputObject[ subProperty ] = nodes[ uuid ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis[ property ] = inputObject;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconst uuid = json.inputNodes[ property ];\r\n\r\n\t\t\t\t\tthis[ property ] = nodes[ uuid ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst { uuid, type } = this;\r\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\tif ( isRoot ) {\r\n\r\n\t\t\tmeta = {\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {},\r\n\t\t\t\tnodes: {}\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// serialize\r\n\r\n\t\tlet data = meta.nodes[ uuid ];\r\n\r\n\t\tif ( data === undefined ) {\r\n\r\n\t\t\tdata = {\r\n\t\t\t\tuuid,\r\n\t\t\t\ttype,\r\n\t\t\t\tmeta,\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.6,\r\n\t\t\t\t\ttype: 'Node',\r\n\t\t\t\t\tgenerator: 'Node.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif ( isRoot !== true ) meta.nodes[ data.uuid ] = data;\r\n\r\n\t\t\tthis.serialize( data );\r\n\r\n\t\t\tdelete data.meta;\r\n\r\n\t\t}\r\n\r\n\t\t// TODO: Copied from Object3D.toJSON\r\n\r\n\t\tfunction extractFromCache( cache ) {\r\n\r\n\t\t\tconst values = [];\r\n\r\n\t\t\tfor ( const key in cache ) {\r\n\r\n\t\t\t\tconst data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t\tif ( isRoot ) {\r\n\r\n\t\t\tconst textures = extractFromCache( meta.textures );\r\n\t\t\tconst images = extractFromCache( meta.images );\r\n\t\t\tconst nodes = extractFromCache( meta.nodes );\r\n\r\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\r\n\t\t\tif ( images.length > 0 ) data.images = images;\r\n\t\t\tif ( nodes.length > 0 ) data.nodes = nodes;\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default Node;\r\n\r\nexport function addNodeClass( type, nodeClass ) {\r\n\r\n\tif ( typeof nodeClass !== 'function' || ! type ) throw new Error( `Node class ${ type } is not a class` );\r\n\tif ( NodeClasses.has( type ) ) {\r\n\r\n\t\tconsole.warn( `Redefinition of node class ${ type }` );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tNodeClasses.set( type, nodeClass );\r\n\tnodeClass.type = type;\r\n\r\n}\r\n\r\nexport function createNodeFromType( type ) {\r\n\r\n\tconst Class = NodeClasses.get( type );\r\n\r\n\tif ( Class !== undefined ) {\r\n\r\n\t\treturn new Class();\r\n\r\n\t}\r\n\r\n}\r\n", "import Node, { addNodeClass } from './Node.js';\r\n\r\nclass TempNode extends Node {\r\n\r\n\tconstructor( type ) {\r\n\r\n\t\tsuper( type );\r\n\r\n\t\tthis.isTempNode = true;\r\n\r\n\t}\r\n\r\n\thasDependencies( builder ) {\r\n\r\n\t\treturn builder.getDataFromNode( this ).usageCount > 1;\r\n\r\n\t}\r\n\r\n\tbuild( builder, output ) {\r\n\r\n\t\tconst buildStage = builder.getBuildStage();\r\n\r\n\t\tif ( buildStage === 'generate' ) {\r\n\r\n\t\t\tconst type = builder.getVectorType( this.getNodeType( builder, output ) );\r\n\t\t\tconst nodeData = builder.getDataFromNode( this );\r\n\r\n\t\t\tif ( builder.context.tempRead !== false && nodeData.propertyName !== undefined ) {\r\n\r\n\t\t\t\treturn builder.format( nodeData.propertyName, type, output );\r\n\r\n\t\t\t} else if ( builder.context.tempWrite !== false && type !== 'void' && output !== 'void' && this.hasDependencies( builder ) ) {\r\n\r\n\t\t\t\tconst snippet = super.build( builder, type );\r\n\r\n\t\t\t\tconst nodeVar = builder.getVarFromNode( this, null, type );\r\n\t\t\t\tconst propertyName = builder.getPropertyName( nodeVar );\r\n\r\n\t\t\t\tbuilder.addLineFlowCode( `${propertyName} = ${snippet}` );\r\n\r\n\t\t\t\tnodeData.snippet = snippet;\r\n\t\t\t\tnodeData.propertyName = propertyName;\r\n\r\n\t\t\t\treturn builder.format( nodeData.propertyName, type, output );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn super.build( builder, output );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default TempNode;\r\n\r\naddNodeClass( 'TempNode', TempNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\n\r\nclass ArrayElementNode extends Node { // @TODO: If extending from TempNode it breaks webgpu_compute\r\n\r\n\tconstructor( node, indexNode ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.indexNode = indexNode;\r\n\r\n\t\tthis.isArrayElementNode = true;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.node.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst nodeSnippet = this.node.build( builder );\r\n\t\tconst indexSnippet = this.indexNode.build( builder, 'uint' );\r\n\r\n\t\treturn `${nodeSnippet}[ ${indexSnippet} ]`;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ArrayElementNode;\r\n\r\naddNodeClass( 'ArrayElementNode', ArrayElementNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\n\r\nclass ConvertNode extends Node {\r\n\r\n\tconstructor( node, convertTo ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.convertTo = convertTo;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst requestType = this.node.getNodeType( builder );\r\n\r\n\t\tlet convertTo = null;\r\n\r\n\t\tfor ( const overloadingType of this.convertTo.split( '|' ) ) {\r\n\r\n\t\t\tif ( convertTo === null || builder.getTypeLength( requestType ) === builder.getTypeLength( overloadingType ) ) {\r\n\r\n\t\t\t\tconvertTo = overloadingType;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn convertTo;\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.convertTo = this.convertTo;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.convertTo = data.convertTo;\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst node = this.node;\r\n\t\tconst type = this.getNodeType( builder );\r\n\r\n\t\tconst snippet = node.build( builder, type );\r\n\r\n\t\treturn builder.format( snippet, type, output );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ConvertNode;\r\n\r\naddNodeClass( 'ConvertNode', ConvertNode );\r\n", "import { addNodeClass } from '../core/Node.js';\r\nimport TempNode from '../core/TempNode.js';\r\n\r\nclass JoinNode extends TempNode {\r\n\r\n\tconstructor( nodes = [], nodeType = null ) {\r\n\r\n\t\tsuper( nodeType );\r\n\r\n\t\tthis.nodes = nodes;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tif ( this.nodeType !== null ) {\r\n\r\n\t\t\treturn builder.getVectorType( this.nodeType );\r\n\r\n\t\t}\r\n\r\n\t\treturn builder.getTypeFromLength( this.nodes.reduce( ( count, cur ) => count + builder.getTypeLength( cur.getNodeType( builder ) ), 0 ) );\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst type = this.getNodeType( builder );\r\n\t\tconst nodes = this.nodes;\r\n\r\n\t\tconst primitiveType = builder.getComponentType( type );\r\n\r\n\t\tconst snippetValues = [];\r\n\r\n\t\tfor ( const input of nodes ) {\r\n\r\n\t\t\tlet inputSnippet = input.build( builder );\r\n\r\n\t\t\tconst inputPrimitiveType = builder.getComponentType( input.getNodeType( builder ) );\r\n\r\n\t\t\tif ( inputPrimitiveType !== primitiveType ) {\r\n\r\n\t\t\t\tinputSnippet = builder.format( inputSnippet, inputPrimitiveType, primitiveType );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsnippetValues.push( inputSnippet );\r\n\r\n\t\t}\r\n\r\n\t\tconst snippet = `${ builder.getType( type ) }( ${ snippetValues.join( ', ' ) } )`;\r\n\r\n\t\treturn builder.format( snippet, type, output );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default JoinNode;\r\n\r\naddNodeClass( 'JoinNode', JoinNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { vectorComponents } from '../core/constants.js';\r\n\r\nconst stringVectorComponents = vectorComponents.join( '' );\r\n\r\nclass SplitNode extends Node {\r\n\r\n\tconstructor( node, components = 'x' ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.components = components;\r\n\r\n\t\tthis.isSplitNode = true;\r\n\r\n\t}\r\n\r\n\tgetVectorLength() {\r\n\r\n\t\tlet vectorLength = this.components.length;\r\n\r\n\t\tfor ( const c of this.components ) {\r\n\r\n\t\t\tvectorLength = Math.max( vectorComponents.indexOf( c ) + 1, vectorLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn vectorLength;\r\n\r\n\t}\r\n\r\n\tgetComponentType( builder ) {\r\n\r\n\t\treturn builder.getComponentType( this.node.getNodeType( builder ) );\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn builder.getTypeFromLength( this.components.length, this.getComponentType( builder ) );\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst node = this.node;\r\n\t\tconst nodeTypeLength = builder.getTypeLength( node.getNodeType( builder ) );\r\n\r\n\t\tlet snippet = null;\r\n\r\n\t\tif ( nodeTypeLength > 1 ) {\r\n\r\n\t\t\tlet type = null;\r\n\r\n\t\t\tconst componentsLength = this.getVectorLength();\r\n\r\n\t\t\tif ( componentsLength >= nodeTypeLength ) {\r\n\r\n\t\t\t\t// needed expand the input node\r\n\r\n\t\t\t\ttype = builder.getTypeFromLength( this.getVectorLength(), this.getComponentType( builder ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst nodeSnippet = node.build( builder, type );\r\n\r\n\t\t\tif ( this.components.length === nodeTypeLength && this.components === stringVectorComponents.slice( 0, this.components.length ) ) {\r\n\r\n\t\t\t\t// unnecessary swizzle\r\n\r\n\t\t\t\tsnippet = builder.format( nodeSnippet, type, output );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsnippet = builder.format( `${nodeSnippet}.${this.components}`, this.getNodeType( builder ), output );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// ignore .components if .node returns float/integer\r\n\r\n\t\t\tsnippet = node.build( builder, output );\r\n\r\n\t\t}\r\n\r\n\t\treturn snippet;\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.components = this.components;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.components = data.components;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default SplitNode;\r\n\r\naddNodeClass( 'SplitNode', SplitNode );\r\n", "import { addNodeClass } from '../core/Node.js';\r\nimport TempNode from '../core/TempNode.js';\r\nimport { vectorComponents } from '../core/constants.js';\r\n\r\nclass SetNode extends TempNode {\r\n\r\n\tconstructor( sourceNode, components, targetNode ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.sourceNode = sourceNode;\r\n\t\tthis.components = components;\r\n\t\tthis.targetNode = targetNode;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.sourceNode.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst { sourceNode, components, targetNode } = this;\r\n\r\n\t\tconst sourceType = this.getNodeType( builder );\r\n\t\tconst targetType = builder.getTypeFromLength( components.length );\r\n\r\n\t\tconst targetSnippet = targetNode.build( builder, targetType );\r\n\t\tconst sourceSnippet = sourceNode.build( builder, sourceType );\r\n\r\n\t\tconst length = builder.getTypeLength( sourceType );\r\n\t\tconst snippetValues = [];\r\n\r\n\t\tfor ( let i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tconst component = vectorComponents[ i ];\r\n\r\n\t\t\tif ( component === components[ 0 ] ) {\r\n\r\n\t\t\t\tsnippetValues.push( targetSnippet );\r\n\r\n\t\t\t\ti += components.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsnippetValues.push( sourceSnippet + '.' + component );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn `${ builder.getType( sourceType ) }( ${ snippetValues.join( ', ' ) } )`;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default SetNode;\r\n\r\naddNodeClass( 'SetNode', SetNode );\r\n", "import Node, { addNodeClass } from './Node.js';\r\nimport { getValueType, getValueFromType, arrayBufferToBase64 } from './NodeUtils.js';\r\n\r\nclass InputNode extends Node {\r\n\r\n\tconstructor( value, nodeType = null ) {\r\n\r\n\t\tsuper( nodeType );\r\n\r\n\t\tthis.isInputNode = true;\r\n\r\n\t\tthis.value = value;\r\n\t\tthis.precision = null;\r\n\r\n\t}\r\n\r\n\tgetNodeType( /*builder*/ ) {\r\n\r\n\t\tif ( this.nodeType === null ) {\r\n\r\n\t\t\treturn getValueType( this.value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.nodeType;\r\n\r\n\t}\r\n\r\n\tgetInputType( builder ) {\r\n\r\n\t\treturn this.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tsetPrecision( precision ) {\r\n\r\n\t\tthis.precision = precision;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.value = this.value;\r\n\r\n\t\tif ( this.value && this.value.toArray ) data.value = this.value.toArray();\r\n\r\n\t\tdata.valueType = getValueType( this.value );\r\n\t\tdata.nodeType = this.nodeType;\r\n\r\n\t\tif ( data.valueType === 'ArrayBuffer' ) data.value = arrayBufferToBase64( data.value );\r\n\r\n\t\tdata.precision = this.precision;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.nodeType = data.nodeType;\r\n\t\tthis.value = Array.isArray( data.value ) ? getValueFromType( data.valueType, ...data.value ) : data.value;\r\n\r\n\t\tthis.precision = data.precision || null;\r\n\r\n\t\tif ( this.value && this.value.fromArray ) this.value = this.value.fromArray( data.value );\r\n\r\n\t}\r\n\r\n\tgenerate( /*builder, output*/ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default InputNode;\r\n\r\naddNodeClass( 'InputNode', InputNode );\r\n", "import InputNode from './InputNode.js';\r\nimport { addNodeClass } from './Node.js';\r\n\r\nclass ConstNode extends InputNode {\r\n\r\n\tconstructor( value, nodeType = null ) {\r\n\r\n\t\tsuper( value, nodeType );\r\n\r\n\t\tthis.isConstNode = true;\r\n\r\n\t}\r\n\r\n\tgenerateConst( builder ) {\r\n\r\n\t\treturn builder.generateConst( this.getNodeType( builder ), this.value );\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst type = this.getNodeType( builder );\r\n\r\n\t\treturn builder.format( this.generateConst( builder ), type, output );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ConstNode;\r\n\r\naddNodeClass( 'ConstNode', ConstNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport ArrayElementNode from '../utils/ArrayElementNode.js';\r\nimport ConvertNode from '../utils/ConvertNode.js';\r\nimport JoinNode from '../utils/JoinNode.js';\r\nimport SplitNode from '../utils/SplitNode.js';\r\nimport SetNode from '../utils/SetNode.js';\r\nimport ConstNode from '../core/ConstNode.js';\r\nimport { getValueFromType, getValueType } from '../core/NodeUtils.js';\r\n\r\n//\r\n\r\nlet currentStack = null;\r\n\r\nconst NodeElements = new Map(); // @TODO: Currently only a few nodes are added, probably also add others\r\n\r\nexport function addNodeElement( name, nodeElement ) {\r\n\r\n\tif ( NodeElements.has( name ) ) {\r\n\r\n\t\tconsole.warn( `Redefinition of node element ${ name }` );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tif ( typeof nodeElement !== 'function' ) throw new Error( `Node element ${ name } is not a function` );\r\n\r\n\tNodeElements.set( name, nodeElement );\r\n\r\n}\r\n\r\nconst parseSwizzle = ( props ) => props.replace( /r|s/g, 'x' ).replace( /g|t/g, 'y' ).replace( /b|p/g, 'z' ).replace( /a|q/g, 'w' );\r\n\r\nconst shaderNodeHandler = {\r\n\r\n\tsetup( NodeClosure, params ) {\r\n\r\n\t\tconst inputs = params.shift();\r\n\r\n\t\treturn NodeClosure( nodeObjects( inputs ), ...params );\r\n\r\n\t},\r\n\r\n\tget( node, prop, nodeObj ) {\r\n\r\n\t\tif ( typeof prop === 'string' && node[ prop ] === undefined ) {\r\n\r\n\t\t\tif ( node.isStackNode !== true && prop === 'assign' ) {\r\n\r\n\t\t\t\treturn ( ...params ) => {\r\n\r\n\t\t\t\t\tcurrentStack.assign( nodeObj, ...params );\r\n\r\n\t\t\t\t\treturn nodeObj;\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( NodeElements.has( prop ) ) {\r\n\r\n\t\t\t\tconst nodeElement = NodeElements.get( prop );\r\n\r\n\t\t\t\treturn node.isStackNode ? ( ...params ) => nodeObj.add( nodeElement( ...params ) ) : ( ...params ) => nodeElement( nodeObj, ...params );\r\n\r\n\t\t\t} else if ( prop === 'self' ) {\r\n\r\n\t\t\t\treturn node;\r\n\r\n\t\t\t} else if ( prop.endsWith( 'Assign' ) && NodeElements.has( prop.slice( 0, prop.length - 'Assign'.length ) ) ) {\r\n\r\n\t\t\t\tconst nodeElement = NodeElements.get( prop.slice( 0, prop.length - 'Assign'.length ) );\r\n\r\n\t\t\t\treturn node.isStackNode ? ( ...params ) => nodeObj.assign( params[ 0 ], nodeElement( ...params ) ) : ( ...params ) => nodeObj.assign( nodeElement( nodeObj, ...params ) );\r\n\r\n\t\t\t} else if ( /^[xyzwrgbastpq]{1,4}$/.test( prop ) === true ) {\r\n\r\n\t\t\t\t// accessing properties ( swizzle )\r\n\r\n\t\t\t\tprop = parseSwizzle( prop );\r\n\r\n\t\t\t\treturn nodeObject( new SplitNode( nodeObj, prop ) );\r\n\r\n\t\t\t} else if ( /^set[XYZWRGBASTPQ]{1,4}$/.test( prop ) === true ) {\r\n\r\n\t\t\t\t// set properties ( swizzle )\r\n\r\n\t\t\t\tprop = parseSwizzle( prop.slice( 3 ).toLowerCase() );\r\n\r\n\t\t\t\t// sort to xyzw sequence\r\n\r\n\t\t\t\tprop = prop.split( '' ).sort().join( '' );\r\n\r\n\t\t\t\treturn ( value ) => nodeObject( new SetNode( node, prop, value ) );\r\n\r\n\t\t\t} else if ( prop === 'width' || prop === 'height' || prop === 'depth' ) {\r\n\r\n\t\t\t\t// accessing property\r\n\r\n\t\t\t\tif ( prop === 'width' ) prop = 'x';\r\n\t\t\t\telse if ( prop === 'height' ) prop = 'y';\r\n\t\t\t\telse if ( prop === 'depth' ) prop = 'z';\r\n\r\n\t\t\t\treturn nodeObject( new SplitNode( node, prop ) );\r\n\r\n\t\t\t} else if ( /^\\d+$/.test( prop ) === true ) {\r\n\r\n\t\t\t\t// accessing array\r\n\r\n\t\t\t\treturn nodeObject( new ArrayElementNode( nodeObj, new ConstNode( Number( prop ), 'uint' ) ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn Reflect.get( node, prop, nodeObj );\r\n\r\n\t},\r\n\r\n\tset( node, prop, value, nodeObj ) {\r\n\r\n\t\tif ( typeof prop === 'string' && node[ prop ] === undefined ) {\r\n\r\n\t\t\t// setting properties\r\n\r\n\t\t\tif ( /^[xyzwrgbastpq]{1,4}$/.test( prop ) === true || prop === 'width' || prop === 'height' || prop === 'depth' || /^\\d+$/.test( prop ) === true ) {\r\n\r\n\t\t\t\tnodeObj[ prop ].assign( value );\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn Reflect.set( node, prop, value, nodeObj );\r\n\r\n\t}\r\n\r\n};\r\n\r\nconst nodeObjectsCacheMap = new WeakMap();\r\nconst nodeBuilderFunctionsCacheMap = new WeakMap();\r\n\r\nconst ShaderNodeObject = function ( obj, altType = null ) {\r\n\r\n\tconst type = getValueType( obj );\r\n\r\n\tif ( type === 'node' ) {\r\n\r\n\t\tlet nodeObject = nodeObjectsCacheMap.get( obj );\r\n\r\n\t\tif ( nodeObject === undefined ) {\r\n\r\n\t\t\tnodeObject = new Proxy( obj, shaderNodeHandler );\r\n\r\n\t\t\tnodeObjectsCacheMap.set( obj, nodeObject );\r\n\t\t\tnodeObjectsCacheMap.set( nodeObject, nodeObject );\r\n\r\n\t\t}\r\n\r\n\t\treturn nodeObject;\r\n\r\n\t} else if ( ( altType === null && ( type === 'float' || type === 'boolean' ) ) || ( type && type !== 'shader' && type !== 'string' ) ) {\r\n\r\n\t\treturn nodeObject( getConstNode( obj, altType ) );\r\n\r\n\t} else if ( type === 'shader' ) {\r\n\r\n\t\treturn tslFn( obj );\r\n\r\n\t}\r\n\r\n\treturn obj;\r\n\r\n};\r\n\r\nconst ShaderNodeObjects = function ( objects, altType = null ) {\r\n\r\n\tfor ( const name in objects ) {\r\n\r\n\t\tobjects[ name ] = nodeObject( objects[ name ], altType );\r\n\r\n\t}\r\n\r\n\treturn objects;\r\n\r\n};\r\n\r\nconst ShaderNodeArray = function ( array, altType = null ) {\r\n\r\n\tconst len = array.length;\r\n\r\n\tfor ( let i = 0; i < len; i ++ ) {\r\n\r\n\t\tarray[ i ] = nodeObject( array[ i ], altType );\r\n\r\n\t}\r\n\r\n\treturn array;\r\n\r\n};\r\n\r\nconst ShaderNodeProxy = function ( NodeClass, scope = null, factor = null, settings = null ) {\r\n\r\n\tconst assignNode = ( node ) => nodeObject( settings !== null ? Object.assign( node, settings ) : node );\r\n\r\n\tif ( scope === null ) {\r\n\r\n\t\treturn ( ...params ) => {\r\n\r\n\t\t\treturn assignNode( new NodeClass( ...nodeArray( params ) ) );\r\n\r\n\t\t};\r\n\r\n\t} else if ( factor !== null ) {\r\n\r\n\t\tfactor = nodeObject( factor );\r\n\r\n\t\treturn ( ...params ) => {\r\n\r\n\t\t\treturn assignNode( new NodeClass( scope, ...nodeArray( params ), factor ) );\r\n\r\n\t\t};\r\n\r\n\t} else {\r\n\r\n\t\treturn ( ...params ) => {\r\n\r\n\t\t\treturn assignNode( new NodeClass( scope, ...nodeArray( params ) ) );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n};\r\n\r\nconst ShaderNodeImmutable = function ( NodeClass, ...params ) {\r\n\r\n\treturn nodeObject( new NodeClass( ...nodeArray( params ) ) );\r\n\r\n};\r\n\r\nclass ShaderCallNodeInternal extends Node {\r\n\r\n\tconstructor( shaderNode, inputNodes ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.shaderNode = shaderNode;\r\n\t\tthis.inputNodes = inputNodes;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst { outputNode } = builder.getNodeProperties( this );\r\n\r\n\t\treturn outputNode ? outputNode.getNodeType( builder ) : super.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tcall( builder ) {\r\n\r\n\t\tconst { shaderNode, inputNodes } = this;\r\n\r\n\t\tif ( shaderNode.layout ) {\r\n\r\n\t\t\tlet functionNodesCacheMap = nodeBuilderFunctionsCacheMap.get( builder.constructor );\r\n\r\n\t\t\tif ( functionNodesCacheMap === undefined ) {\r\n\r\n\t\t\t\tfunctionNodesCacheMap = new WeakMap();\r\n\r\n\t\t\t\tnodeBuilderFunctionsCacheMap.set( builder.constructor, functionNodesCacheMap );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet functionNode = functionNodesCacheMap.get( shaderNode );\r\n\r\n\t\t\tif ( functionNode === undefined ) {\r\n\r\n\t\t\t\tfunctionNode = nodeObject( builder.buildFunctionNode( shaderNode ) );\r\n\r\n\t\t\t\tfunctionNodesCacheMap.set( shaderNode, functionNode );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( builder.currentFunctionNode !== null ) {\r\n\r\n\t\t\t\tbuilder.currentFunctionNode.includes.push( functionNode );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn nodeObject( functionNode.call( inputNodes ) );\r\n\r\n\t\t}\r\n\r\n\t\tconst jsFunc = shaderNode.jsFunc;\r\n\t\tconst outputNode = inputNodes !== null ? jsFunc( inputNodes, builder.stack, builder ) : jsFunc( builder.stack, builder );\r\n\r\n\t\treturn nodeObject( outputNode );\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tbuilder.addStack();\r\n\r\n\t\tbuilder.stack.outputNode = this.call( builder );\r\n\r\n\t\treturn builder.removeStack();\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst { outputNode } = builder.getNodeProperties( this );\r\n\r\n\t\tif ( outputNode === null ) {\r\n\r\n\t\t\t// TSL: It's recommended to use `tslFn` in setup() pass.\r\n\r\n\t\t\treturn this.call( builder ).build( builder, output );\r\n\r\n\t\t}\r\n\r\n\t\treturn super.generate( builder, output );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ShaderNodeInternal extends Node {\r\n\r\n\tconstructor( jsFunc ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.jsFunc = jsFunc;\r\n\t\tthis.layout = null;\r\n\r\n\t}\r\n\r\n\tget isArrayInput() {\r\n\r\n\t\treturn /^\\((\\s+)?\\[/.test( this.jsFunc.toString() );\r\n\r\n\t}\r\n\r\n\tsetLayout( layout ) {\r\n\r\n\t\tthis.layout = layout;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcall( inputs = null ) {\r\n\r\n\t\tnodeObjects( inputs );\r\n\r\n\t\treturn nodeObject( new ShaderCallNodeInternal( this, inputs ) );\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\treturn this.call();\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst bools = [ false, true ];\r\nconst uints = [ 0, 1, 2, 3 ];\r\nconst ints = [ - 1, - 2 ];\r\nconst floats = [ 0.5, 1.5, 1 / 3, 1e-6, 1e6, Math.PI, Math.PI * 2, 1 / Math.PI, 2 / Math.PI, 1 / ( Math.PI * 2 ), Math.PI / 2 ];\r\n\r\nconst boolsCacheMap = new Map();\r\nfor ( const bool of bools ) boolsCacheMap.set( bool, new ConstNode( bool ) );\r\n\r\nconst uintsCacheMap = new Map();\r\nfor ( const uint of uints ) uintsCacheMap.set( uint, new ConstNode( uint, 'uint' ) );\r\n\r\nconst intsCacheMap = new Map( [ ...uintsCacheMap ].map( el => new ConstNode( el.value, 'int' ) ) );\r\nfor ( const int of ints ) intsCacheMap.set( int, new ConstNode( int, 'int' ) );\r\n\r\nconst floatsCacheMap = new Map( [ ...intsCacheMap ].map( el => new ConstNode( el.value ) ) );\r\nfor ( const float of floats ) floatsCacheMap.set( float, new ConstNode( float ) );\r\nfor ( const float of floats ) floatsCacheMap.set( - float, new ConstNode( - float ) );\r\n\r\nconst cacheMaps = { bool: boolsCacheMap, uint: uintsCacheMap, ints: intsCacheMap, float: floatsCacheMap };\r\n\r\nconst constNodesCacheMap = new Map( [ ...boolsCacheMap, ...floatsCacheMap ] );\r\n\r\nconst getConstNode = ( value, type ) => {\r\n\r\n\tif ( constNodesCacheMap.has( value ) ) {\r\n\r\n\t\treturn constNodesCacheMap.get( value );\r\n\r\n\t} else if ( value.isNode === true ) {\r\n\r\n\t\treturn value;\r\n\r\n\t} else {\r\n\r\n\t\treturn new ConstNode( value, type );\r\n\r\n\t}\r\n\r\n};\r\n\r\nconst safeGetNodeType = ( node ) => {\r\n\r\n\ttry {\r\n\r\n\t\treturn node.getNodeType();\r\n\r\n\t} catch ( _ ) {\r\n\r\n\t\treturn undefined;\r\n\r\n\t}\r\n\r\n};\r\n\r\nconst ConvertType = function ( type, cacheMap = null ) {\r\n\r\n\treturn ( ...params ) => {\r\n\r\n\t\tif ( params.length === 0 || ( ! [ 'bool', 'float', 'int', 'uint' ].includes( type ) && params.every( param => typeof param !== 'object' ) ) ) {\r\n\r\n\t\t\tparams = [ getValueFromType( type, ...params ) ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( params.length === 1 && cacheMap !== null && cacheMap.has( params[ 0 ] ) ) {\r\n\r\n\t\t\treturn nodeObject( cacheMap.get( params[ 0 ] ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( params.length === 1 ) {\r\n\r\n\t\t\tconst node = getConstNode( params[ 0 ], type );\r\n\t\t\tif ( safeGetNodeType( node ) === type ) return nodeObject( node );\r\n\t\t\treturn nodeObject( new ConvertNode( node, type ) );\r\n\r\n\t\t}\r\n\r\n\t\tconst nodes = params.map( param => getConstNode( param ) );\r\n\t\treturn nodeObject( new JoinNode( nodes, type ) );\r\n\r\n\t};\r\n\r\n};\r\n\r\n// exports\r\n\r\n// utils\r\n\r\nexport const getConstNodeType = ( value ) => ( value !== undefined && value !== null ) ? ( value.nodeType || value.convertTo || ( typeof value === 'string' ? value : null ) ) : null;\r\n\r\n// shader node base\r\n\r\nexport function ShaderNode( jsFunc ) {\r\n\r\n\treturn new Proxy( new ShaderNodeInternal( jsFunc ), shaderNodeHandler );\r\n\r\n}\r\n\r\nexport const nodeObject = ( val, altType = null ) => /* new */ ShaderNodeObject( val, altType );\r\nexport const nodeObjects = ( val, altType = null ) => new ShaderNodeObjects( val, altType );\r\nexport const nodeArray = ( val, altType = null ) => new ShaderNodeArray( val, altType );\r\nexport const nodeProxy = ( ...params ) => new ShaderNodeProxy( ...params );\r\nexport const nodeImmutable = ( ...params ) => new ShaderNodeImmutable( ...params );\r\n\r\nexport const shader = ( jsFunc ) => { // @deprecated, r154\r\n\r\n\tconsole.warn( 'TSL: shader() is deprecated. Use tslFn() instead.' );\r\n\r\n\treturn new ShaderNode( jsFunc );\r\n\r\n};\r\n\r\nexport const tslFn = ( jsFunc ) => {\r\n\r\n\tconst shaderNode = new ShaderNode( jsFunc );\r\n\r\n\tconst fn = ( ...params ) => {\r\n\r\n\t\tlet inputs;\r\n\r\n\t\tnodeObjects( params );\r\n\r\n\t\tif ( params[ 0 ] && params[ 0 ].isNode ) {\r\n\r\n\t\t\tinputs = [ ...params ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\tinputs = params[ 0 ];\r\n\r\n\t\t}\r\n\r\n\t\treturn shaderNode.call( inputs );\r\n\r\n\t};\r\n\r\n\tfn.shaderNode = shaderNode;\r\n\tfn.setLayout = ( layout ) => {\r\n\r\n\t\tshaderNode.setLayout( layout );\r\n\r\n\t\treturn fn;\r\n\r\n\t};\r\n\r\n\treturn fn;\r\n\r\n};\r\n\r\naddNodeClass( 'ShaderNode', ShaderNode );\r\n\r\n//\r\n\r\nexport const setCurrentStack = ( stack ) => {\r\n\r\n\tif ( currentStack === stack ) {\r\n\r\n\t\t//throw new Error( 'Stack already defined.' );\r\n\r\n\t}\r\n\r\n\tcurrentStack = stack;\r\n\r\n};\r\n\r\nexport const getCurrentStack = () => currentStack;\r\n\r\nexport const If = ( ...params ) => currentStack.if( ...params );\r\n\r\nexport function append( node ) {\r\n\r\n\tif ( currentStack ) currentStack.add( node );\r\n\r\n\treturn node;\r\n\r\n}\r\n\r\naddNodeElement( 'append', append );\r\n\r\n// types\r\n// @TODO: Maybe export from ConstNode.js?\r\n\r\nexport const color = new ConvertType( 'color' );\r\n\r\nexport const float = new ConvertType( 'float', cacheMaps.float );\r\nexport const int = new ConvertType( 'int', cacheMaps.int );\r\nexport const uint = new ConvertType( 'uint', cacheMaps.uint );\r\nexport const bool = new ConvertType( 'bool', cacheMaps.bool );\r\n\r\nexport const vec2 = new ConvertType( 'vec2' );\r\nexport const ivec2 = new ConvertType( 'ivec2' );\r\nexport const uvec2 = new ConvertType( 'uvec2' );\r\nexport const bvec2 = new ConvertType( 'bvec2' );\r\n\r\nexport const vec3 = new ConvertType( 'vec3' );\r\nexport const ivec3 = new ConvertType( 'ivec3' );\r\nexport const uvec3 = new ConvertType( 'uvec3' );\r\nexport const bvec3 = new ConvertType( 'bvec3' );\r\n\r\nexport const vec4 = new ConvertType( 'vec4' );\r\nexport const ivec4 = new ConvertType( 'ivec4' );\r\nexport const uvec4 = new ConvertType( 'uvec4' );\r\nexport const bvec4 = new ConvertType( 'bvec4' );\r\n\r\nexport const mat2 = new ConvertType( 'mat2' );\r\nexport const imat2 = new ConvertType( 'imat2' );\r\nexport const umat2 = new ConvertType( 'umat2' );\r\nexport const bmat2 = new ConvertType( 'bmat2' );\r\n\r\nexport const mat3 = new ConvertType( 'mat3' );\r\nexport const imat3 = new ConvertType( 'imat3' );\r\nexport const umat3 = new ConvertType( 'umat3' );\r\nexport const bmat3 = new ConvertType( 'bmat3' );\r\n\r\nexport const mat4 = new ConvertType( 'mat4' );\r\nexport const imat4 = new ConvertType( 'imat4' );\r\nexport const umat4 = new ConvertType( 'umat4' );\r\nexport const bmat4 = new ConvertType( 'bmat4' );\r\n\r\nexport const string = ( value = '' ) => nodeObject( new ConstNode( value, 'string' ) );\r\nexport const arrayBuffer = ( value ) => nodeObject( new ConstNode( value, 'ArrayBuffer' ) );\r\n\r\naddNodeElement( 'color', color );\r\naddNodeElement( 'float', float );\r\naddNodeElement( 'int', int );\r\naddNodeElement( 'uint', uint );\r\naddNodeElement( 'bool', bool );\r\naddNodeElement( 'vec2', vec2 );\r\naddNodeElement( 'ivec2', ivec2 );\r\naddNodeElement( 'uvec2', uvec2 );\r\naddNodeElement( 'bvec2', bvec2 );\r\naddNodeElement( 'vec3', vec3 );\r\naddNodeElement( 'ivec3', ivec3 );\r\naddNodeElement( 'uvec3', uvec3 );\r\naddNodeElement( 'bvec3', bvec3 );\r\naddNodeElement( 'vec4', vec4 );\r\naddNodeElement( 'ivec4', ivec4 );\r\naddNodeElement( 'uvec4', uvec4 );\r\naddNodeElement( 'bvec4', bvec4 );\r\naddNodeElement( 'mat2', mat2 );\r\naddNodeElement( 'imat2', imat2 );\r\naddNodeElement( 'umat2', umat2 );\r\naddNodeElement( 'bmat2', bmat2 );\r\naddNodeElement( 'mat3', mat3 );\r\naddNodeElement( 'imat3', imat3 );\r\naddNodeElement( 'umat3', umat3 );\r\naddNodeElement( 'bmat3', bmat3 );\r\naddNodeElement( 'mat4', mat4 );\r\naddNodeElement( 'imat4', imat4 );\r\naddNodeElement( 'umat4', umat4 );\r\naddNodeElement( 'bmat4', bmat4 );\r\naddNodeElement( 'string', string );\r\naddNodeElement( 'arrayBuffer', arrayBuffer );\r\n\r\n// basic nodes\r\n// HACK - we cannot export them from the corresponding files because of the cyclic dependency\r\nexport const element = nodeProxy( ArrayElementNode );\r\nexport const convert = ( node, types ) => nodeObject( new ConvertNode( nodeObject( node ), types ) );\r\nexport const split = ( node, channels ) => nodeObject( new SplitNode( nodeObject( node ), channels ) );\r\n\r\naddNodeElement( 'element', element );\r\naddNodeElement( 'convert', convert );\r\n", "import { addNodeClass } from '../core/Node.js';\r\nimport TempNode from '../core/TempNode.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\nimport { vectorComponents } from '../core/constants.js';\r\n\r\nclass AssignNode extends TempNode {\r\n\r\n\tconstructor( targetNode, sourceNode ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.targetNode = targetNode;\r\n\t\tthis.sourceNode = sourceNode;\r\n\r\n\t}\r\n\r\n\thasDependencies() {\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder, output ) {\r\n\r\n\t\treturn output !== 'void' ? this.targetNode.getNodeType( builder ) : 'void';\r\n\r\n\t}\r\n\r\n\tneedsSplitAssign( builder ) {\r\n\r\n\t\tconst { targetNode } = this;\r\n\r\n\t\tif ( builder.isAvailable( 'swizzleAssign' ) === false && targetNode.isSplitNode && targetNode.components.length > 1 ) {\r\n\r\n\t\t\tconst targetLength = builder.getTypeLength( targetNode.node.getNodeType( builder ) );\r\n\t\t\tconst assignDiferentVector = vectorComponents.join( '' ).slice( 0, targetLength ) !== targetNode.components;\r\n\r\n\t\t\treturn assignDiferentVector;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst { targetNode, sourceNode } = this;\r\n\r\n\t\tconst needsSplitAssign = this.needsSplitAssign( builder );\r\n\r\n\t\tconst targetType = targetNode.getNodeType( builder );\r\n\r\n\t\tconst target = targetNode.context( { assign: true } ).build( builder );\r\n\t\tconst source = sourceNode.build( builder, targetType );\r\n\r\n\t\tconst sourceType = sourceNode.getNodeType( builder );\r\n\r\n\t\tconst nodeData = builder.getDataFromNode( this );\r\n\r\n\t\t//\r\n\r\n\t\tlet snippet;\r\n\r\n\t\tif ( nodeData.initialized === true ) {\r\n\r\n\t\t\tif ( output !== 'void' ) {\r\n\r\n\t\t\t\tsnippet = target;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( needsSplitAssign ) {\r\n\r\n\t\t\tconst sourceVar = builder.getVarFromNode( this, null, targetType );\r\n\t\t\tconst sourceProperty = builder.getPropertyName( sourceVar );\r\n\r\n\t\t\tbuilder.addLineFlowCode( `${ sourceProperty } = ${ source }` );\r\n\r\n\t\t\tconst targetRoot = targetNode.node.context( { assign: true } ).build( builder );\r\n\r\n\t\t\tfor ( let i = 0; i < targetNode.components.length; i ++ ) {\r\n\r\n\t\t\t\tconst component = targetNode.components[ i ];\r\n\r\n\t\t\t\tbuilder.addLineFlowCode( `${ targetRoot }.${ component } = ${ sourceProperty }[ ${ i } ]` );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( output !== 'void' ) {\r\n\r\n\t\t\t\tsnippet = target;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tsnippet = `${ target } = ${ source }`;\r\n\r\n\t\t\tif ( output === 'void' || sourceType === 'void' ) {\r\n\r\n\t\t\t\tbuilder.addLineFlowCode( snippet );\r\n\r\n\t\t\t\tif ( output !== 'void' ) {\r\n\r\n\t\t\t\t\tsnippet = target;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tnodeData.initialized = true;\r\n\r\n\t\treturn builder.format( snippet, targetType, output );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default AssignNode;\r\n\r\nexport const assign = nodeProxy( AssignNode );\r\n\r\naddNodeClass( 'AssignNode', AssignNode );\r\n\r\naddNodeElement( 'assign', assign );\r\n", "import Node, { addNodeClass } from './Node.js';\r\nimport { NodeShaderStage } from './constants.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass VaryingNode extends Node {\r\n\r\n\tconstructor( node, name = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.name = name;\r\n\r\n\t\tthis.isVaryingNode = true;\r\n\r\n\t}\r\n\r\n\tisGlobal() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tgetHash( builder ) {\r\n\r\n\t\treturn this.name || super.getHash( builder );\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\t// VaryingNode is auto type\r\n\r\n\t\treturn this.node.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst { name, node } = this;\r\n\t\tconst type = this.getNodeType( builder );\r\n\r\n\t\tconst nodeVarying = builder.getVaryingFromNode( this, name, type );\r\n\r\n\t\t// this property can be used to check if the varying can be optimized for a var\r\n\t\tnodeVarying.needsInterpolation || ( nodeVarying.needsInterpolation = ( builder.shaderStage === 'fragment' ) );\r\n\r\n\t\tconst propertyName = builder.getPropertyName( nodeVarying, NodeShaderStage.VERTEX );\r\n\r\n\t\t// force node run in vertex stage\r\n\t\tbuilder.flowNodeFromShaderStage( NodeShaderStage.VERTEX, node, type, propertyName );\r\n\r\n\t\treturn builder.getPropertyName( nodeVarying );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default VaryingNode;\r\n\r\nexport const varying = nodeProxy( VaryingNode );\r\n\r\naddNodeElement( 'varying', varying );\r\n\r\naddNodeClass( 'VaryingNode', VaryingNode );\r\n", "import Node, { addNodeClass } from './Node.js';\r\nimport { varying } from './VaryingNode.js';\r\nimport { nodeObject } from '../shadernode/ShaderNode.js';\r\n\r\nclass AttributeNode extends Node {\r\n\r\n\tconstructor( attributeName, nodeType = null ) {\r\n\r\n\t\tsuper( nodeType );\r\n\r\n\t\tthis._attributeName = attributeName;\r\n\r\n\t}\r\n\r\n\tisGlobal() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tgetHash( builder ) {\r\n\r\n\t\treturn this.getAttributeName( builder );\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tlet nodeType = super.getNodeType( builder );\r\n\r\n\t\tif ( nodeType === null ) {\r\n\r\n\t\t\tconst attributeName = this.getAttributeName( builder );\r\n\r\n\t\t\tif ( builder.hasGeometryAttribute( attributeName ) ) {\r\n\r\n\t\t\t\tconst attribute = builder.geometry.getAttribute( attributeName );\r\n\r\n\t\t\t\tnodeType = builder.getTypeFromAttribute( attribute );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnodeType = 'float';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn nodeType;\r\n\r\n\t}\r\n\r\n\tsetAttributeName( attributeName ) {\r\n\r\n\t\tthis._attributeName = attributeName;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetAttributeName( /*builder*/ ) {\r\n\r\n\t\treturn this._attributeName;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst attributeName = this.getAttributeName( builder );\r\n\t\tconst nodeType = this.getNodeType( builder );\r\n\t\tconst geometryAttribute = builder.hasGeometryAttribute( attributeName );\r\n\r\n\t\tif ( geometryAttribute === true ) {\r\n\r\n\t\t\tconst attribute = builder.geometry.getAttribute( attributeName );\r\n\t\t\tconst attributeType = builder.getTypeFromAttribute( attribute );\r\n\r\n\t\t\tconst nodeAttribute = builder.getAttribute( attributeName, attributeType );\r\n\r\n\t\t\tif ( builder.shaderStage === 'vertex' ) {\r\n\r\n\t\t\t\treturn builder.format( nodeAttribute.name, attributeType, nodeType );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst nodeVarying = varying( this );\r\n\r\n\t\t\t\treturn nodeVarying.build( builder, nodeType );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( `AttributeNode: Vertex attribute \"${ attributeName }\" not found on geometry.` );\r\n\r\n\t\t\treturn builder.generateConst( nodeType );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default AttributeNode;\r\n\r\nexport const attribute = ( name, nodeType ) => nodeObject( new AttributeNode( name, nodeType ) );\r\n\r\naddNodeClass( 'AttributeNode', AttributeNode );\r\n", "import Node, { addNodeClass } from './Node.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass BypassNode extends Node {\r\n\r\n\tconstructor( returnNode, callNode ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isBypassNode = true;\r\n\r\n\t\tthis.outputNode = returnNode;\r\n\t\tthis.callNode = callNode;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.outputNode.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst snippet = this.callNode.build( builder, 'void' );\r\n\r\n\t\tif ( snippet !== '' ) {\r\n\r\n\t\t\tbuilder.addLineFlowCode( snippet );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.outputNode.build( builder );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default BypassNode;\r\n\r\nexport const bypass = nodeProxy( BypassNode );\r\n\r\naddNodeElement( 'bypass', bypass );\r\n\r\naddNodeClass( 'BypassNode', BypassNode );\r\n", "let id = 0;\r\n\r\nclass NodeCache {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.id = id ++;\r\n\t\tthis.nodesData = new WeakMap();\r\n\r\n\t}\r\n\r\n\tgetNodeData( node ) {\r\n\r\n\t\treturn this.nodesData.get( node );\r\n\r\n\t}\r\n\r\n\tsetNodeData( node, data ) {\r\n\r\n\t\tthis.nodesData.set( node, data );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeCache;\r\n", "import Node, { addNodeClass } from './Node.js';\r\nimport NodeCache from './NodeCache.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass CacheNode extends Node {\r\n\r\n\tconstructor( node, cache = new NodeCache() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isCacheNode = true;\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.cache = cache;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.node.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tbuild( builder, ...params ) {\r\n\r\n\t\tconst previousCache = builder.getCache();\r\n\t\tconst cache = this.cache || builder.globalCache;\r\n\r\n\t\tbuilder.setCache( cache );\r\n\r\n\t\tconst data = this.node.build( builder, ...params );\r\n\r\n\t\tbuilder.setCache( previousCache );\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default CacheNode;\r\n\r\nexport const cache = nodeProxy( CacheNode );\r\nexport const globalCache = ( node ) => cache( node, null );\r\n\r\naddNodeElement( 'cache', cache );\r\naddNodeElement( 'globalCache', globalCache );\r\n\r\naddNodeClass( 'CacheNode', CacheNode );\r\n", "import Node, { addNodeClass } from './Node.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass ContextNode extends Node {\r\n\r\n\tconstructor( node, context = {} ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isContextNode = true;\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.context = context;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.node.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst previousContext = builder.getContext();\r\n\r\n\t\tbuilder.setContext( { ...builder.context, ...this.context } );\r\n\r\n\t\tconst node = this.node.build( builder );\r\n\r\n\t\tbuilder.setContext( previousContext );\r\n\r\n\t\treturn node;\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst previousContext = builder.getContext();\r\n\r\n\t\tbuilder.setContext( { ...builder.context, ...this.context } );\r\n\r\n\t\tconst snippet = this.node.build( builder, output );\r\n\r\n\t\tbuilder.setContext( previousContext );\r\n\r\n\t\treturn snippet;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ContextNode;\r\n\r\nexport const context = nodeProxy( ContextNode );\r\nexport const label = ( node, name ) => context( node, { label: name } );\r\n\r\naddNodeElement( 'context', context );\r\naddNodeElement( 'label', label );\r\n\r\naddNodeClass( 'ContextNode', ContextNode );\r\n", "import Node, { addNodeClass } from './Node.js';\r\nimport { varying } from './VaryingNode.js';\r\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\r\n\r\nclass IndexNode extends Node {\r\n\r\n\tconstructor( scope ) {\r\n\r\n\t\tsuper( 'uint' );\r\n\r\n\t\tthis.scope = scope;\r\n\r\n\t\tthis.isInstanceIndexNode = true;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst nodeType = this.getNodeType( builder );\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tlet propertyName;\r\n\r\n\t\tif ( scope === IndexNode.VERTEX ) {\r\n\r\n\t\t\tpropertyName = builder.getVertexIndex();\r\n\r\n\t\t} else if ( scope === IndexNode.INSTANCE ) {\r\n\r\n\t\t\tpropertyName = builder.getInstanceIndex();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'THREE.IndexNode: Unknown scope: ' + scope );\r\n\r\n\t\t}\r\n\r\n\t\tlet output;\r\n\r\n\t\tif ( builder.shaderStage === 'vertex' || builder.shaderStage === 'compute' ) {\r\n\r\n\t\t\toutput = propertyName;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst nodeVarying = varying( this );\r\n\r\n\t\t\toutput = nodeVarying.build( builder, nodeType );\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n}\r\n\r\nIndexNode.VERTEX = 'vertex';\r\nIndexNode.INSTANCE = 'instance';\r\n\r\nexport default IndexNode;\r\n\r\nexport const vertexIndex = nodeImmutable( IndexNode, IndexNode.VERTEX );\r\nexport const instanceIndex = nodeImmutable( IndexNode, IndexNode.INSTANCE );\r\n\r\naddNodeClass( 'IndexNode', IndexNode );\r\n", "class LightingModel {\r\n\r\n\tstart( /*input, stack, builder*/ ) { }\r\n\r\n\tfinish( /*input, stack, builder*/ ) { }\r\n\r\n\tdirect( /*input, stack, builder*/ ) { }\r\n\r\n\tindirectDiffuse( /*input, stack, builder*/ ) { }\r\n\r\n\tindirectSpecular( /*input, stack, builder*/ ) { }\r\n\r\n\tambientOcclusion( /*input, stack, builder*/ ) { }\r\n\r\n}\r\n\r\nexport default LightingModel;\r\n", "import Node, { addNodeClass } from './Node.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass VarNode extends Node {\r\n\r\n\tconstructor( node, name = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.name = name;\r\n\r\n\t\tthis.isVarNode = true;\r\n\r\n\t}\r\n\r\n\tisGlobal() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tgetHash( builder ) {\r\n\r\n\t\treturn this.name || super.getHash( builder );\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.node.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst { node, name } = this;\r\n\r\n\t\tconst nodeVar = builder.getVarFromNode( this, name, builder.getVectorType( this.getNodeType( builder ) ) );\r\n\r\n\t\tconst propertyName = builder.getPropertyName( nodeVar );\r\n\r\n\t\tconst snippet = node.build( builder, nodeVar.type );\r\n\r\n\t\tbuilder.addLineFlowCode( `${propertyName} = ${snippet}` );\r\n\r\n\t\treturn propertyName;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default VarNode;\r\n\r\nexport const temp = nodeProxy( VarNode );\r\n\r\naddNodeElement( 'temp', temp ); // @TODO: Will be removed in the future\r\naddNodeElement( 'toVar', ( ...params ) => temp( ...params ).append() );\r\n\r\naddNodeClass( 'VarNode', VarNode );\r\n", "class NodeAttribute {\r\n\r\n\tconstructor( name, type, node = null ) {\r\n\r\n\t\tthis.isNodeAttribute = true;\r\n\r\n\t\tthis.name = name;\r\n\t\tthis.type = type;\r\n\t\tthis.node = node;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeAttribute;\r\n", "class NodeUniform {\r\n\r\n\tconstructor( name, type, node, needsUpdate = undefined ) {\r\n\r\n\t\tthis.isNodeUniform = true;\r\n\r\n\t\tthis.name = name;\r\n\t\tthis.type = type;\r\n\t\tthis.node = node.getSelf();\r\n\t\tthis.needsUpdate = needsUpdate;\r\n\r\n\t}\r\n\r\n\tget value() {\r\n\r\n\t\treturn this.node.value;\r\n\r\n\t}\r\n\r\n\tset value( val ) {\r\n\r\n\t\tthis.node.value = val;\r\n\r\n\t}\r\n\r\n\tget id() {\r\n\r\n\t\treturn this.node.id;\r\n\r\n\t}\r\n\r\n\tget groupNode() {\r\n\r\n\t\treturn this.node.groupNode;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeUniform;\r\n", "class NodeVar {\r\n\r\n\tconstructor( name, type ) {\r\n\r\n\t\tthis.isNodeVar = true;\r\n\r\n\t\tthis.name = name;\r\n\t\tthis.type = type;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeVar;\r\n", "import NodeVar from './NodeVar.js';\r\n\r\nclass NodeVarying extends NodeVar {\r\n\r\n\tconstructor( name, type ) {\r\n\r\n\t\tsuper( name, type );\r\n\r\n\t\tthis.needsInterpolation = false;\r\n\r\n\t\tthis.isNodeVarying = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeVarying;\r\n", "class NodeCode {\r\n\r\n\tconstructor( name, type, code = '' ) {\r\n\r\n\t\tthis.name = name;\r\n\t\tthis.type = type;\r\n\t\tthis.code = code;\r\n\r\n\t\tObject.defineProperty( this, 'isNodeCode', { value: true } );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeCode;\r\n", "class NodeKeywords {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.keywords = [];\r\n\t\tthis.nodes = [];\r\n\t\tthis.keywordsCallback = {};\r\n\r\n\t}\r\n\r\n\tgetNode( name ) {\r\n\r\n\t\tlet node = this.nodes[ name ];\r\n\r\n\t\tif ( node === undefined && this.keywordsCallback[ name ] !== undefined ) {\r\n\r\n\t\t\tnode = this.keywordsCallback[ name ]( name );\r\n\r\n\t\t\tthis.nodes[ name ] = node;\r\n\r\n\t\t}\r\n\r\n\t\treturn node;\r\n\r\n\t}\r\n\r\n\taddKeyword( name, callback ) {\r\n\r\n\t\tthis.keywords.push( name );\r\n\t\tthis.keywordsCallback[ name ] = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tparse( code ) {\r\n\r\n\t\tconst keywordNames = this.keywords;\r\n\r\n\t\tconst regExp = new RegExp( `\\\\b${keywordNames.join( '\\\\b|\\\\b' )}\\\\b`, 'g' );\r\n\r\n\t\tconst codeKeywords = code.match( regExp );\r\n\r\n\t\tconst keywordNodes = [];\r\n\r\n\t\tif ( codeKeywords !== null ) {\r\n\r\n\t\t\tfor ( const keyword of codeKeywords ) {\r\n\r\n\t\t\t\tconst node = this.getNode( keyword );\r\n\r\n\t\t\t\tif ( node !== undefined && keywordNodes.indexOf( node ) === - 1 ) {\r\n\r\n\t\t\t\t\tkeywordNodes.push( node );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keywordNodes;\r\n\r\n\t}\r\n\r\n\tinclude( builder, code ) {\r\n\r\n\t\tconst keywordNodes = this.parse( code );\r\n\r\n\t\tfor ( const keywordNode of keywordNodes ) {\r\n\r\n\t\t\tkeywordNode.build( builder );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeKeywords;\r\n", "import Node, { addNodeClass } from './Node.js';\r\nimport { nodeImmutable, nodeObject } from '../shadernode/ShaderNode.js';\r\n\r\nclass PropertyNode extends Node {\r\n\r\n\tconstructor( nodeType, name = null, varying = false ) {\r\n\r\n\t\tsuper( nodeType );\r\n\r\n\t\tthis.name = name;\r\n\t\tthis.varying = varying;\r\n\r\n\t\tthis.isPropertyNode = true;\r\n\r\n\t}\r\n\r\n\tgetHash( builder ) {\r\n\r\n\t\treturn this.name || super.getHash( builder );\r\n\r\n\t}\r\n\r\n\tisGlobal( /*builder*/ ) {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tlet nodeVar;\r\n\r\n\t\tif ( this.varying === true ) {\r\n\r\n\t\t\tnodeVar = builder.getVaryingFromNode( this, this.name );\r\n\t\t\tnodeVar.needsInterpolation = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnodeVar = builder.getVarFromNode( this, this.name );\r\n\r\n\t\t}\r\n\r\n\t\treturn builder.getPropertyName( nodeVar );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default PropertyNode;\r\n\r\nexport const property = ( type, name ) => nodeObject( new PropertyNode( type, name ) );\r\nexport const varyingProperty = ( type, name ) => nodeObject( new PropertyNode( type, name, true ) );\r\n\r\nexport const diffuseColor = nodeImmutable( PropertyNode, 'vec4', 'DiffuseColor' );\r\nexport const roughness = nodeImmutable( PropertyNode, 'float', 'Roughness' );\r\nexport const metalness = nodeImmutable( PropertyNode, 'float', 'Metalness' );\r\nexport const clearcoat = nodeImmutable( PropertyNode, 'float', 'Clearcoat' );\r\nexport const clearcoatRoughness = nodeImmutable( PropertyNode, 'float', 'ClearcoatRoughness' );\r\nexport const sheen = nodeImmutable( PropertyNode, 'vec3', 'Sheen' );\r\nexport const sheenRoughness = nodeImmutable( PropertyNode, 'float', 'SheenRoughness' );\r\nexport const iridescence = nodeImmutable( PropertyNode, 'float', 'Iridescence' );\r\nexport const iridescenceIOR = nodeImmutable( PropertyNode, 'float', 'IridescenceIOR' );\r\nexport const iridescenceThickness = nodeImmutable( PropertyNode, 'float', 'IridescenceThickness' );\r\nexport const specularColor = nodeImmutable( PropertyNode, 'color', 'SpecularColor' );\r\nexport const shininess = nodeImmutable( PropertyNode, 'float', 'Shininess' );\r\nexport const output = nodeImmutable( PropertyNode, 'vec4', 'Output' );\r\nexport const dashSize = nodeImmutable( PropertyNode, 'float', 'dashSize' );\r\nexport const gapSize = nodeImmutable( PropertyNode, 'float', 'gapSize' );\r\nexport const pointWidth = nodeImmutable( PropertyNode, 'float', 'pointWidth' );\r\n\r\naddNodeClass( 'PropertyNode', PropertyNode );\r\n", "import { addNodeClass } from './Node.js';\r\nimport { nodeObject } from '../shadernode/ShaderNode.js';\r\nimport PropertyNode from './PropertyNode.js';\r\n\r\nclass ParameterNode extends PropertyNode {\r\n\r\n\tconstructor( nodeType, name = null ) {\r\n\r\n\t\tsuper( nodeType, name );\r\n\r\n\t\tthis.isParameterNode = true;\r\n\r\n\t}\r\n\r\n\tgetHash() {\r\n\r\n\t\treturn this.uuid;\r\n\r\n\t}\r\n\r\n\tgenerate() {\r\n\r\n\t\treturn this.name;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ParameterNode;\r\n\r\nexport const parameter = ( type, name ) => nodeObject( new ParameterNode( type, name ) );\r\n\r\naddNodeClass( 'ParameterNode', ParameterNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass CodeNode extends Node {\r\n\r\n\tconstructor( code = '', includes = [], language = '' ) {\r\n\r\n\t\tsuper( 'code' );\r\n\r\n\t\tthis.isCodeNode = true;\r\n\r\n\t\tthis.code = code;\r\n\t\tthis.language = language;\r\n\r\n\t\tthis.includes = includes;\r\n\r\n\t}\r\n\r\n\tisGlobal() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tsetIncludes( includes ) {\r\n\r\n\t\tthis.includes = includes;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetIncludes( /*builder*/ ) {\r\n\r\n\t\treturn this.includes;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst includes = this.getIncludes( builder );\r\n\r\n\t\tfor ( const include of includes ) {\r\n\r\n\t\t\tinclude.build( builder );\r\n\r\n\t\t}\r\n\r\n\t\tconst nodeCode = builder.getCodeFromNode( this, this.getNodeType( builder ) );\r\n\t\tnodeCode.code = this.code;\r\n\r\n\t\treturn nodeCode.code;\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.code = this.code;\r\n\t\tdata.language = this.language;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.code = data.code;\r\n\t\tthis.language = data.language;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default CodeNode;\r\n\r\nexport const code = nodeProxy( CodeNode );\r\n\r\nexport const js = ( src, includes ) => code( src, includes, 'js' );\r\nexport const wgsl = ( src, includes ) => code( src, includes, 'wgsl' );\r\nexport const glsl = ( src, includes ) => code( src, includes, 'glsl' );\r\n\r\naddNodeClass( 'CodeNode', CodeNode );\r\n", "import CodeNode from './CodeNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { nodeObject } from '../shadernode/ShaderNode.js';\r\n\r\nclass FunctionNode extends CodeNode {\r\n\r\n\tconstructor( code = '', includes = [], language = '' ) {\r\n\r\n\t\tsuper( code, includes, language );\r\n\r\n\t\tthis.keywords = {};\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.getNodeFunction( builder ).type;\r\n\r\n\t}\r\n\r\n\tgetInputs( builder ) {\r\n\r\n\t\treturn this.getNodeFunction( builder ).inputs;\r\n\r\n\t}\r\n\r\n\tgetNodeFunction( builder ) {\r\n\r\n\t\tconst nodeData = builder.getDataFromNode( this );\r\n\r\n\t\tlet nodeFunction = nodeData.nodeFunction;\r\n\r\n\t\tif ( nodeFunction === undefined ) {\r\n\r\n\t\t\tnodeFunction = builder.parser.parseFunction( this.code );\r\n\r\n\t\t\tnodeData.nodeFunction = nodeFunction;\r\n\r\n\t\t}\r\n\r\n\t\treturn nodeFunction;\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tsuper.generate( builder );\r\n\r\n\t\tconst nodeFunction = this.getNodeFunction( builder );\r\n\r\n\t\tconst name = nodeFunction.name;\r\n\t\tconst type = nodeFunction.type;\r\n\r\n\t\tconst nodeCode = builder.getCodeFromNode( this, type );\r\n\r\n\t\tif ( name !== '' ) {\r\n\r\n\t\t\t// use a custom property name\r\n\r\n\t\t\tnodeCode.name = name;\r\n\r\n\t\t}\r\n\r\n\t\tconst propertyName = builder.getPropertyName( nodeCode );\r\n\r\n\t\tlet code = this.getNodeFunction( builder ).getCode( propertyName );\r\n\r\n\t\tconst keywords = this.keywords;\r\n\t\tconst keywordsProperties = Object.keys( keywords );\r\n\r\n\t\tif ( keywordsProperties.length > 0 ) {\r\n\r\n\t\t\tfor ( const property of keywordsProperties ) {\r\n\r\n\t\t\t\tconst propertyRegExp = new RegExp( `\\\\b${property}\\\\b`, 'g' );\r\n\t\t\t\tconst nodeProperty = keywords[ property ].build( builder, 'property' );\r\n\r\n\t\t\t\tcode = code.replace( propertyRegExp, nodeProperty );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tnodeCode.code = code + '\\n';\r\n\r\n\t\tif ( output === 'property' ) {\r\n\r\n\t\t\treturn propertyName;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn builder.format( `${ propertyName }()`, type, output );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default FunctionNode;\r\n\r\nconst nativeFn = ( code, includes = [], language = '' ) => {\r\n\r\n\tfor ( let i = 0; i < includes.length; i ++ ) {\r\n\r\n\t\tconst include = includes[ i ];\r\n\r\n\t\t// TSL Function: glslFn, wgslFn\r\n\r\n\t\tif ( typeof include === 'function' ) {\r\n\r\n\t\t\tincludes[ i ] = include.functionNode;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst functionNode = nodeObject( new FunctionNode( code, includes, language ) );\r\n\r\n\tconst fn = ( ...params ) => functionNode.call( ...params );\r\n\tfn.functionNode = functionNode;\r\n\r\n\treturn fn;\r\n\r\n};\r\n\r\nexport const glslFn = ( code, includes ) => nativeFn( code, includes, 'glsl' );\r\nexport const wgslFn = ( code, includes ) => nativeFn( code, includes, 'wgsl' );\r\n\r\nexport const func = ( code, includes ) => { // @deprecated, r154\r\n\r\n\tconsole.warn( 'TSL: func() is deprecated. Use nativeFn(), wgslFn() or glslFn() instead.' );\r\n\r\n\treturn nodeObject( new FunctionNode( code, includes ) );\r\n\r\n};\r\n\r\naddNodeClass( 'FunctionNode', FunctionNode );\r\n", "import Node from './Node.js';\r\nimport { addNodeClass } from './Node.js';\r\n\r\nclass UniformGroupNode extends Node {\r\n\r\n\tconstructor( name, shared = false ) {\r\n\r\n\t\tsuper( 'string' );\r\n\r\n\t\tthis.name = name;\r\n\t\tthis.version = 0;\r\n\r\n\t\tthis.shared = shared;\r\n\r\n\t\tthis.isUniformGroup = true;\r\n\r\n\t}\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport const uniformGroup = ( name ) => new UniformGroupNode( name );\r\nexport const sharedUniformGroup = ( name ) => new UniformGroupNode( name, true );\r\n\r\nexport const frameGroup = sharedUniformGroup( 'frame' );\r\nexport const renderGroup = sharedUniformGroup( 'render' );\r\nexport const objectGroup = uniformGroup( 'object' );\r\n\r\nexport default UniformGroupNode;\r\n\r\naddNodeClass( 'UniformGroupNode', UniformGroupNode );\r\n", "import InputNode from './InputNode.js';\r\nimport { objectGroup } from './UniformGroupNode.js';\r\nimport { addNodeClass } from './Node.js';\r\nimport { nodeObject, getConstNodeType } from '../shadernode/ShaderNode.js';\r\n\r\nclass UniformNode extends InputNode {\r\n\r\n\tconstructor( value, nodeType = null ) {\r\n\r\n\t\tsuper( value, nodeType );\r\n\r\n\t\tthis.isUniformNode = true;\r\n\r\n\t\tthis.groupNode = objectGroup;\r\n\r\n\t}\r\n\r\n\tsetGroup( group ) {\r\n\r\n\t\tthis.groupNode = group;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetGroup() {\r\n\r\n\t\treturn this.groupNode;\r\n\r\n\t}\r\n\r\n\tgetUniformHash( builder ) {\r\n\r\n\t\treturn this.getHash( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst type = this.getNodeType( builder );\r\n\r\n\t\tconst hash = this.getUniformHash( builder );\r\n\r\n\t\tlet sharedNode = builder.getNodeFromHash( hash );\r\n\r\n\t\tif ( sharedNode === undefined ) {\r\n\r\n\t\t\tbuilder.setHashNode( this, hash );\r\n\r\n\t\t\tsharedNode = this;\r\n\r\n\t\t}\r\n\r\n\t\tconst sharedNodeType = sharedNode.getInputType( builder );\r\n\r\n\t\tconst nodeUniform = builder.getUniformFromNode( sharedNode, sharedNodeType, builder.shaderStage, builder.context.label );\r\n\t\tconst propertyName = builder.getPropertyName( nodeUniform );\r\n\r\n\t\tif ( builder.context.label !== undefined ) delete builder.context.label;\r\n\r\n\t\treturn builder.format( propertyName, type, output );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default UniformNode;\r\n\r\nexport const uniform = ( arg1, arg2 ) => {\r\n\r\n\tconst nodeType = getConstNodeType( arg2 || arg1 );\r\n\r\n\t// @TODO: get ConstNode from .traverse() in the future\r\n\tconst value = ( arg1 && arg1.isNode === true ) ? ( arg1.node && arg1.node.value ) || arg1.value : arg1;\r\n\r\n\treturn nodeObject( new UniformNode( value, nodeType ) );\r\n\r\n};\r\n\r\naddNodeClass( 'UniformNode', UniformNode );\r\n", "import { addNodeClass } from '../core/Node.js';\r\nimport AttributeNode from '../core/AttributeNode.js';\r\nimport { nodeObject } from '../shadernode/ShaderNode.js';\r\n\r\nclass UVNode extends AttributeNode {\r\n\r\n\tconstructor( index = 0 ) {\r\n\r\n\t\tsuper( null, 'vec2' );\r\n\r\n\t\tthis.isUVNode = true;\r\n\r\n\t\tthis.index = index;\r\n\r\n\t}\r\n\r\n\tgetAttributeName( /*builder*/ ) {\r\n\r\n\t\tconst index = this.index;\r\n\r\n\t\treturn 'uv' + ( index > 0 ? index : '' );\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.index = this.index;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.index = data.index;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default UVNode;\r\n\r\nexport const uv = ( ...params ) => nodeObject( new UVNode( ...params ) );\r\n\r\naddNodeClass( 'UVNode', UVNode );\r\n", "import Node from '../core/Node.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass TextureSizeNode extends Node {\r\n\r\n\tconstructor( textureNode, levelNode = null ) {\r\n\r\n\t\tsuper( 'uvec2' );\r\n\r\n\t\tthis.isTextureSizeNode = true;\r\n\r\n\t\tthis.textureNode = textureNode;\r\n\t\tthis.levelNode = levelNode;\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst textureProperty = this.textureNode.build( builder, 'property' );\r\n\t\tconst levelNode = this.levelNode.build( builder, 'int' );\r\n\r\n\t\treturn builder.format( `${builder.getMethod( 'textureDimensions' )}( ${textureProperty}, ${levelNode} )`, this.getNodeType( builder ), output );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default TextureSizeNode;\r\n\r\nexport const textureSize = nodeProxy( TextureSizeNode );\r\n\r\naddNodeElement( 'textureSize', textureSize );\r\n\r\naddNodeClass( 'TextureSizeNode', TextureSizeNode );\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass OperatorNode extends TempNode {\r\n\r\n\tconstructor( op, aNode, bNode, ...params ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.op = op;\r\n\r\n\t\tif ( params.length > 0 ) {\r\n\r\n\t\t\tlet finalBNode = bNode;\r\n\r\n\t\t\tfor ( let i = 0; i < params.length; i ++ ) {\r\n\r\n\t\t\t\tfinalBNode = new OperatorNode( op, finalBNode, params[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbNode = finalBNode;\r\n\r\n\t\t}\r\n\r\n\t\tthis.aNode = aNode;\r\n\t\tthis.bNode = bNode;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder, output ) {\r\n\r\n\t\tconst op = this.op;\r\n\r\n\t\tconst aNode = this.aNode;\r\n\t\tconst bNode = this.bNode;\r\n\r\n\t\tconst typeA = aNode.getNodeType( builder );\r\n\t\tconst typeB = typeof bNode !== 'undefined' ? bNode.getNodeType( builder ) : null;\r\n\r\n\t\tif ( typeA === 'void' || typeB === 'void' ) {\r\n\r\n\t\t\treturn 'void';\r\n\r\n\t\t} else if ( op === '%' ) {\r\n\r\n\t\t\treturn typeA;\r\n\r\n\t\t} else if ( op === '~' || op === '&' || op === '|' || op === '^' || op === '>>' || op === '<<' ) {\r\n\r\n\t\t\treturn builder.getIntegerType( typeA );\r\n\r\n\t\t} else if ( op === '!' || op === '==' || op === '&&' || op === '||' || op === '^^' ) {\r\n\r\n\t\t\treturn 'bool';\r\n\r\n\t\t} else if ( op === '<' || op === '>' || op === '<=' || op === '>=' ) {\r\n\r\n\t\t\tconst typeLength = output ? builder.getTypeLength( output ) : Math.max( builder.getTypeLength( typeA ), builder.getTypeLength( typeB ) );\r\n\r\n\t\t\treturn typeLength > 1 ? `bvec${ typeLength }` : 'bool';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( typeA === 'float' && builder.isMatrix( typeB ) ) {\r\n\r\n\t\t\t\treturn typeB;\r\n\r\n\t\t\t} else if ( builder.isMatrix( typeA ) && builder.isVector( typeB ) ) {\r\n\r\n\t\t\t\t// matrix x vector\r\n\r\n\t\t\t\treturn builder.getVectorFromMatrix( typeA );\r\n\r\n\t\t\t} else if ( builder.isVector( typeA ) && builder.isMatrix( typeB ) ) {\r\n\r\n\t\t\t\t// vector x matrix\r\n\r\n\t\t\t\treturn builder.getVectorFromMatrix( typeB );\r\n\r\n\t\t\t} else if ( builder.getTypeLength( typeB ) > builder.getTypeLength( typeA ) ) {\r\n\r\n\t\t\t\t// anytype x anytype: use the greater length vector\r\n\r\n\t\t\t\treturn typeB;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn typeA;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst op = this.op;\r\n\r\n\t\tconst aNode = this.aNode;\r\n\t\tconst bNode = this.bNode;\r\n\r\n\t\tconst type = this.getNodeType( builder, output );\r\n\r\n\t\tlet typeA = null;\r\n\t\tlet typeB = null;\r\n\r\n\t\tif ( type !== 'void' ) {\r\n\r\n\t\t\ttypeA = aNode.getNodeType( builder );\r\n\t\t\ttypeB = typeof bNode !== 'undefined' ? bNode.getNodeType( builder ) : null;\r\n\r\n\t\t\tif ( op === '<' || op === '>' || op === '<=' || op === '>=' || op === '==' ) {\r\n\r\n\t\t\t\tif ( builder.isVector( typeA ) ) {\r\n\r\n\t\t\t\t\ttypeB = typeA;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttypeA = typeB = 'float';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( op === '>>' || op === '<<' ) {\r\n\r\n\t\t\t\ttypeA = type;\r\n\t\t\t\ttypeB = builder.changeComponentType( typeB, 'uint' );\r\n\r\n\t\t\t} else if ( builder.isMatrix( typeA ) && builder.isVector( typeB ) ) {\r\n\r\n\t\t\t\t// matrix x vector\r\n\r\n\t\t\t\ttypeB = builder.getVectorFromMatrix( typeA );\r\n\r\n\t\t\t} else if ( builder.isVector( typeA ) && builder.isMatrix( typeB ) ) {\r\n\r\n\t\t\t\t// vector x matrix\r\n\r\n\t\t\t\ttypeA = builder.getVectorFromMatrix( typeB );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// anytype x anytype\r\n\r\n\t\t\t\ttypeA = typeB = type;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttypeA = typeB = type;\r\n\r\n\t\t}\r\n\r\n\t\tconst a = aNode.build( builder, typeA );\r\n\t\tconst b = typeof bNode !== 'undefined' ? bNode.build( builder, typeB ) : null;\r\n\r\n\t\tconst outputLength = builder.getTypeLength( output );\r\n\t\tconst fnOpSnippet = builder.getFunctionOperator( op );\r\n\r\n\t\tif ( output !== 'void' ) {\r\n\r\n\t\t\tif ( op === '<' && outputLength > 1 ) {\r\n\r\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'lessThan' ) }( ${ a }, ${ b } )`, type, output );\r\n\r\n\t\t\t} else if ( op === '<=' && outputLength > 1 ) {\r\n\r\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'lessThanEqual' ) }( ${ a }, ${ b } )`, type, output );\r\n\r\n\t\t\t} else if ( op === '>' && outputLength > 1 ) {\r\n\r\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'greaterThan' ) }( ${ a }, ${ b } )`, type, output );\r\n\r\n\t\t\t} else if ( op === '>=' && outputLength > 1 ) {\r\n\r\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'greaterThanEqual' ) }( ${ a }, ${ b } )`, type, output );\r\n\r\n\t\t\t} else if ( op === '!' || op === '~' ) {\r\n\r\n\t\t\t\treturn builder.format( `(${op}${a})`, typeA, output );\r\n\r\n\t\t\t} else if ( fnOpSnippet ) {\r\n\r\n\t\t\t\treturn builder.format( `${ fnOpSnippet }( ${ a }, ${ b } )`, type, output );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn builder.format( `( ${ a } ${ op } ${ b } )`, type, output );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( typeA !== 'void' ) {\r\n\r\n\t\t\tif ( fnOpSnippet ) {\r\n\r\n\t\t\t\treturn builder.format( `${ fnOpSnippet }( ${ a }, ${ b } )`, type, output );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn builder.format( `${ a } ${ op } ${ b }`, type, output );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.op = this.op;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.op = data.op;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default OperatorNode;\r\n\r\nexport const add = nodeProxy( OperatorNode, '+' );\r\nexport const sub = nodeProxy( OperatorNode, '-' );\r\nexport const mul = nodeProxy( OperatorNode, '*' );\r\nexport const div = nodeProxy( OperatorNode, '/' );\r\nexport const remainder = nodeProxy( OperatorNode, '%' );\r\nexport const equal = nodeProxy( OperatorNode, '==' );\r\nexport const notEqual = nodeProxy( OperatorNode, '!=' );\r\nexport const lessThan = nodeProxy( OperatorNode, '<' );\r\nexport const greaterThan = nodeProxy( OperatorNode, '>' );\r\nexport const lessThanEqual = nodeProxy( OperatorNode, '<=' );\r\nexport const greaterThanEqual = nodeProxy( OperatorNode, '>=' );\r\nexport const and = nodeProxy( OperatorNode, '&&' );\r\nexport const or = nodeProxy( OperatorNode, '||' );\r\nexport const not = nodeProxy( OperatorNode, '!' );\r\nexport const xor = nodeProxy( OperatorNode, '^^' );\r\nexport const bitAnd = nodeProxy( OperatorNode, '&' );\r\nexport const bitNot = nodeProxy( OperatorNode, '~' );\r\nexport const bitOr = nodeProxy( OperatorNode, '|' );\r\nexport const bitXor = nodeProxy( OperatorNode, '^' );\r\nexport const shiftLeft = nodeProxy( OperatorNode, '<<' );\r\nexport const shiftRight = nodeProxy( OperatorNode, '>>' );\r\n\r\naddNodeElement( 'add', add );\r\naddNodeElement( 'sub', sub );\r\naddNodeElement( 'mul', mul );\r\naddNodeElement( 'div', div );\r\naddNodeElement( 'remainder', remainder );\r\naddNodeElement( 'equal', equal );\r\naddNodeElement( 'notEqual', notEqual );\r\naddNodeElement( 'lessThan', lessThan );\r\naddNodeElement( 'greaterThan', greaterThan );\r\naddNodeElement( 'lessThanEqual', lessThanEqual );\r\naddNodeElement( 'greaterThanEqual', greaterThanEqual );\r\naddNodeElement( 'and', and );\r\naddNodeElement( 'or', or );\r\naddNodeElement( 'not', not );\r\naddNodeElement( 'xor', xor );\r\naddNodeElement( 'bitAnd', bitAnd );\r\naddNodeElement( 'bitNot', bitNot );\r\naddNodeElement( 'bitOr', bitOr );\r\naddNodeElement( 'bitXor', bitXor );\r\naddNodeElement( 'shiftLeft', shiftLeft );\r\naddNodeElement( 'shiftRight', shiftRight );\r\n\r\naddNodeClass( 'OperatorNode', OperatorNode );\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { sub, mul, div } from './OperatorNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, nodeObject, nodeProxy, float, vec3, vec4 } from '../shadernode/ShaderNode.js';\r\n\r\nclass MathNode extends TempNode {\r\n\r\n\tconstructor( method, aNode, bNode = null, cNode = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.method = method;\r\n\r\n\t\tthis.aNode = aNode;\r\n\t\tthis.bNode = bNode;\r\n\t\tthis.cNode = cNode;\r\n\r\n\t}\r\n\r\n\tgetInputType( builder ) {\r\n\r\n\t\tconst aType = this.aNode.getNodeType( builder );\r\n\t\tconst bType = this.bNode ? this.bNode.getNodeType( builder ) : null;\r\n\t\tconst cType = this.cNode ? this.cNode.getNodeType( builder ) : null;\r\n\r\n\t\tconst aLen = builder.isMatrix( aType ) ? 0 : builder.getTypeLength( aType );\r\n\t\tconst bLen = builder.isMatrix( bType ) ? 0 : builder.getTypeLength( bType );\r\n\t\tconst cLen = builder.isMatrix( cType ) ? 0 : builder.getTypeLength( cType );\r\n\r\n\t\tif ( aLen > bLen && aLen > cLen ) {\r\n\r\n\t\t\treturn aType;\r\n\r\n\t\t} else if ( bLen > cLen ) {\r\n\r\n\t\t\treturn bType;\r\n\r\n\t\t} else if ( cLen > aLen ) {\r\n\r\n\t\t\treturn cType;\r\n\r\n\t\t}\r\n\r\n\t\treturn aType;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst method = this.method;\r\n\r\n\t\tif ( method === MathNode.LENGTH || method === MathNode.DISTANCE || method === MathNode.DOT ) {\r\n\r\n\t\t\treturn 'float';\r\n\r\n\t\t} else if ( method === MathNode.CROSS ) {\r\n\r\n\t\t\treturn 'vec3';\r\n\r\n\t\t} else if ( method === MathNode.ALL ) {\r\n\r\n\t\t\treturn 'bool';\r\n\r\n\t\t} else if ( method === MathNode.EQUALS ) {\r\n\r\n\t\t\treturn builder.changeComponentType( this.aNode.getNodeType( builder ), 'bool' );\r\n\r\n\t\t} else if ( method === MathNode.MOD ) {\r\n\r\n\t\t\treturn this.aNode.getNodeType( builder );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn this.getInputType( builder );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst method = this.method;\r\n\r\n\t\tconst type = this.getNodeType( builder );\r\n\t\tconst inputType = this.getInputType( builder );\r\n\r\n\t\tconst a = this.aNode;\r\n\t\tconst b = this.bNode;\r\n\t\tconst c = this.cNode;\r\n\r\n\t\tconst isWebGL = builder.renderer.isWebGLRenderer === true;\r\n\r\n\t\tif ( method === MathNode.TRANSFORM_DIRECTION ) {\r\n\r\n\t\t\t// dir can be either a direction vector or a normal vector\r\n\t\t\t// upper-left 3x3 of matrix is assumed to be orthogonal\r\n\r\n\t\t\tlet tA = a;\r\n\t\t\tlet tB = b;\r\n\r\n\t\t\tif ( builder.isMatrix( tA.getNodeType( builder ) ) ) {\r\n\r\n\t\t\t\ttB = vec4( vec3( tB ), 0.0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttA = vec4( vec3( tA ), 0.0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst mulNode = mul( tA, tB ).xyz;\r\n\r\n\t\t\treturn normalize( mulNode ).build( builder, output );\r\n\r\n\t\t} else if ( method === MathNode.NEGATE ) {\r\n\r\n\t\t\treturn builder.format( '( - ' + a.build( builder, inputType ) + ' )', type, output );\r\n\r\n\t\t} else if ( method === MathNode.ONE_MINUS ) {\r\n\r\n\t\t\treturn sub( 1.0, a ).build( builder, output );\r\n\r\n\t\t} else if ( method === MathNode.RECIPROCAL ) {\r\n\r\n\t\t\treturn div( 1.0, a ).build( builder, output );\r\n\r\n\t\t} else if ( method === MathNode.DIFFERENCE ) {\r\n\r\n\t\t\treturn abs( sub( a, b ) ).build( builder, output );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst params = [];\r\n\r\n\t\t\tif ( method === MathNode.CROSS || method === MathNode.MOD ) {\r\n\r\n\t\t\t\tparams.push(\r\n\t\t\t\t\ta.build( builder, type ),\r\n\t\t\t\t\tb.build( builder, type )\r\n\t\t\t\t);\r\n\r\n\t\t\t} else if ( method === MathNode.STEP ) {\r\n\r\n\t\t\t\tparams.push(\r\n\t\t\t\t\ta.build( builder, builder.getTypeLength( a.getNodeType( builder ) ) === 1 ? 'float' : inputType ),\r\n\t\t\t\t\tb.build( builder, inputType )\r\n\t\t\t\t);\r\n\r\n\t\t\t} else if ( ( isWebGL && ( method === MathNode.MIN || method === MathNode.MAX ) ) || method === MathNode.MOD ) {\r\n\r\n\t\t\t\tparams.push(\r\n\t\t\t\t\ta.build( builder, inputType ),\r\n\t\t\t\t\tb.build( builder, builder.getTypeLength( b.getNodeType( builder ) ) === 1 ? 'float' : inputType )\r\n\t\t\t\t);\r\n\r\n\t\t\t} else if ( method === MathNode.REFRACT ) {\r\n\r\n\t\t\t\tparams.push(\r\n\t\t\t\t\ta.build( builder, inputType ),\r\n\t\t\t\t\tb.build( builder, inputType ),\r\n\t\t\t\t\tc.build( builder, 'float' )\r\n\t\t\t\t);\r\n\r\n\t\t\t} else if ( method === MathNode.MIX ) {\r\n\r\n\t\t\t\tparams.push(\r\n\t\t\t\t\ta.build( builder, inputType ),\r\n\t\t\t\t\tb.build( builder, inputType ),\r\n\t\t\t\t\tc.build( builder, builder.getTypeLength( c.getNodeType( builder ) ) === 1 ? 'float' : inputType )\r\n\t\t\t\t);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tparams.push( a.build( builder, inputType ) );\r\n\t\t\t\tif ( b !== null ) params.push( b.build( builder, inputType ) );\r\n\t\t\t\tif ( c !== null ) params.push( c.build( builder, inputType ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn builder.format( `${ builder.getMethod( method, type ) }( ${params.join( ', ' )} )`, type, output );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.method = this.method;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.method = data.method;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// 1 input\r\n\r\nMathNode.ALL = 'all';\r\nMathNode.ANY = 'any';\r\nMathNode.EQUALS = 'equals';\r\n\r\nMathNode.RADIANS = 'radians';\r\nMathNode.DEGREES = 'degrees';\r\nMathNode.EXP = 'exp';\r\nMathNode.EXP2 = 'exp2';\r\nMathNode.LOG = 'log';\r\nMathNode.LOG2 = 'log2';\r\nMathNode.SQRT = 'sqrt';\r\nMathNode.INVERSE_SQRT = 'inversesqrt';\r\nMathNode.FLOOR = 'floor';\r\nMathNode.CEIL = 'ceil';\r\nMathNode.NORMALIZE = 'normalize';\r\nMathNode.FRACT = 'fract';\r\nMathNode.SIN = 'sin';\r\nMathNode.COS = 'cos';\r\nMathNode.TAN = 'tan';\r\nMathNode.ASIN = 'asin';\r\nMathNode.ACOS = 'acos';\r\nMathNode.ATAN = 'atan';\r\nMathNode.ABS = 'abs';\r\nMathNode.SIGN = 'sign';\r\nMathNode.LENGTH = 'length';\r\nMathNode.NEGATE = 'negate';\r\nMathNode.ONE_MINUS = 'oneMinus';\r\nMathNode.DFDX = 'dFdx';\r\nMathNode.DFDY = 'dFdy';\r\nMathNode.ROUND = 'round';\r\nMathNode.RECIPROCAL = 'reciprocal';\r\nMathNode.TRUNC = 'trunc';\r\nMathNode.FWIDTH = 'fwidth';\r\nMathNode.BITCAST = 'bitcast';\r\n\r\n// 2 inputs\r\n\r\nMathNode.ATAN2 = 'atan2';\r\nMathNode.MIN = 'min';\r\nMathNode.MAX = 'max';\r\nMathNode.MOD = 'mod';\r\nMathNode.STEP = 'step';\r\nMathNode.REFLECT = 'reflect';\r\nMathNode.DISTANCE = 'distance';\r\nMathNode.DIFFERENCE = 'difference';\r\nMathNode.DOT = 'dot';\r\nMathNode.CROSS = 'cross';\r\nMathNode.POW = 'pow';\r\nMathNode.TRANSFORM_DIRECTION = 'transformDirection';\r\n\r\n// 3 inputs\r\n\r\nMathNode.MIX = 'mix';\r\nMathNode.CLAMP = 'clamp';\r\nMathNode.REFRACT = 'refract';\r\nMathNode.SMOOTHSTEP = 'smoothstep';\r\nMathNode.FACEFORWARD = 'faceforward';\r\n\r\nexport default MathNode;\r\n\r\nexport const EPSILON = float( 1e-6 );\r\nexport const INFINITY = float( 1e6 );\r\nexport const PI = float( Math.PI );\r\nexport const PI2 = float( Math.PI * 2 );\r\n\r\nexport const all = nodeProxy( MathNode, MathNode.ALL );\r\nexport const any = nodeProxy( MathNode, MathNode.ANY );\r\nexport const equals = nodeProxy( MathNode, MathNode.EQUALS );\r\n\r\nexport const radians = nodeProxy( MathNode, MathNode.RADIANS );\r\nexport const degrees = nodeProxy( MathNode, MathNode.DEGREES );\r\nexport const exp = nodeProxy( MathNode, MathNode.EXP );\r\nexport const exp2 = nodeProxy( MathNode, MathNode.EXP2 );\r\nexport const log = nodeProxy( MathNode, MathNode.LOG );\r\nexport const log2 = nodeProxy( MathNode, MathNode.LOG2 );\r\nexport const sqrt = nodeProxy( MathNode, MathNode.SQRT );\r\nexport const inverseSqrt = nodeProxy( MathNode, MathNode.INVERSE_SQRT );\r\nexport const floor = nodeProxy( MathNode, MathNode.FLOOR );\r\nexport const ceil = nodeProxy( MathNode, MathNode.CEIL );\r\nexport const normalize = nodeProxy( MathNode, MathNode.NORMALIZE );\r\nexport const fract = nodeProxy( MathNode, MathNode.FRACT );\r\nexport const sin = nodeProxy( MathNode, MathNode.SIN );\r\nexport const cos = nodeProxy( MathNode, MathNode.COS );\r\nexport const tan = nodeProxy( MathNode, MathNode.TAN );\r\nexport const asin = nodeProxy( MathNode, MathNode.ASIN );\r\nexport const acos = nodeProxy( MathNode, MathNode.ACOS );\r\nexport const atan = nodeProxy( MathNode, MathNode.ATAN );\r\nexport const abs = nodeProxy( MathNode, MathNode.ABS );\r\nexport const sign = nodeProxy( MathNode, MathNode.SIGN );\r\nexport const length = nodeProxy( MathNode, MathNode.LENGTH );\r\nexport const negate = nodeProxy( MathNode, MathNode.NEGATE );\r\nexport const oneMinus = nodeProxy( MathNode, MathNode.ONE_MINUS );\r\nexport const dFdx = nodeProxy( MathNode, MathNode.DFDX );\r\nexport const dFdy = nodeProxy( MathNode, MathNode.DFDY );\r\nexport const round = nodeProxy( MathNode, MathNode.ROUND );\r\nexport const reciprocal = nodeProxy( MathNode, MathNode.RECIPROCAL );\r\nexport const trunc = nodeProxy( MathNode, MathNode.TRUNC );\r\nexport const fwidth = nodeProxy( MathNode, MathNode.FWIDTH );\r\nexport const bitcast = nodeProxy( MathNode, MathNode.BITCAST );\r\n\r\nexport const atan2 = nodeProxy( MathNode, MathNode.ATAN2 );\r\nexport const min = nodeProxy( MathNode, MathNode.MIN );\r\nexport const max = nodeProxy( MathNode, MathNode.MAX );\r\nexport const mod = nodeProxy( MathNode, MathNode.MOD );\r\nexport const step = nodeProxy( MathNode, MathNode.STEP );\r\nexport const reflect = nodeProxy( MathNode, MathNode.REFLECT );\r\nexport const distance = nodeProxy( MathNode, MathNode.DISTANCE );\r\nexport const difference = nodeProxy( MathNode, MathNode.DIFFERENCE );\r\nexport const dot = nodeProxy( MathNode, MathNode.DOT );\r\nexport const cross = nodeProxy( MathNode, MathNode.CROSS );\r\nexport const pow = nodeProxy( MathNode, MathNode.POW );\r\nexport const pow2 = nodeProxy( MathNode, MathNode.POW, 2 );\r\nexport const pow3 = nodeProxy( MathNode, MathNode.POW, 3 );\r\nexport const pow4 = nodeProxy( MathNode, MathNode.POW, 4 );\r\nexport const transformDirection = nodeProxy( MathNode, MathNode.TRANSFORM_DIRECTION );\r\n\r\nexport const cbrt = ( a ) => mul( sign( a ), pow( abs( a ), 1.0 / 3.0 ) );\r\nexport const lengthSq = ( a ) => dot( a, a );\r\nexport const mix = nodeProxy( MathNode, MathNode.MIX );\r\nexport const clamp = ( value, low = 0, high = 1 ) => nodeObject( new MathNode( MathNode.CLAMP, nodeObject( value ), nodeObject( low ), nodeObject( high ) ) );\r\nexport const saturate = ( value ) => clamp( value );\r\nexport const refract = nodeProxy( MathNode, MathNode.REFRACT );\r\nexport const smoothstep = nodeProxy( MathNode, MathNode.SMOOTHSTEP );\r\nexport const faceForward = nodeProxy( MathNode, MathNode.FACEFORWARD );\r\n\r\nexport const mixElement = ( t, e1, e2 ) => mix( e1, e2, t );\r\nexport const smoothstepElement = ( x, low, high ) => smoothstep( low, high, x );\r\n\r\naddNodeElement( 'all', all );\r\naddNodeElement( 'any', any );\r\naddNodeElement( 'equals', equals );\r\n\r\naddNodeElement( 'radians', radians );\r\naddNodeElement( 'degrees', degrees );\r\naddNodeElement( 'exp', exp );\r\naddNodeElement( 'exp2', exp2 );\r\naddNodeElement( 'log', log );\r\naddNodeElement( 'log2', log2 );\r\naddNodeElement( 'sqrt', sqrt );\r\naddNodeElement( 'inverseSqrt', inverseSqrt );\r\naddNodeElement( 'floor', floor );\r\naddNodeElement( 'ceil', ceil );\r\naddNodeElement( 'normalize', normalize );\r\naddNodeElement( 'fract', fract );\r\naddNodeElement( 'sin', sin );\r\naddNodeElement( 'cos', cos );\r\naddNodeElement( 'tan', tan );\r\naddNodeElement( 'asin', asin );\r\naddNodeElement( 'acos', acos );\r\naddNodeElement( 'atan', atan );\r\naddNodeElement( 'abs', abs );\r\naddNodeElement( 'sign', sign );\r\naddNodeElement( 'length', length );\r\naddNodeElement( 'lengthSq', lengthSq );\r\naddNodeElement( 'negate', negate );\r\naddNodeElement( 'oneMinus', oneMinus );\r\naddNodeElement( 'dFdx', dFdx );\r\naddNodeElement( 'dFdy', dFdy );\r\naddNodeElement( 'round', round );\r\naddNodeElement( 'reciprocal', reciprocal );\r\naddNodeElement( 'trunc', trunc );\r\naddNodeElement( 'fwidth', fwidth );\r\naddNodeElement( 'atan2', atan2 );\r\naddNodeElement( 'min', min );\r\naddNodeElement( 'max', max );\r\naddNodeElement( 'mod', mod );\r\naddNodeElement( 'step', step );\r\naddNodeElement( 'reflect', reflect );\r\naddNodeElement( 'distance', distance );\r\naddNodeElement( 'dot', dot );\r\naddNodeElement( 'cross', cross );\r\naddNodeElement( 'pow', pow );\r\naddNodeElement( 'pow2', pow2 );\r\naddNodeElement( 'pow3', pow3 );\r\naddNodeElement( 'pow4', pow4 );\r\naddNodeElement( 'transformDirection', transformDirection );\r\naddNodeElement( 'mix', mixElement );\r\naddNodeElement( 'clamp', clamp );\r\naddNodeElement( 'refract', refract );\r\naddNodeElement( 'smoothstep', smoothstepElement );\r\naddNodeElement( 'faceForward', faceForward );\r\naddNodeElement( 'difference', difference );\r\naddNodeElement( 'saturate', saturate );\r\naddNodeElement( 'cbrt', cbrt );\r\n\r\naddNodeClass( 'MathNode', MathNode );\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { mix } from '../math/MathNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, tslFn, nodeObject, nodeProxy, vec4 } from '../shadernode/ShaderNode.js';\r\n\r\nimport { LinearSRGBColorSpace, SRGBColorSpace } from 'three';\r\n\r\nconst sRGBToLinearShader = tslFn( ( inputs ) => {\r\n\r\n\tconst { value } = inputs;\r\n\tconst { rgb } = value;\r\n\r\n\tconst a = rgb.mul( 0.9478672986 ).add( 0.0521327014 ).pow( 2.4 );\r\n\tconst b = rgb.mul( 0.0773993808 );\r\n\tconst factor = rgb.lessThanEqual( 0.04045 );\r\n\r\n\tconst rgbResult = mix( a, b, factor );\r\n\r\n\treturn vec4( rgbResult, value.a );\r\n\r\n} );\r\n\r\nconst LinearTosRGBShader = tslFn( ( inputs ) => {\r\n\r\n\tconst { value } = inputs;\r\n\tconst { rgb } = value;\r\n\r\n\tconst a = rgb.pow( 0.41666 ).mul( 1.055 ).sub( 0.055 );\r\n\tconst b = rgb.mul( 12.92 );\r\n\tconst factor = rgb.lessThanEqual( 0.0031308 );\r\n\r\n\tconst rgbResult = mix( a, b, factor );\r\n\r\n\treturn vec4( rgbResult, value.a );\r\n\r\n} );\r\n\r\nconst getColorSpaceMethod = ( colorSpace ) => {\r\n\r\n\tlet method = null;\r\n\r\n\tif ( colorSpace === LinearSRGBColorSpace ) {\r\n\r\n\t\tmethod = 'Linear';\r\n\r\n\t} else if ( colorSpace === SRGBColorSpace ) {\r\n\r\n\t\tmethod = 'sRGB';\r\n\r\n\t}\r\n\r\n\treturn method;\r\n\r\n};\r\n\r\nconst getMethod = ( source, target ) => {\r\n\r\n\treturn getColorSpaceMethod( source ) + 'To' + getColorSpaceMethod( target );\r\n\r\n};\r\n\r\nclass ColorSpaceNode extends TempNode {\r\n\r\n\tconstructor( method, node ) {\r\n\r\n\t\tsuper( 'vec4' );\r\n\r\n\t\tthis.method = method;\r\n\t\tthis.node = node;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst { method, node } = this;\r\n\r\n\t\tif ( method === ColorSpaceNode.LINEAR_TO_LINEAR )\r\n\t\t\treturn node;\r\n\r\n\t\treturn Methods[ method ]( { value: node } );\r\n\r\n\t}\r\n\r\n}\r\n\r\nColorSpaceNode.LINEAR_TO_LINEAR = 'LinearToLinear';\r\nColorSpaceNode.LINEAR_TO_sRGB = 'LinearTosRGB';\r\nColorSpaceNode.sRGB_TO_LINEAR = 'sRGBToLinear';\r\n\r\nconst Methods = {\r\n\t[ ColorSpaceNode.LINEAR_TO_sRGB ]: LinearTosRGBShader,\r\n\t[ ColorSpaceNode.sRGB_TO_LINEAR ]: sRGBToLinearShader\r\n};\r\n\r\nexport default ColorSpaceNode;\r\n\r\nexport const linearToColorSpace = ( node, colorSpace ) => nodeObject( new ColorSpaceNode( getMethod( LinearSRGBColorSpace, colorSpace ), nodeObject( node ) ) );\r\nexport const colorSpaceToLinear = ( node, colorSpace ) => nodeObject( new ColorSpaceNode( getMethod( colorSpace, LinearSRGBColorSpace ), nodeObject( node ) ) );\r\n\r\nexport const linearTosRGB = nodeProxy( ColorSpaceNode, ColorSpaceNode.LINEAR_TO_sRGB );\r\nexport const sRGBToLinear = nodeProxy( ColorSpaceNode, ColorSpaceNode.sRGB_TO_LINEAR );\r\n\r\naddNodeElement( 'linearTosRGB', linearTosRGB );\r\naddNodeElement( 'sRGBToLinear', sRGBToLinear );\r\naddNodeElement( 'linearToColorSpace', linearToColorSpace );\r\naddNodeElement( 'colorSpaceToLinear', colorSpaceToLinear );\r\n\r\naddNodeClass( 'ColorSpaceNode', ColorSpaceNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass ExpressionNode extends Node {\r\n\r\n\tconstructor( snippet = '', nodeType = 'void' ) {\r\n\r\n\t\tsuper( nodeType );\r\n\r\n\t\tthis.snippet = snippet;\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst type = this.getNodeType( builder );\r\n\t\tconst snippet = this.snippet;\r\n\r\n\t\tif ( type === 'void' ) {\r\n\r\n\t\t\tbuilder.addLineFlowCode( snippet );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn builder.format( `( ${ snippet } )`, type, output );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ExpressionNode;\r\n\r\nexport const expression = nodeProxy( ExpressionNode );\r\n\r\naddNodeClass( 'ExpressionNode', ExpressionNode );\r\n", "import UniformNode from '../core/UniformNode.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\n\r\nclass MaxMipLevelNode extends UniformNode {\r\n\r\n\tconstructor( textureNode ) {\r\n\r\n\t\tsuper( 0 );\r\n\r\n\t\tthis.textureNode = textureNode;\r\n\r\n\t\tthis.updateType = NodeUpdateType.FRAME;\r\n\r\n\t}\r\n\r\n\tget texture() {\r\n\r\n\t\treturn this.textureNode.value;\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst texture = this.texture;\r\n\t\tconst images = texture.images;\r\n\t\tconst image = ( images && images.length > 0 ) ? ( ( images[ 0 ] && images[ 0 ].image ) || images[ 0 ] ) : texture.image;\r\n\r\n\t\tif ( image && image.width !== undefined ) {\r\n\r\n\t\t\tconst { width, height } = image;\r\n\r\n\t\t\tthis.value = Math.log2( Math.max( width, height ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default MaxMipLevelNode;\r\n\r\nexport const maxMipLevel = nodeProxy( MaxMipLevelNode );\r\n\r\naddNodeClass( 'MaxMipLevelNode', MaxMipLevelNode );\r\n", "import UniformNode, { uniform } from '../core/UniformNode.js';\r\nimport { uv } from './UVNode.js';\r\nimport { textureSize } from './TextureSizeNode.js';\r\nimport { colorSpaceToLinear } from '../display/ColorSpaceNode.js';\r\nimport { expression } from '../code/ExpressionNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { maxMipLevel } from '../utils/MaxMipLevelNode.js';\r\nimport { addNodeElement, nodeProxy, vec3, nodeObject } from '../shadernode/ShaderNode.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\n\r\nclass TextureNode extends UniformNode {\r\n\r\n\tconstructor( value, uvNode = null, levelNode = null ) {\r\n\r\n\t\tsuper( value );\r\n\r\n\t\tthis.isTextureNode = true;\r\n\r\n\t\tthis.uvNode = uvNode;\r\n\t\tthis.levelNode = levelNode;\r\n\t\tthis.compareNode = null;\r\n\t\tthis.depthNode = null;\r\n\r\n\t\tthis.sampler = true;\r\n\t\tthis.updateMatrix = false;\r\n\t\tthis.updateType = NodeUpdateType.NONE;\r\n\r\n\t\tthis.setUpdateMatrix( uvNode === null );\r\n\r\n\t}\r\n\r\n\tgetUniformHash( /*builder*/ ) {\r\n\r\n\t\treturn this.value.uuid;\r\n\r\n\t}\r\n\r\n\tgetNodeType( /*builder*/ ) {\r\n\r\n\t\tif ( this.value.isDepthTexture === true ) return 'float';\r\n\r\n\t\treturn 'vec4';\r\n\r\n\t}\r\n\r\n\tgetInputType( /*builder*/ ) {\r\n\r\n\t\treturn 'texture';\r\n\r\n\t}\r\n\r\n\tgetDefaultUV() {\r\n\r\n\t\treturn uv( this.value.channel );\r\n\r\n\t}\r\n\r\n\tsetReference( /*state*/ ) {\r\n\r\n\t\treturn this.value;\r\n\r\n\t}\r\n\r\n\tgetTransformedUV( uvNode ) {\r\n\r\n\t\tconst texture = this.value;\r\n\r\n\t\treturn uniform( texture.matrix ).mul( vec3( uvNode, 1 ) ).xy;\r\n\r\n\t}\r\n\r\n\tsetUpdateMatrix( value ) {\r\n\r\n\t\tthis.updateMatrix = value;\r\n\t\tthis.updateType = value ? NodeUpdateType.FRAME : NodeUpdateType.NONE;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetupUV( builder, uvNode ) {\r\n\r\n\t\tconst texture = this.value;\r\n\r\n\t\tif ( builder.isFlipY() && ( texture.isRenderTargetTexture === true || texture.isFramebufferTexture === true || texture.isDepthTexture === true ) ) {\r\n\r\n\t\t\tuvNode = uvNode.setY( uvNode.y.oneMinus() );\r\n\r\n\t\t}\r\n\r\n\t\treturn uvNode;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst properties = builder.getNodeProperties( this );\r\n\r\n\t\t//\r\n\r\n\t\tlet uvNode = this.uvNode;\r\n\r\n\t\tif ( ( uvNode === null || builder.context.forceUVContext === true ) && builder.context.getUV ) {\r\n\r\n\t\t\tuvNode = builder.context.getUV( this );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! uvNode ) uvNode = this.getDefaultUV();\r\n\r\n\t\tif ( this.updateMatrix === true ) {\r\n\r\n\t\t\tuvNode = this.getTransformedUV( uvNode );\r\n\r\n\t\t}\r\n\r\n\t\tuvNode = this.setupUV( builder, uvNode );\r\n\r\n\t\t//\r\n\r\n\t\tlet levelNode = this.levelNode;\r\n\r\n\t\tif ( levelNode === null && builder.context.getTextureLevel ) {\r\n\r\n\t\t\tlevelNode = builder.context.getTextureLevel( this );\r\n\r\n\t\t}\r\n\r\n\t\tif ( levelNode !== null && builder.context.getTextureLevelAlgorithm !== undefined ) {\r\n\r\n\t\t\tlevelNode = builder.context.getTextureLevelAlgorithm( this, levelNode );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tproperties.uvNode = uvNode;\r\n\t\tproperties.levelNode = levelNode;\r\n\t\tproperties.compareNode = this.compareNode;\r\n\t\tproperties.depthNode = this.depthNode;\r\n\r\n\t}\r\n\r\n\tgenerateUV( builder, uvNode ) {\r\n\r\n\t\treturn uvNode.build( builder, this.sampler === true ? 'vec2' : 'ivec2' );\r\n\r\n\t}\r\n\r\n\tgenerateSnippet( builder, textureProperty, uvSnippet, levelSnippet, depthSnippet, compareSnippet ) {\r\n\r\n\t\tconst texture = this.value;\r\n\r\n\t\tlet snippet;\r\n\r\n\t\tif ( levelSnippet ) {\r\n\r\n\t\t\tsnippet = builder.generateTextureLevel( texture, textureProperty, uvSnippet, levelSnippet, depthSnippet );\r\n\r\n\t\t} else if ( compareSnippet ) {\r\n\r\n\t\t\tsnippet = builder.generateTextureCompare( texture, textureProperty, uvSnippet, compareSnippet, depthSnippet );\r\n\r\n\t\t} else if ( this.sampler === false ) {\r\n\r\n\t\t\tsnippet = builder.generateTextureLoad( texture, textureProperty, uvSnippet, depthSnippet );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tsnippet = builder.generateTexture( texture, textureProperty, uvSnippet, depthSnippet );\r\n\r\n\t\t}\r\n\r\n\t\treturn snippet;\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst properties = builder.getNodeProperties( this );\r\n\r\n\t\tconst texture = this.value;\r\n\r\n\t\tif ( ! texture || texture.isTexture !== true ) {\r\n\r\n\t\t\tthrow new Error( 'TextureNode: Need a three.js texture.' );\r\n\r\n\t\t}\r\n\r\n\t\tconst textureProperty = super.generate( builder, 'property' );\r\n\r\n\t\tif ( output === 'sampler' ) {\r\n\r\n\t\t\treturn textureProperty + '_sampler';\r\n\r\n\t\t} else if ( builder.isReference( output ) ) {\r\n\r\n\t\t\treturn textureProperty;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst nodeData = builder.getDataFromNode( this );\r\n\r\n\t\t\tlet propertyName = nodeData.propertyName;\r\n\r\n\t\t\tif ( propertyName === undefined ) {\r\n\r\n\t\t\t\tconst { uvNode, levelNode, compareNode, depthNode } = properties;\r\n\r\n\t\t\t\tconst uvSnippet = this.generateUV( builder, uvNode );\r\n\t\t\t\tconst levelSnippet = levelNode ? levelNode.build( builder, 'float' ) : null;\r\n\t\t\t\tconst depthSnippet = depthNode ? depthNode.build( builder, 'int' ) : null;\r\n\t\t\t\tconst compareSnippet = compareNode ? compareNode.build( builder, 'float' ) : null;\r\n\r\n\t\t\t\tconst nodeVar = builder.getVarFromNode( this );\r\n\r\n\t\t\t\tpropertyName = builder.getPropertyName( nodeVar );\r\n\r\n\t\t\t\tconst snippet = this.generateSnippet( builder, textureProperty, uvSnippet, levelSnippet, depthSnippet, compareSnippet );\r\n\r\n\t\t\t\tbuilder.addLineFlowCode( `${propertyName} = ${snippet}` );\r\n\r\n\t\t\t\tif ( builder.context.tempWrite !== false ) {\r\n\r\n\t\t\t\t\tnodeData.snippet = snippet;\r\n\t\t\t\t\tnodeData.propertyName = propertyName;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet snippet = propertyName;\r\n\t\t\tconst nodeType = this.getNodeType( builder );\r\n\r\n\t\t\tif ( builder.needsColorSpaceToLinear( texture ) ) {\r\n\r\n\t\t\t\tsnippet = colorSpaceToLinear( expression( snippet, nodeType ), texture.colorSpace ).setup( builder ).build( builder, nodeType );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn builder.format( snippet, nodeType, output );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetSampler( value ) {\r\n\r\n\t\tthis.sampler = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetSampler() {\r\n\r\n\t\treturn this.sampler;\r\n\r\n\t}\r\n\r\n\t// @TODO: Move to TSL\r\n\r\n\tuv( uvNode ) {\r\n\r\n\t\tconst textureNode = this.clone();\r\n\t\ttextureNode.uvNode = uvNode;\r\n\r\n\t\treturn nodeObject( textureNode );\r\n\r\n\t}\r\n\r\n\tblur( levelNode ) {\r\n\r\n\t\tconst textureNode = this.clone();\r\n\t\ttextureNode.levelNode = levelNode.mul( maxMipLevel( textureNode ) );\r\n\r\n\t\treturn nodeObject( textureNode );\r\n\r\n\t}\r\n\r\n\tlevel( levelNode ) {\r\n\r\n\t\tconst textureNode = this.clone();\r\n\t\ttextureNode.levelNode = levelNode;\r\n\r\n\t\treturn textureNode;\r\n\r\n\t}\r\n\r\n\tsize( levelNode ) {\r\n\r\n\t\treturn textureSize( this, levelNode );\r\n\r\n\t}\r\n\r\n\tcompare( compareNode ) {\r\n\r\n\t\tconst textureNode = this.clone();\r\n\t\ttextureNode.compareNode = nodeObject( compareNode );\r\n\r\n\t\treturn nodeObject( textureNode );\r\n\r\n\t}\r\n\r\n\tdepth( depthNode ) {\r\n\r\n\t\tconst textureNode = this.clone();\r\n\t\ttextureNode.depthNode = nodeObject( depthNode );\r\n\r\n\t\treturn nodeObject( textureNode );\r\n\r\n\t}\r\n\r\n\t// --\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.value = this.value.toJSON( data.meta ).uuid;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.value = data.meta.textures[ data.value ];\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst texture = this.value;\r\n\r\n\t\tif ( texture.matrixAutoUpdate === true ) {\r\n\r\n\t\t\ttexture.updateMatrix();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\tconst newNode = new this.constructor( this.value, this.uvNode, this.levelNode );\r\n\t\tnewNode.sampler = this.sampler;\r\n\r\n\t\treturn newNode;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default TextureNode;\r\n\r\nexport const texture = nodeProxy( TextureNode );\r\nexport const textureLoad = ( ...params ) => texture( ...params ).setSampler( false );\r\n\r\n//export const textureLevel = ( value, uv, level ) => texture( value, uv ).level( level );\r\n\r\nexport const sampler = ( aTexture ) => ( aTexture.isNode === true ? aTexture : texture( aTexture ) ).convert( 'sampler' );\r\n\r\naddNodeElement( 'texture', texture );\r\n//addNodeElement( 'textureLevel', textureLevel );\r\n\r\naddNodeClass( 'TextureNode', TextureNode );\r\n", "import UniformNode from '../core/UniformNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { nodeObject } from '../shadernode/ShaderNode.js';\r\n\r\nclass BufferNode extends UniformNode {\r\n\r\n\tconstructor( value, bufferType, bufferCount = 0 ) {\r\n\r\n\t\tsuper( value, bufferType );\r\n\r\n\t\tthis.isBufferNode = true;\r\n\r\n\t\tthis.bufferType = bufferType;\r\n\t\tthis.bufferCount = bufferCount;\r\n\r\n\t}\r\n\r\n\tgetInputType( /*builder*/ ) {\r\n\r\n\t\treturn 'buffer';\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default BufferNode;\r\n\r\nexport const buffer = ( value, type, count ) => nodeObject( new BufferNode( value, type, count ) );\r\n\r\naddNodeClass( 'BufferNode', BufferNode );\r\n", "import { addNodeClass } from '../core/Node.js';\r\nimport { nodeObject } from '../shadernode/ShaderNode.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { getValueType } from '../core/NodeUtils.js';\r\nimport ArrayElementNode from '../utils/ArrayElementNode.js';\r\nimport BufferNode from './BufferNode.js';\r\n\r\nclass UniformsElementNode extends ArrayElementNode {\r\n\r\n\tconstructor( arrayBuffer, indexNode ) {\r\n\r\n\t\tsuper( arrayBuffer, indexNode );\r\n\r\n\t\tthis.isArrayBufferElementNode = true;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.node.getElementType( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst snippet = super.generate( builder );\r\n\t\tconst type = this.getNodeType();\r\n\r\n\t\treturn builder.format( snippet, 'vec4', type );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass UniformsNode extends BufferNode {\r\n\r\n\tconstructor( value, elementType = null ) {\r\n\r\n\t\tsuper( null, 'vec4' );\r\n\r\n\t\tthis.array = value;\r\n\t\tthis.elementType = elementType;\r\n\r\n\t\tthis._elementType = null;\r\n\t\tthis._elementLength = 0;\r\n\r\n\t\tthis.updateType = NodeUpdateType.RENDER;\r\n\r\n\t\tthis.isArrayBufferNode = true;\r\n\r\n\t}\r\n\r\n\tgetElementType() {\r\n\r\n\t\treturn this.elementType || this._elementType;\r\n\r\n\t}\r\n\r\n\tgetElementLength() {\r\n\r\n\t\treturn this._elementLength;\r\n\r\n\t}\r\n\r\n\tupdate( /*frame*/ ) {\r\n\r\n\t\tconst { array, value } = this;\r\n\r\n\t\tconst elementLength = this.getElementLength();\r\n\t\tconst elementType = this.getElementType();\r\n\r\n\t\tif ( elementLength === 1 ) {\r\n\r\n\t\t\tfor ( let i = 0; i < array.length; i ++ ) {\r\n\r\n\t\t\t\tconst index = i * 4;\r\n\r\n\t\t\t\tvalue[ index ] = array[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( elementType === 'color' ) {\r\n\r\n\t\t\tfor ( let i = 0; i < array.length; i ++ ) {\r\n\r\n\t\t\t\tconst index = i * 4;\r\n\t\t\t\tconst vector = array[ i ];\r\n\r\n\t\t\t\tvalue[ index ] = vector.r;\r\n\t\t\t\tvalue[ index + 1 ] = vector.g;\r\n\t\t\t\tvalue[ index + 2 ] = vector.b || 0;\r\n\t\t\t\t//value[ index + 3 ] = vector.a || 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( let i = 0; i < array.length; i ++ ) {\r\n\r\n\t\t\t\tconst index = i * 4;\r\n\t\t\t\tconst vector = array[ i ];\r\n\r\n\t\t\t\tvalue[ index ] = vector.x;\r\n\t\t\t\tvalue[ index + 1 ] = vector.y;\r\n\t\t\t\tvalue[ index + 2 ] = vector.z || 0;\r\n\t\t\t\tvalue[ index + 3 ] = vector.w || 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst length = this.array.length;\r\n\r\n\t\tthis._elementType = this.elementType === null ? getValueType( this.array[ 0 ] ) : this.elementType;\r\n\t\tthis._elementLength = builder.getTypeLength( this._elementType );\r\n\r\n\t\tthis.value = new Float32Array( length * 4 );\r\n\t\tthis.bufferCount = length;\r\n\r\n\t\treturn super.setup( builder );\r\n\r\n\t}\r\n\r\n\telement( indexNode ) {\r\n\r\n\t\treturn nodeObject( new UniformsElementNode( this, nodeObject( indexNode ) ) );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default UniformsNode;\r\n\r\nexport const uniforms = ( values, nodeType ) => nodeObject( new UniformsNode( values, nodeType ) );\r\n\r\naddNodeClass( 'UniformsNode', UniformsNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { uniform } from '../core/UniformNode.js';\r\nimport { texture } from './TextureNode.js';\r\nimport { buffer } from './BufferNode.js';\r\nimport { nodeObject } from '../shadernode/ShaderNode.js';\r\nimport { uniforms } from './UniformsNode.js';\r\nimport ArrayElementNode from '../utils/ArrayElementNode.js';\r\n\r\nclass ReferenceElementNode extends ArrayElementNode {\r\n\r\n\tconstructor( referenceNode, indexNode ) {\r\n\r\n\t\tsuper( referenceNode, indexNode );\r\n\r\n\t\tthis.referenceNode = referenceNode;\r\n\r\n\t\tthis.isReferenceElementNode = true;\r\n\r\n\t}\r\n\r\n\tgetNodeType() {\r\n\r\n\t\treturn this.referenceNode.uniformType;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst snippet = super.generate( builder );\r\n\t\tconst arrayType = this.referenceNode.getNodeType();\r\n\t\tconst elementType = this.getNodeType();\r\n\r\n\t\treturn builder.format( snippet, arrayType, elementType );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ReferenceNode extends Node {\r\n\r\n\tconstructor( property, uniformType, object = null, count = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.property = property;\r\n\t\tthis.uniformType = uniformType;\r\n\t\tthis.object = object;\r\n\t\tthis.count = count;\r\n\r\n\t\tthis.properties = property.split( '.' );\r\n\t\tthis.reference = null;\r\n\t\tthis.node = null;\r\n\r\n\t\tthis.updateType = NodeUpdateType.OBJECT;\r\n\r\n\t}\r\n\r\n\telement( indexNode ) {\r\n\r\n\t\treturn nodeObject( new ReferenceElementNode( this, nodeObject( indexNode ) ) );\r\n\r\n\t}\r\n\r\n\tsetNodeType( uniformType ) {\r\n\r\n\t\tlet node = null;\r\n\r\n\t\tif ( this.count !== null ) {\r\n\r\n\t\t\tnode = buffer( null, uniformType, this.count );\r\n\r\n\t\t} else if ( Array.isArray( this.getValueFromReference() ) ) {\r\n\r\n\t\t\tnode = uniforms( null, uniformType );\r\n\r\n\t\t} else if ( uniformType === 'texture' ) {\r\n\r\n\t\t\tnode = texture( null );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnode = uniform( null, uniformType );\r\n\r\n\t\t}\r\n\r\n\t\tthis.node = node;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.node.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tgetValueFromReference( object = this.reference ) {\r\n\r\n\t\tconst { properties } = this;\r\n\r\n\t\tlet value = object[ properties[ 0 ] ];\r\n\r\n\t\tfor ( let i = 1; i < properties.length; i ++ ) {\r\n\r\n\t\t\tvalue = value[ properties[ i ] ];\r\n\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tsetReference( state ) {\r\n\r\n\t\tthis.reference = this.object !== null ? this.object : state.object;\r\n\r\n\t\treturn this.reference;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tthis.updateValue();\r\n\r\n\t\treturn this.node;\r\n\r\n\t}\r\n\r\n\tupdate( /*frame*/ ) {\r\n\r\n\t\tthis.updateValue();\r\n\r\n\t}\r\n\r\n\tupdateValue() {\r\n\r\n\t\tif ( this.node === null ) this.setNodeType( this.uniformType );\r\n\r\n\t\tconst value = this.getValueFromReference();\r\n\r\n\t\tif ( Array.isArray( value ) ) {\r\n\r\n\t\t\tthis.node.array = value;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.node.value = value;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ReferenceNode;\r\n\r\nexport const reference = ( name, type, object ) => nodeObject( new ReferenceNode( name, type, object ) );\r\nexport const referenceBuffer = ( name, type, count, object ) => nodeObject( new ReferenceNode( name, type, object, count ) );\r\n\r\naddNodeClass( 'ReferenceNode', ReferenceNode );\r\n", "import ReferenceNode from './ReferenceNode.js';\r\n//import { renderGroup } from '../core/UniformGroupNode.js';\r\n//import { NodeUpdateType } from '../core/constants.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { nodeObject } from '../shadernode/ShaderNode.js';\r\n\r\nclass MaterialReferenceNode extends ReferenceNode {\r\n\r\n\tconstructor( property, inputType, material = null ) {\r\n\r\n\t\tsuper( property, inputType, material );\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\t//this.updateType = NodeUpdateType.RENDER;\r\n\r\n\t}\r\n\r\n\t/*setNodeType( node ) {\r\n\r\n\t\tsuper.setNodeType( node );\r\n\r\n\t\tthis.node.groupNode = renderGroup;\r\n\r\n\t}*/\r\n\r\n\tsetReference( state ) {\r\n\r\n\t\tthis.reference = this.material !== null ? this.material : state.material;\r\n\r\n\t\treturn this.reference;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default MaterialReferenceNode;\r\n\r\nexport const materialReference = ( name, type, material ) => nodeObject( new MaterialReferenceNode( name, type, material ) );\r\n\r\naddNodeClass( 'MaterialReferenceNode', MaterialReferenceNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport UniformNode from '../core/UniformNode.js';\r\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nimport { Vector3 } from 'three';\r\n\r\nclass Object3DNode extends Node {\r\n\r\n\tconstructor( scope = Object3DNode.VIEW_MATRIX, object3d = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scope = scope;\r\n\t\tthis.object3d = object3d;\r\n\r\n\t\tthis.updateType = NodeUpdateType.OBJECT;\r\n\r\n\t\tthis._uniformNode = new UniformNode( null );\r\n\r\n\t}\r\n\r\n\tgetNodeType() {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === Object3DNode.WORLD_MATRIX || scope === Object3DNode.VIEW_MATRIX ) {\r\n\r\n\t\t\treturn 'mat4';\r\n\r\n\t\t} else if ( scope === Object3DNode.NORMAL_MATRIX ) {\r\n\r\n\t\t\treturn 'mat3';\r\n\r\n\t\t} else if ( scope === Object3DNode.POSITION || scope === Object3DNode.VIEW_POSITION || scope === Object3DNode.DIRECTION || scope === Object3DNode.SCALE ) {\r\n\r\n\t\t\treturn 'vec3';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tconst object = this.object3d;\r\n\t\tconst uniformNode = this._uniformNode;\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === Object3DNode.VIEW_MATRIX ) {\r\n\r\n\t\t\tuniformNode.value = object.modelViewMatrix;\r\n\r\n\t\t} else if ( scope === Object3DNode.NORMAL_MATRIX ) {\r\n\r\n\t\t\tuniformNode.value = object.normalMatrix;\r\n\r\n\t\t} else if ( scope === Object3DNode.WORLD_MATRIX ) {\r\n\r\n\t\t\tuniformNode.value = object.matrixWorld;\r\n\r\n\t\t} else if ( scope === Object3DNode.POSITION ) {\r\n\r\n\t\t\tuniformNode.value = uniformNode.value || new Vector3();\r\n\r\n\t\t\tuniformNode.value.setFromMatrixPosition( object.matrixWorld );\r\n\r\n\t\t} else if ( scope === Object3DNode.SCALE ) {\r\n\r\n\t\t\tuniformNode.value = uniformNode.value || new Vector3();\r\n\r\n\t\t\tuniformNode.value.setFromMatrixScale( object.matrixWorld );\r\n\r\n\t\t} else if ( scope === Object3DNode.DIRECTION ) {\r\n\r\n\t\t\tuniformNode.value = uniformNode.value || new Vector3();\r\n\r\n\t\t\tobject.getWorldDirection( uniformNode.value );\r\n\r\n\t\t} else if ( scope === Object3DNode.VIEW_POSITION ) {\r\n\r\n\t\t\tconst camera = frame.camera;\r\n\r\n\t\t\tuniformNode.value = uniformNode.value || new Vector3();\r\n\t\t\tuniformNode.value.setFromMatrixPosition( object.matrixWorld );\r\n\r\n\t\t\tuniformNode.value.applyMatrix4( camera.matrixWorldInverse );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === Object3DNode.WORLD_MATRIX || scope === Object3DNode.VIEW_MATRIX ) {\r\n\r\n\t\t\tthis._uniformNode.nodeType = 'mat4';\r\n\r\n\t\t} else if ( scope === Object3DNode.NORMAL_MATRIX ) {\r\n\r\n\t\t\tthis._uniformNode.nodeType = 'mat3';\r\n\r\n\t\t} else if ( scope === Object3DNode.POSITION || scope === Object3DNode.VIEW_POSITION || scope === Object3DNode.DIRECTION || scope === Object3DNode.SCALE ) {\r\n\r\n\t\t\tthis._uniformNode.nodeType = 'vec3';\r\n\r\n\t\t}\r\n\r\n\t\treturn this._uniformNode.build( builder );\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.scope = this.scope;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.scope = data.scope;\r\n\r\n\t}\r\n\r\n}\r\n\r\nObject3DNode.VIEW_MATRIX = 'viewMatrix';\r\nObject3DNode.NORMAL_MATRIX = 'normalMatrix';\r\nObject3DNode.WORLD_MATRIX = 'worldMatrix';\r\nObject3DNode.POSITION = 'position';\r\nObject3DNode.SCALE = 'scale';\r\nObject3DNode.VIEW_POSITION = 'viewPosition';\r\nObject3DNode.DIRECTION = 'direction';\r\n\r\nexport default Object3DNode;\r\n\r\nexport const objectDirection = nodeProxy( Object3DNode, Object3DNode.DIRECTION );\r\nexport const objectViewMatrix = nodeProxy( Object3DNode, Object3DNode.VIEW_MATRIX );\r\nexport const objectNormalMatrix = nodeProxy( Object3DNode, Object3DNode.NORMAL_MATRIX );\r\nexport const objectWorldMatrix = nodeProxy( Object3DNode, Object3DNode.WORLD_MATRIX );\r\nexport const objectPosition = nodeProxy( Object3DNode, Object3DNode.POSITION );\r\nexport const objectScale = nodeProxy( Object3DNode, Object3DNode.SCALE );\r\nexport const objectViewPosition = nodeProxy( Object3DNode, Object3DNode.VIEW_POSITION );\r\n\r\naddNodeClass( 'Object3DNode', Object3DNode );\r\n", "import Object3DNode from './Object3DNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\n//import { sharedUniformGroup } from '../core/UniformGroupNode.js';\r\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\r\n\r\n//const cameraGroup = sharedUniformGroup( 'camera' );\r\n\r\nclass CameraNode extends Object3DNode {\r\n\r\n\tconstructor( scope = CameraNode.POSITION ) {\r\n\r\n\t\tsuper( scope );\r\n\r\n\t\tthis.updateType = NodeUpdateType.RENDER;\r\n\r\n\t\t//this._uniformNode.groupNode = cameraGroup;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX || scope === CameraNode.PROJECTION_MATRIX_INVERSE ) {\r\n\r\n\t\t\treturn 'mat4';\r\n\r\n\t\t} else if ( scope === CameraNode.NEAR || scope === CameraNode.FAR || scope === CameraNode.LOG_DEPTH ) {\r\n\r\n\t\t\treturn 'float';\r\n\r\n\t\t}\r\n\r\n\t\treturn super.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tconst camera = frame.camera;\r\n\t\tconst uniformNode = this._uniformNode;\r\n\t\tconst scope = this.scope;\r\n\r\n\t\t//cameraGroup.needsUpdate = true;\r\n\r\n\t\tif ( scope === CameraNode.VIEW_MATRIX ) {\r\n\r\n\t\t\tuniformNode.value = camera.matrixWorldInverse;\r\n\r\n\t\t} else if ( scope === CameraNode.PROJECTION_MATRIX ) {\r\n\r\n\t\t\tuniformNode.value = camera.projectionMatrix;\r\n\r\n\t\t} else if ( scope === CameraNode.PROJECTION_MATRIX_INVERSE ) {\r\n\r\n\t\t\tuniformNode.value = camera.projectionMatrixInverse;\r\n\r\n\t\t} else if ( scope === CameraNode.NEAR ) {\r\n\r\n\t\t\tuniformNode.value = camera.near;\r\n\r\n\t\t} else if ( scope === CameraNode.FAR ) {\r\n\r\n\t\t\tuniformNode.value = camera.far;\r\n\r\n\t\t} else if ( scope === CameraNode.LOG_DEPTH ) {\r\n\r\n\t\t\tuniformNode.value = 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.object3d = camera;\r\n\r\n\t\t\tsuper.update( frame );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX || scope === CameraNode.PROJECTION_MATRIX_INVERSE ) {\r\n\r\n\t\t\tthis._uniformNode.nodeType = 'mat4';\r\n\r\n\t\t} else if ( scope === CameraNode.NEAR || scope === CameraNode.FAR || scope === CameraNode.LOG_DEPTH ) {\r\n\r\n\t\t\tthis._uniformNode.nodeType = 'float';\r\n\r\n\t\t}\r\n\r\n\t\treturn super.generate( builder );\r\n\r\n\t}\r\n\r\n}\r\n\r\nCameraNode.PROJECTION_MATRIX = 'projectionMatrix';\r\nCameraNode.PROJECTION_MATRIX_INVERSE = 'projectionMatrixInverse';\r\nCameraNode.NEAR = 'near';\r\nCameraNode.FAR = 'far';\r\nCameraNode.LOG_DEPTH = 'logDepth';\r\n\r\nexport default CameraNode;\r\n\r\nexport const cameraProjectionMatrix = nodeImmutable( CameraNode, CameraNode.PROJECTION_MATRIX );\r\nexport const cameraProjectionMatrixInverse = nodeImmutable( CameraNode, CameraNode.PROJECTION_MATRIX_INVERSE );\r\nexport const cameraNear = nodeImmutable( CameraNode, CameraNode.NEAR );\r\nexport const cameraFar = nodeImmutable( CameraNode, CameraNode.FAR );\r\nexport const cameraLogDepth = nodeImmutable( CameraNode, CameraNode.LOG_DEPTH );\r\nexport const cameraViewMatrix = nodeImmutable( CameraNode, CameraNode.VIEW_MATRIX );\r\nexport const cameraNormalMatrix = nodeImmutable( CameraNode, CameraNode.NORMAL_MATRIX );\r\nexport const cameraWorldMatrix = nodeImmutable( CameraNode, CameraNode.WORLD_MATRIX );\r\nexport const cameraPosition = nodeImmutable( CameraNode, CameraNode.POSITION );\r\n\r\naddNodeClass( 'CameraNode', CameraNode );\r\n", "import Object3DNode from './Object3DNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\r\n\r\nclass ModelNode extends Object3DNode {\r\n\r\n\tconstructor( scope = ModelNode.VIEW_MATRIX ) {\r\n\r\n\t\tsuper( scope );\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tthis.object3d = frame.object;\r\n\r\n\t\tsuper.update( frame );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ModelNode;\r\n\r\nexport const modelDirection = nodeImmutable( ModelNode, ModelNode.DIRECTION );\r\nexport const modelViewMatrix = nodeImmutable( ModelNode, ModelNode.VIEW_MATRIX ).label( 'modelViewMatrix' ).temp( 'ModelViewMatrix' );\r\nexport const modelNormalMatrix = nodeImmutable( ModelNode, ModelNode.NORMAL_MATRIX );\r\nexport const modelWorldMatrix = nodeImmutable( ModelNode, ModelNode.WORLD_MATRIX );\r\nexport const modelPosition = nodeImmutable( ModelNode, ModelNode.POSITION );\r\nexport const modelScale = nodeImmutable( ModelNode, ModelNode.SCALE );\r\nexport const modelViewPosition = nodeImmutable( ModelNode, ModelNode.VIEW_POSITION );\r\n\r\naddNodeClass( 'ModelNode', ModelNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { attribute } from '../core/AttributeNode.js';\r\nimport { varying } from '../core/VaryingNode.js';\r\nimport { property } from '../core/PropertyNode.js';\r\nimport { normalize } from '../math/MathNode.js';\r\nimport { cameraViewMatrix } from './CameraNode.js';\r\nimport { modelNormalMatrix } from './ModelNode.js';\r\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\r\n\r\nclass NormalNode extends Node {\r\n\r\n\tconstructor( scope = NormalNode.LOCAL ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.scope = scope;\r\n\r\n\t}\r\n\r\n\tisGlobal() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tgetHash( /*builder*/ ) {\r\n\r\n\t\treturn `normal-${this.scope}`;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( scope === NormalNode.GEOMETRY ) {\r\n\r\n\t\t\toutputNode = attribute( 'normal', 'vec3' );\r\n\r\n\t\t} else if ( scope === NormalNode.LOCAL ) {\r\n\r\n\t\t\toutputNode = varying( normalGeometry );\r\n\r\n\t\t} else if ( scope === NormalNode.VIEW ) {\r\n\r\n\t\t\tconst vertexNode = modelNormalMatrix.mul( normalLocal );\r\n\t\t\toutputNode = normalize( varying( vertexNode ) );\r\n\r\n\t\t} else if ( scope === NormalNode.WORLD ) {\r\n\r\n\t\t\t// To use inverseTransformDirection only inverse the param order like this: cameraViewMatrix.transformDirection( normalView )\r\n\t\t\tconst vertexNode = normalView.transformDirection( cameraViewMatrix );\r\n\t\t\toutputNode = normalize( varying( vertexNode ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.scope = this.scope;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.scope = data.scope;\r\n\r\n\t}\r\n\r\n}\r\n\r\nNormalNode.GEOMETRY = 'geometry';\r\nNormalNode.LOCAL = 'local';\r\nNormalNode.VIEW = 'view';\r\nNormalNode.WORLD = 'world';\r\n\r\nexport default NormalNode;\r\n\r\nexport const normalGeometry = nodeImmutable( NormalNode, NormalNode.GEOMETRY );\r\nexport const normalLocal = nodeImmutable( NormalNode, NormalNode.LOCAL ).temp( 'Normal' );\r\nexport const normalView = nodeImmutable( NormalNode, NormalNode.VIEW );\r\nexport const normalWorld = nodeImmutable( NormalNode, NormalNode.WORLD );\r\nexport const transformedNormalView = property( 'vec3', 'TransformedNormalView' );\r\nexport const transformedNormalWorld = transformedNormalView.transformDirection( cameraViewMatrix ).normalize();\r\nexport const transformedClearcoatNormalView = property( 'vec3', 'TransformedClearcoatNormalView' );\r\n\r\naddNodeClass( 'NormalNode', NormalNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { reference } from './ReferenceNode.js';\r\nimport { materialReference } from './MaterialReferenceNode.js';\r\nimport { normalView } from './NormalNode.js';\r\nimport { nodeImmutable, float } from '../shadernode/ShaderNode.js';\r\n\r\nconst _propertyCache = new Map();\r\n\r\nclass MaterialNode extends Node {\r\n\r\n\tconstructor( scope ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scope = scope;\r\n\r\n\t}\r\n\r\n\tgetCache( property, type ) {\r\n\r\n\t\tlet node = _propertyCache.get( property );\r\n\r\n\t\tif ( node === undefined ) {\r\n\r\n\t\t\tnode = materialReference( property, type );\r\n\r\n\t\t\t_propertyCache.set( property, node );\r\n\r\n\t\t}\r\n\r\n\t\treturn node;\r\n\r\n\t}\r\n\r\n\tgetFloat( property ) {\r\n\r\n\t\treturn this.getCache( property, 'float' );\r\n\r\n\t}\r\n\r\n\tgetColor( property ) {\r\n\r\n\t\treturn this.getCache( property, 'color' );\r\n\r\n\t}\r\n\r\n\tgetTexture( property ) {\r\n\r\n\t\treturn this.getCache( property === 'map' ? 'map' : property + 'Map', 'texture' );\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst material = builder.context.material;\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tlet node = null;\r\n\r\n\t\tif ( scope === MaterialNode.COLOR ) {\r\n\r\n\t\t\tconst colorNode = this.getColor( scope );\r\n\r\n\t\t\tif ( material.map && material.map.isTexture === true ) {\r\n\r\n\t\t\t\tnode = colorNode.mul( this.getTexture( 'map' ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = colorNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === MaterialNode.OPACITY ) {\r\n\r\n\t\t\tconst opacityNode = this.getFloat( scope );\r\n\r\n\t\t\tif ( material.alphaMap && material.alphaMap.isTexture === true ) {\r\n\r\n\t\t\t\tnode = opacityNode.mul( this.getTexture( 'alpha' ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = opacityNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === MaterialNode.SPECULAR_STRENGTH ) {\r\n\r\n\t\t\tif ( material.specularMap && material.specularMap.isTexture === true ) {\r\n\r\n\t\t\t\tnode = this.getTexture( scope ).r;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = float( 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === MaterialNode.ROUGHNESS ) { // TODO: cleanup similar branches\r\n\r\n\t\t\tconst roughnessNode = this.getFloat( scope );\r\n\r\n\t\t\tif ( material.roughnessMap && material.roughnessMap.isTexture === true ) {\r\n\r\n\t\t\t\tnode = roughnessNode.mul( this.getTexture( scope ).g );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = roughnessNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === MaterialNode.METALNESS ) {\r\n\r\n\t\t\tconst metalnessNode = this.getFloat( scope );\r\n\r\n\t\t\tif ( material.metalnessMap && material.metalnessMap.isTexture === true ) {\r\n\r\n\t\t\t\tnode = metalnessNode.mul( this.getTexture( scope ).b );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = metalnessNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === MaterialNode.EMISSIVE ) {\r\n\r\n\t\t\tconst emissiveNode = this.getColor( scope );\r\n\r\n\t\t\tif ( material.emissiveMap && material.emissiveMap.isTexture === true ) {\r\n\r\n\t\t\t\tnode = emissiveNode.mul( this.getTexture( scope ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = emissiveNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === MaterialNode.NORMAL ) {\r\n\r\n\t\t\tif ( material.normalMap ) {\r\n\r\n\t\t\t\tnode = this.getTexture( 'normal' ).normalMap( this.getCache( 'normalScale', 'vec2' ) );\r\n\r\n\t\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\t\tnode = this.getTexture( 'bump' ).r.bumpMap( this.getFloat( 'bumpScale' ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = normalView;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === MaterialNode.CLEARCOAT ) {\r\n\r\n\t\t\tconst clearcoatNode = this.getFloat( scope );\r\n\r\n\t\t\tif ( material.clearcoatMap && material.clearcoatMap.isTexture === true ) {\r\n\r\n\t\t\t\tnode = clearcoatNode.mul( this.getTexture( scope ).r );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = clearcoatNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === MaterialNode.CLEARCOAT_ROUGHNESS ) {\r\n\r\n\t\t\tconst clearcoatRoughnessNode = this.getFloat( scope );\r\n\r\n\t\t\tif ( material.clearcoatRoughnessMap && material.clearcoatRoughnessMap.isTexture === true ) {\r\n\r\n\t\t\t\tnode = clearcoatRoughnessNode.mul( this.getTexture( scope ).r );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = clearcoatRoughnessNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === MaterialNode.CLEARCOAT_NORMAL ) {\r\n\r\n\t\t\tif ( material.clearcoatNormalMap ) {\r\n\r\n\t\t\t\tnode = this.getTexture( scope ).normalMap( this.getCache( scope + 'Scale', 'vec2' ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = normalView;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === MaterialNode.SHEEN ) {\r\n\r\n\t\t\tconst sheenNode = this.getColor( 'sheenColor' ).mul( this.getFloat( 'sheen' ) ); // Move this mul() to CPU\r\n\r\n\t\t\tif ( material.sheenColorMap && material.sheenColorMap.isTexture === true ) {\r\n\r\n\t\t\t\tnode = sheenNode.mul( this.getTexture( 'sheenColor' ).rgb );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = sheenNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === MaterialNode.SHEEN_ROUGHNESS ) {\r\n\r\n\t\t\tconst sheenRoughnessNode = this.getFloat( scope );\r\n\r\n\t\t\tif ( material.sheenRoughnessMap && material.sheenRoughnessMap.isTexture === true ) {\r\n\r\n\t\t\t\tnode = sheenRoughnessNode.mul( this.getTexture( scope ).a );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = sheenRoughnessNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnode = node.clamp( 0.07, 1.0 );\r\n\r\n\t\t} else if ( scope === MaterialNode.IRIDESCENCE_THICKNESS ) {\r\n\r\n\t\t\tconst iridescenceThicknessMaximum = reference( '1', 'float', material.iridescenceThicknessRange );\r\n\r\n\t\t\tif ( material.iridescenceThicknessMap ) {\r\n\r\n\t\t\t\tconst iridescenceThicknessMinimum = reference( '0', 'float', material.iridescenceThicknessRange );\r\n\r\n\t\t\t\tnode = iridescenceThicknessMaximum.sub( iridescenceThicknessMinimum ).mul( this.getTexture( scope ).g ).add( iridescenceThicknessMinimum );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = iridescenceThicknessMaximum;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst outputType = this.getNodeType( builder );\r\n\r\n\t\t\tnode = this.getCache( scope, outputType );\r\n\r\n\t\t}\r\n\r\n\t\treturn node;\r\n\r\n\t}\r\n\r\n}\r\n\r\nMaterialNode.ALPHA_TEST = 'alphaTest';\r\nMaterialNode.COLOR = 'color';\r\nMaterialNode.OPACITY = 'opacity';\r\nMaterialNode.SHININESS = 'shininess';\r\nMaterialNode.SPECULAR_COLOR = 'specular';\r\nMaterialNode.SPECULAR_STRENGTH = 'specularStrength';\r\nMaterialNode.REFLECTIVITY = 'reflectivity';\r\nMaterialNode.ROUGHNESS = 'roughness';\r\nMaterialNode.METALNESS = 'metalness';\r\nMaterialNode.NORMAL = 'normal';\r\nMaterialNode.CLEARCOAT = 'clearcoat';\r\nMaterialNode.CLEARCOAT_ROUGHNESS = 'clearcoatRoughness';\r\nMaterialNode.CLEARCOAT_NORMAL = 'clearcoatNormal';\r\nMaterialNode.EMISSIVE = 'emissive';\r\nMaterialNode.ROTATION = 'rotation';\r\nMaterialNode.SHEEN = 'sheen';\r\nMaterialNode.SHEEN_ROUGHNESS = 'sheenRoughness';\r\nMaterialNode.IRIDESCENCE = 'iridescence';\r\nMaterialNode.IRIDESCENCE_IOR = 'iridescenceIOR';\r\nMaterialNode.IRIDESCENCE_THICKNESS = 'iridescenceThickness';\r\nMaterialNode.LINE_SCALE = 'scale';\r\nMaterialNode.LINE_DASH_SIZE = 'dashSize';\r\nMaterialNode.LINE_GAP_SIZE = 'gapSize';\r\nMaterialNode.LINE_WIDTH = 'linewidth';\r\nMaterialNode.LINE_DASH_OFFSET = 'dashOffset';\r\nMaterialNode.POINT_WIDTH = 'pointWidth';\r\n\r\nexport default MaterialNode;\r\n\r\nexport const materialAlphaTest = nodeImmutable( MaterialNode, MaterialNode.ALPHA_TEST );\r\nexport const materialColor = nodeImmutable( MaterialNode, MaterialNode.COLOR );\r\nexport const materialShininess = nodeImmutable( MaterialNode, MaterialNode.SHININESS );\r\nexport const materialEmissive = nodeImmutable( MaterialNode, MaterialNode.EMISSIVE );\r\nexport const materialOpacity = nodeImmutable( MaterialNode, MaterialNode.OPACITY );\r\nexport const materialSpecularColor = nodeImmutable( MaterialNode, MaterialNode.SPECULAR_COLOR );\r\nexport const materialSpecularStrength = nodeImmutable( MaterialNode, MaterialNode.SPECULAR_STRENGTH );\r\nexport const materialReflectivity = nodeImmutable( MaterialNode, MaterialNode.REFLECTIVITY );\r\nexport const materialRoughness = nodeImmutable( MaterialNode, MaterialNode.ROUGHNESS );\r\nexport const materialMetalness = nodeImmutable( MaterialNode, MaterialNode.METALNESS );\r\nexport const materialNormal = nodeImmutable( MaterialNode, MaterialNode.NORMAL );\r\nexport const materialClearcoat = nodeImmutable( MaterialNode, MaterialNode.CLEARCOAT );\r\nexport const materialClearcoatRoughness = nodeImmutable( MaterialNode, MaterialNode.CLEARCOAT_ROUGHNESS );\r\nexport const materialClearcoatNormal = nodeImmutable( MaterialNode, MaterialNode.CLEARCOAT_NORMAL );\r\nexport const materialRotation = nodeImmutable( MaterialNode, MaterialNode.ROTATION );\r\nexport const materialSheen = nodeImmutable( MaterialNode, MaterialNode.SHEEN );\r\nexport const materialSheenRoughness = nodeImmutable( MaterialNode, MaterialNode.SHEEN_ROUGHNESS );\r\nexport const materialIridescence = nodeImmutable( MaterialNode, MaterialNode.IRIDESCENCE );\r\nexport const materialIridescenceIOR = nodeImmutable( MaterialNode, MaterialNode.IRIDESCENCE_IOR );\r\nexport const materialIridescenceThickness = nodeImmutable( MaterialNode, MaterialNode.IRIDESCENCE_THICKNESS );\r\nexport const materialLineScale = nodeImmutable( MaterialNode, MaterialNode.LINE_SCALE );\r\nexport const materialLineDashSize = nodeImmutable( MaterialNode, MaterialNode.LINE_DASH_SIZE );\r\nexport const materialLineGapSize = nodeImmutable( MaterialNode, MaterialNode.LINE_GAP_SIZE );\r\nexport const materialLineWidth = nodeImmutable( MaterialNode, MaterialNode.LINE_WIDTH );\r\nexport const materialLineDashOffset = nodeImmutable( MaterialNode, MaterialNode.LINE_DASH_OFFSET );\r\nexport const materialPointWidth = nodeImmutable( MaterialNode, MaterialNode.POINT_WIDTH );\r\n\r\naddNodeClass( 'MaterialNode', MaterialNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { attribute } from '../core/AttributeNode.js';\r\nimport { varying } from '../core/VaryingNode.js';\r\nimport { normalize } from '../math/MathNode.js';\r\nimport { modelWorldMatrix, modelViewMatrix } from './ModelNode.js';\r\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\r\n\r\nclass PositionNode extends Node {\r\n\r\n\tconstructor( scope = PositionNode.LOCAL ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.scope = scope;\r\n\r\n\t}\r\n\r\n\tisGlobal() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tgetHash( /*builder*/ ) {\r\n\r\n\t\treturn `position-${this.scope}`;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( scope === PositionNode.GEOMETRY ) {\r\n\r\n\t\t\toutputNode = attribute( 'position', 'vec3' );\r\n\r\n\t\t} else if ( scope === PositionNode.LOCAL ) {\r\n\r\n\t\t\toutputNode = varying( positionGeometry );\r\n\r\n\t\t} else if ( scope === PositionNode.WORLD ) {\r\n\r\n\t\t\tconst vertexPositionNode = modelWorldMatrix.mul( positionLocal );\r\n\t\t\toutputNode = varying( vertexPositionNode );\r\n\r\n\t\t} else if ( scope === PositionNode.VIEW ) {\r\n\r\n\t\t\tconst vertexPositionNode = modelViewMatrix.mul( positionLocal );\r\n\t\t\toutputNode = varying( vertexPositionNode );\r\n\r\n\t\t} else if ( scope === PositionNode.VIEW_DIRECTION ) {\r\n\r\n\t\t\tconst vertexPositionNode = positionView.negate();\r\n\t\t\toutputNode = normalize( varying( vertexPositionNode ) );\r\n\r\n\t\t} else if ( scope === PositionNode.WORLD_DIRECTION ) {\r\n\r\n\t\t\tconst vertexPositionNode = positionLocal.transformDirection( modelWorldMatrix );\r\n\t\t\toutputNode = normalize( varying( vertexPositionNode ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.scope = this.scope;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.scope = data.scope;\r\n\r\n\t}\r\n\r\n}\r\n\r\nPositionNode.GEOMETRY = 'geometry';\r\nPositionNode.LOCAL = 'local';\r\nPositionNode.WORLD = 'world';\r\nPositionNode.WORLD_DIRECTION = 'worldDirection';\r\nPositionNode.VIEW = 'view';\r\nPositionNode.VIEW_DIRECTION = 'viewDirection';\r\n\r\nexport default PositionNode;\r\n\r\nexport const positionGeometry = nodeImmutable( PositionNode, PositionNode.GEOMETRY );\r\nexport const positionLocal = nodeImmutable( PositionNode, PositionNode.LOCAL ).temp( 'Position' );\r\nexport const positionWorld = nodeImmutable( PositionNode, PositionNode.WORLD );\r\nexport const positionWorldDirection = nodeImmutable( PositionNode, PositionNode.WORLD_DIRECTION );\r\nexport const positionView = nodeImmutable( PositionNode, PositionNode.VIEW );\r\nexport const positionViewDirection = nodeImmutable( PositionNode, PositionNode.VIEW_DIRECTION );\r\n\r\naddNodeClass( 'PositionNode', PositionNode );\r\n", "import { addNodeClass } from '../core/Node.js';\r\nimport TempNode from '../core/TempNode.js';\r\nimport { cameraProjectionMatrix } from './CameraNode.js';\r\nimport { modelViewMatrix } from './ModelNode.js';\r\nimport { positionLocal } from './PositionNode.js';\r\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\r\nimport { varying } from '../core/VaryingNode.js';\r\n\r\nclass ModelViewProjectionNode extends TempNode {\r\n\r\n\tconstructor( positionNode = null ) {\r\n\r\n\t\tsuper( 'vec4' );\r\n\r\n\t\tthis.positionNode = positionNode;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tif ( builder.shaderStage === 'fragment' ) {\r\n\r\n\t\t\treturn varying( builder.context.mvp );\r\n\r\n\t\t}\r\n\r\n\t\tconst position = this.positionNode || positionLocal;\r\n\r\n\t\treturn cameraProjectionMatrix.mul( modelViewMatrix ).mul( position );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ModelViewProjectionNode;\r\n\r\nexport const modelViewProjection = nodeProxy( ModelViewProjectionNode );\r\n\r\naddNodeClass( 'ModelViewProjectionNode', ModelViewProjectionNode );\r\n", "import InputNode from '../core/InputNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { varying } from '../core/VaryingNode.js';\r\nimport { nodeObject, addNodeElement } from '../shadernode/ShaderNode.js';\r\nimport { InterleavedBufferAttribute, InterleavedBuffer, StaticDrawUsage, DynamicDrawUsage } from 'three';\r\n\r\nclass BufferAttributeNode extends InputNode {\r\n\r\n\tconstructor( value, bufferType = null, bufferStride = 0, bufferOffset = 0 ) {\r\n\r\n\t\tsuper( value, bufferType );\r\n\r\n\t\tthis.isBufferNode = true;\r\n\r\n\t\tthis.bufferType = bufferType;\r\n\t\tthis.bufferStride = bufferStride;\r\n\t\tthis.bufferOffset = bufferOffset;\r\n\r\n\t\tthis.usage = StaticDrawUsage;\r\n\t\tthis.instanced = false;\r\n\r\n\t\tthis.attribute = null;\r\n\r\n\t\tif ( value && value.isBufferAttribute === true ) {\r\n\r\n\t\t\tthis.attribute = value;\r\n\t\t\tthis.usage = value.usage;\r\n\t\t\tthis.instanced = value.isInstancedBufferAttribute;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tif ( this.bufferType === null ) {\r\n\r\n\t\t\tthis.bufferType = builder.getTypeFromAttribute( this.attribute );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.bufferType;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tif ( this.attribute !== null ) return;\r\n\r\n\t\tconst type = this.getNodeType( builder );\r\n\t\tconst array = this.value;\r\n\t\tconst itemSize = builder.getTypeLength( type );\r\n\t\tconst stride = this.bufferStride || itemSize;\r\n\t\tconst offset = this.bufferOffset;\r\n\r\n\t\tconst buffer = array.isInterleavedBuffer === true ? array : new InterleavedBuffer( array, stride );\r\n\t\tconst bufferAttribute = new InterleavedBufferAttribute( buffer, itemSize, offset );\r\n\r\n\t\tbuffer.setUsage( this.usage );\r\n\r\n\t\tthis.attribute = bufferAttribute;\r\n\t\tthis.attribute.isInstancedBufferAttribute = this.instanced; // @TODO: Add a possible: InstancedInterleavedBufferAttribute\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst nodeType = this.getNodeType( builder );\r\n\r\n\t\tconst nodeAttribute = builder.getBufferAttributeFromNode( this, nodeType );\r\n\t\tconst propertyName = builder.getPropertyName( nodeAttribute );\r\n\r\n\t\tlet output = null;\r\n\r\n\t\tif ( builder.shaderStage === 'vertex' || builder.shaderStage === 'compute' ) {\r\n\r\n\t\t\tthis.name = propertyName;\r\n\r\n\t\t\toutput = propertyName;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst nodeVarying = varying( this );\r\n\r\n\t\t\toutput = nodeVarying.build( builder, nodeType );\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n\tgetInputType( /*builder*/ ) {\r\n\r\n\t\treturn 'bufferAttribute';\r\n\r\n\t}\r\n\r\n\tsetUsage( value ) {\r\n\r\n\t\tthis.usage = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetInstanced( value ) {\r\n\r\n\t\tthis.instanced = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default BufferAttributeNode;\r\n\r\nexport const bufferAttribute = ( array, type, stride, offset ) => nodeObject( new BufferAttributeNode( array, type, stride, offset ) );\r\nexport const dynamicBufferAttribute = ( array, type, stride, offset ) => bufferAttribute( array, type, stride, offset ).setUsage( DynamicDrawUsage );\r\n\r\nexport const instancedBufferAttribute = ( array, type, stride, offset ) => bufferAttribute( array, type, stride, offset ).setInstanced( true );\r\nexport const instancedDynamicBufferAttribute = ( array, type, stride, offset ) => dynamicBufferAttribute( array, type, stride, offset ).setInstanced( true );\r\n\r\naddNodeElement( 'toAttribute', ( bufferNode ) => bufferAttribute( bufferNode.value ) );\r\n\r\naddNodeClass( 'BufferAttributeNode', BufferAttributeNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { instancedBufferAttribute, instancedDynamicBufferAttribute } from './BufferAttributeNode.js';\r\nimport { normalLocal } from './NormalNode.js';\r\nimport { positionLocal } from './PositionNode.js';\r\nimport { nodeProxy, vec3, mat3, mat4 } from '../shadernode/ShaderNode.js';\r\nimport { DynamicDrawUsage, InstancedInterleavedBuffer } from 'three';\r\n\r\nclass InstanceNode extends Node {\r\n\r\n\tconstructor( instanceMesh ) {\r\n\r\n\t\tsuper( 'void' );\r\n\r\n\t\tthis.instanceMesh = instanceMesh;\r\n\r\n\t\tthis.instanceMatrixNode = null;\r\n\r\n\t}\r\n\r\n\tsetup( /*builder*/ ) {\r\n\r\n\t\tlet instanceMatrixNode = this.instanceMatrixNode;\r\n\r\n\t\tif ( instanceMatrixNode === null ) {\r\n\r\n\t\t\tconst instanceMesh = this.instanceMesh;\r\n\t\t\tconst instanceAttribute = instanceMesh.instanceMatrix;\r\n\t\t\tconst buffer = new InstancedInterleavedBuffer( instanceAttribute.array, 16, 1 );\r\n\r\n\t\t\tconst bufferFn = instanceAttribute.usage === DynamicDrawUsage ? instancedDynamicBufferAttribute : instancedBufferAttribute;\r\n\r\n\t\t\tconst instanceBuffers = [\r\n\t\t\t\t// F.Signature -> bufferAttribute( array, type, stride, offset )\r\n\t\t\t\tbufferFn( buffer, 'vec4', 16, 0 ),\r\n\t\t\t\tbufferFn( buffer, 'vec4', 16, 4 ),\r\n\t\t\t\tbufferFn( buffer, 'vec4', 16, 8 ),\r\n\t\t\t\tbufferFn( buffer, 'vec4', 16, 12 )\r\n\t\t\t];\r\n\r\n\t\t\tinstanceMatrixNode = mat4( ...instanceBuffers );\r\n\r\n\t\t\tthis.instanceMatrixNode = instanceMatrixNode;\r\n\r\n\t\t}\r\n\r\n\t\t// POSITION\r\n\r\n\t\tconst instancePosition = instanceMatrixNode.mul( positionLocal ).xyz;\r\n\r\n\t\t// NORMAL\r\n\r\n\t\tconst m = mat3( instanceMatrixNode[ 0 ].xyz, instanceMatrixNode[ 1 ].xyz, instanceMatrixNode[ 2 ].xyz );\r\n\r\n\t\tconst transformedNormal = normalLocal.div( vec3( m[ 0 ].dot( m[ 0 ] ), m[ 1 ].dot( m[ 1 ] ), m[ 2 ].dot( m[ 2 ] ) ) );\r\n\r\n\t\tconst instanceNormal = m.mul( transformedNormal ).xyz;\r\n\r\n\t\t// ASSIGNS\r\n\r\n\t\tpositionLocal.assign( instancePosition );\r\n\t\tnormalLocal.assign( instanceNormal );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default InstanceNode;\r\n\r\nexport const instance = nodeProxy( InstanceNode );\r\n\r\naddNodeClass( 'InstanceNode', InstanceNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { attribute } from '../core/AttributeNode.js';\r\nimport { temp } from '../core/VarNode.js';\r\nimport { varying } from '../core/VaryingNode.js';\r\nimport { normalize } from '../math/MathNode.js';\r\nimport { cameraViewMatrix } from './CameraNode.js';\r\nimport { modelViewMatrix } from './ModelNode.js';\r\nimport { nodeImmutable, vec4 } from '../shadernode/ShaderNode.js';\r\n\r\nclass TangentNode extends Node {\r\n\r\n\tconstructor( scope = TangentNode.LOCAL ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scope = scope;\r\n\r\n\t}\r\n\r\n\tgetHash( /*builder*/ ) {\r\n\r\n\t\treturn `tangent-${this.scope}`;\r\n\r\n\t}\r\n\r\n\tgetNodeType() {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === TangentNode.GEOMETRY ) {\r\n\r\n\t\t\treturn 'vec4';\r\n\r\n\t\t}\r\n\r\n\t\treturn 'vec3';\r\n\r\n\t}\r\n\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( scope === TangentNode.GEOMETRY ) {\r\n\r\n\t\t\toutputNode = attribute( 'tangent', 'vec4' );\r\n\r\n\t\t\tif ( builder.geometry.hasAttribute( 'tangent' ) === false ) {\r\n\r\n\t\t\t\tbuilder.geometry.computeTangents();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === TangentNode.LOCAL ) {\r\n\r\n\t\t\toutputNode = varying( tangentGeometry.xyz );\r\n\r\n\t\t} else if ( scope === TangentNode.VIEW ) {\r\n\r\n\t\t\tconst vertexNode = modelViewMatrix.mul( vec4( tangentLocal, 0 ) ).xyz;\r\n\t\t\toutputNode = normalize( varying( vertexNode ) );\r\n\r\n\t\t} else if ( scope === TangentNode.WORLD ) {\r\n\r\n\t\t\tconst vertexNode = tangentView.transformDirection( cameraViewMatrix );\r\n\t\t\toutputNode = normalize( varying( vertexNode ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.scope = this.scope;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.scope = data.scope;\r\n\r\n\t}\r\n\r\n}\r\n\r\nTangentNode.GEOMETRY = 'geometry';\r\nTangentNode.LOCAL = 'local';\r\nTangentNode.VIEW = 'view';\r\nTangentNode.WORLD = 'world';\r\n\r\nexport default TangentNode;\r\n\r\nexport const tangentGeometry = nodeImmutable( TangentNode, TangentNode.GEOMETRY );\r\nexport const tangentLocal = nodeImmutable( TangentNode, TangentNode.LOCAL );\r\nexport const tangentView = nodeImmutable( TangentNode, TangentNode.VIEW );\r\nexport const tangentWorld = nodeImmutable( TangentNode, TangentNode.WORLD );\r\nexport const transformedTangentView = temp( tangentView, 'TransformedTangentView' );\r\nexport const transformedTangentWorld = normalize( transformedTangentView.transformDirection( cameraViewMatrix ) );\r\n\r\naddNodeClass( 'TangentNode', TangentNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { nodeObject } from '../shadernode/ShaderNode.js';\r\nimport { attribute } from '../core/AttributeNode.js';\r\nimport { reference, referenceBuffer } from './ReferenceNode.js';\r\nimport { add } from '../math/OperatorNode.js';\r\nimport { normalLocal } from './NormalNode.js';\r\nimport { positionLocal } from './PositionNode.js';\r\nimport { tangentLocal } from './TangentNode.js';\r\nimport { uniform } from '../core/UniformNode.js';\r\nimport { buffer } from './BufferNode.js';\r\n\r\nclass SkinningNode extends Node {\r\n\r\n\tconstructor( skinnedMesh, useReference = false ) {\r\n\r\n\t\tsuper( 'void' );\r\n\r\n\t\tthis.skinnedMesh = skinnedMesh;\r\n\t\tthis.useReference = useReference;\r\n\r\n\t\tthis.updateType = NodeUpdateType.OBJECT;\r\n\r\n\t\t//\r\n\r\n\t\tthis.skinIndexNode = attribute( 'skinIndex', 'uvec4' );\r\n\t\tthis.skinWeightNode = attribute( 'skinWeight', 'vec4' );\r\n\r\n\t\tlet bindMatrixNode, bindMatrixInverseNode, boneMatricesNode;\r\n\r\n\t\tif ( useReference ) {\r\n\r\n\t\t\tbindMatrixNode = reference( 'bindMatrix', 'mat4' );\r\n\t\t\tbindMatrixInverseNode = reference( 'bindMatrixInverse', 'mat4' );\r\n\t\t\tboneMatricesNode = referenceBuffer( 'skeleton.boneMatrices', 'mat4', skinnedMesh.skeleton.bones.length );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tbindMatrixNode = uniform( skinnedMesh.bindMatrix, 'mat4' );\r\n\t\t\tbindMatrixInverseNode = uniform( skinnedMesh.bindMatrixInverse, 'mat4' );\r\n\t\t\tboneMatricesNode = buffer( skinnedMesh.skeleton.boneMatrices, 'mat4', skinnedMesh.skeleton.bones.length );\r\n\r\n\t\t}\r\n\r\n\t\tthis.bindMatrixNode = bindMatrixNode;\r\n\t\tthis.bindMatrixInverseNode = bindMatrixInverseNode;\r\n\t\tthis.boneMatricesNode = boneMatricesNode;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst { skinIndexNode, skinWeightNode, bindMatrixNode, bindMatrixInverseNode, boneMatricesNode } = this;\r\n\r\n\t\tconst boneMatX = boneMatricesNode.element( skinIndexNode.x );\r\n\t\tconst boneMatY = boneMatricesNode.element( skinIndexNode.y );\r\n\t\tconst boneMatZ = boneMatricesNode.element( skinIndexNode.z );\r\n\t\tconst boneMatW = boneMatricesNode.element( skinIndexNode.w );\r\n\r\n\t\t// POSITION\r\n\r\n\t\tconst skinVertex = bindMatrixNode.mul( positionLocal );\r\n\r\n\t\tconst skinned = add(\r\n\t\t\tboneMatX.mul( skinWeightNode.x ).mul( skinVertex ),\r\n\t\t\tboneMatY.mul( skinWeightNode.y ).mul( skinVertex ),\r\n\t\t\tboneMatZ.mul( skinWeightNode.z ).mul( skinVertex ),\r\n\t\t\tboneMatW.mul( skinWeightNode.w ).mul( skinVertex )\r\n\t\t);\r\n\r\n\t\tconst skinPosition = bindMatrixInverseNode.mul( skinned ).xyz;\r\n\r\n\t\t// NORMAL\r\n\r\n\t\tlet skinMatrix = add(\r\n\t\t\tskinWeightNode.x.mul( boneMatX ),\r\n\t\t\tskinWeightNode.y.mul( boneMatY ),\r\n\t\t\tskinWeightNode.z.mul( boneMatZ ),\r\n\t\t\tskinWeightNode.w.mul( boneMatW )\r\n\t\t);\r\n\r\n\t\tskinMatrix = bindMatrixInverseNode.mul( skinMatrix ).mul( bindMatrixNode );\r\n\r\n\t\tconst skinNormal = skinMatrix.transformDirection( normalLocal ).xyz;\r\n\r\n\t\t// ASSIGNS\r\n\r\n\t\tpositionLocal.assign( skinPosition );\r\n\t\tnormalLocal.assign( skinNormal );\r\n\r\n\t\tif ( builder.hasGeometryAttribute( 'tangent' ) ) {\r\n\r\n\t\t\ttangentLocal.assign( skinNormal );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tif ( output !== 'void' ) {\r\n\r\n\t\t\treturn positionLocal.build( builder, output );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tconst object = this.useReference ? frame.object : this.skinnedMesh;\r\n\r\n\t\tobject.skeleton.update();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default SkinningNode;\r\n\r\nexport const skinning = ( skinnedMesh ) => nodeObject( new SkinningNode( skinnedMesh ) );\r\nexport const skinningReference = ( skinnedMesh ) => nodeObject( new SkinningNode( skinnedMesh, true ) );\r\n\r\naddNodeClass( 'SkinningNode', SkinningNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { expression } from '../code/ExpressionNode.js';\r\nimport { bypass } from '../core/BypassNode.js';\r\nimport { context } from '../core/ContextNode.js';\r\nimport { addNodeElement, nodeObject, nodeArray } from '../shadernode/ShaderNode.js';\r\n\r\nclass LoopNode extends Node {\r\n\r\n\tconstructor( params = [] ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.params = params;\r\n\r\n\t}\r\n\r\n\tgetVarName( index ) {\r\n\r\n\t\treturn String.fromCharCode( 'i'.charCodeAt() + index );\r\n\r\n\t}\r\n\r\n\tgetProperties( builder ) {\r\n\r\n\t\tconst properties = builder.getNodeProperties( this );\r\n\r\n\t\tif ( properties.stackNode !== undefined ) return properties;\r\n\r\n\t\t//\r\n\r\n\t\tconst inputs = {};\r\n\r\n\t\tfor ( let i = 0, l = this.params.length - 1; i < l; i ++ ) {\r\n\r\n\t\t\tconst param = this.params[ i ];\r\n\r\n\t\t\tconst name = ( param.isNode !== true && param.name ) || this.getVarName( i );\r\n\t\t\tconst type = ( param.isNode !== true && param.type ) || 'int';\r\n\r\n\t\t\tinputs[ name ] = expression( name, type );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.returnsNode = this.params[ this.params.length - 1 ]( inputs, builder.addStack(), builder );\r\n\t\tproperties.stackNode = builder.removeStack();\r\n\r\n\t\treturn properties;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst { returnsNode } = this.getProperties( builder );\r\n\r\n\t\treturn returnsNode ? returnsNode.getNodeType( builder ) : 'void';\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\t// setup properties\r\n\r\n\t\tthis.getProperties( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst properties = this.getProperties( builder );\r\n\r\n\t\tconst contextData = { tempWrite: false };\r\n\r\n\t\tconst params = this.params;\r\n\t\tconst stackNode = properties.stackNode;\r\n\r\n\t\tfor ( let i = 0, l = params.length - 1; i < l; i ++ ) {\r\n\r\n\t\t\tconst param = params[ i ];\r\n\r\n\t\t\tlet start = null, end = null, name = null, type = null, condition = null, update = null;\r\n\r\n\t\t\tif ( param.isNode ) {\r\n\r\n\t\t\t\ttype = 'int';\r\n\t\t\t\tname = this.getVarName( i );\r\n\t\t\t\tstart = '0';\r\n\t\t\t\tend = param.build( builder, type );\r\n\t\t\t\tcondition = '<';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttype = param.type || 'int';\r\n\t\t\t\tname = param.name || this.getVarName( i );\r\n\t\t\t\tstart = param.start;\r\n\t\t\t\tend = param.end;\r\n\t\t\t\tcondition = param.condition;\r\n\t\t\t\tupdate = param.update;\r\n\r\n\t\t\t\tif ( typeof start === 'number' ) start = start.toString();\r\n\t\t\t\telse if ( start && start.isNode ) start = start.build( builder, type );\r\n\r\n\t\t\t\tif ( typeof end === 'number' ) end = end.toString();\r\n\t\t\t\telse if ( end && end.isNode ) end = end.build( builder, type );\r\n\r\n\t\t\t\tif ( start !== undefined && end === undefined ) {\r\n\r\n\t\t\t\t\tstart = start + ' - 1';\r\n\t\t\t\t\tend = '0';\r\n\t\t\t\t\tcondition = '>=';\r\n\r\n\t\t\t\t} else if ( end !== undefined && start === undefined ) {\r\n\r\n\t\t\t\t\tstart = '0';\r\n\t\t\t\t\tcondition = '<';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( condition === undefined ) {\r\n\r\n\t\t\t\t\tif ( Number( start ) > Number( end ) ) {\r\n\r\n\t\t\t\t\t\tcondition = '>=';\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tcondition = '<';\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst internalParam = { start, end, condition };\r\n\r\n\t\t\t//\r\n\r\n\t\t\tconst startSnippet = internalParam.start;\r\n\t\t\tconst endSnippet = internalParam.end;\r\n\r\n\t\t\tlet declarationSnippet = '';\r\n\t\t\tlet conditionalSnippet = '';\r\n\t\t\tlet updateSnippet = '';\r\n\r\n\t\t\tif ( ! update ) {\r\n\r\n\t\t\t\tif ( type === 'int' || type === 'uint' ) {\r\n\r\n\t\t\t\t\tif ( condition.includes( '<' ) ) update = '++';\r\n\t\t\t\t\telse update = '--';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( condition.includes( '<' ) ) update = '+= 1.';\r\n\t\t\t\t\telse update = '-= 1.';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdeclarationSnippet += builder.getVar( type, name ) + ' = ' + startSnippet;\r\n\r\n\t\t\tconditionalSnippet += name + ' ' + condition + ' ' + endSnippet;\r\n\t\t\tupdateSnippet += name + ' ' + update;\r\n\r\n\t\t\tconst forSnippet = `for ( ${ declarationSnippet }; ${ conditionalSnippet }; ${ updateSnippet } )`;\r\n\r\n\t\t\tbuilder.addFlowCode( ( i === 0 ? '\\n' : '' ) + builder.tab + forSnippet + ' {\\n\\n' ).addFlowTab();\r\n\r\n\t\t}\r\n\r\n\t\tconst stackSnippet = context( stackNode, contextData ).build( builder, 'void' );\r\n\r\n\t\tconst returnsSnippet = properties.returnsNode ? properties.returnsNode.build( builder ) : '';\r\n\r\n\t\tbuilder.removeFlowTab().addFlowCode( '\\n' + builder.tab + stackSnippet );\r\n\r\n\t\tfor ( let i = 0, l = this.params.length - 1; i < l; i ++ ) {\r\n\r\n\t\t\tbuilder.addFlowCode( ( i === 0 ? '' : builder.tab ) + '}\\n\\n' ).removeFlowTab();\r\n\r\n\t\t}\r\n\r\n\t\tbuilder.addFlowTab();\r\n\r\n\t\treturn returnsSnippet;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default LoopNode;\r\n\r\nexport const loop = ( ...params ) => nodeObject( new LoopNode( nodeArray( params, 'int' ) ) ).append();\r\nexport const Continue = () => expression( 'continue' ).append();\r\nexport const Break = () => expression( 'break' ).append();\r\n\r\naddNodeElement( 'loop', ( returns, ...params ) => bypass( returns, loop( ...params ) ) );\r\n\r\naddNodeClass( 'LoopNode', LoopNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { nodeProxy, tslFn } from '../shadernode/ShaderNode.js';\r\nimport { uniform } from '../core/UniformNode.js';\r\nimport { reference } from './ReferenceNode.js';\r\nimport { positionLocal } from './PositionNode.js';\r\nimport { normalLocal } from './NormalNode.js';\r\nimport { textureLoad } from './TextureNode.js';\r\nimport { vertexIndex } from '../core/IndexNode.js';\r\nimport { ivec2, int } from '../shadernode/ShaderNode.js';\r\nimport { DataArrayTexture, Vector2, Vector4, FloatType } from 'three';\r\nimport { loop } from '../utils/LoopNode.js';\r\n\r\nconst morphTextures = new WeakMap();\r\nconst morphVec4 = new Vector4();\r\n\r\nconst getMorph = tslFn( ( { bufferMap, influence, stride, width, depth, offset } ) => {\r\n\r\n\tconst texelIndex = int( vertexIndex ).mul( stride ).add( offset );\r\n\r\n\tconst y = texelIndex.div( width );\r\n\tconst x = texelIndex.sub( y.mul( width ) );\r\n\r\n\tconst bufferAttrib = textureLoad( bufferMap, ivec2( x, y ) ).depth( depth );\r\n\r\n\treturn bufferAttrib.mul( influence );\r\n\r\n} );\r\n\r\nfunction getEntry( geometry ) {\r\n\r\n\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\r\n\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\r\n\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\r\n\r\n\t// instead of using attributes, the WebGL 2 code path encodes morph targets\r\n\t// into an array of data textures. Each layer represents a single morph target.\r\n\r\n\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\r\n\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\r\n\r\n\tlet entry = morphTextures.get( geometry );\r\n\r\n\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\r\n\r\n\t\tif ( entry !== undefined ) entry.texture.dispose();\r\n\r\n\t\tconst morphTargets = geometry.morphAttributes.position || [];\r\n\t\tconst morphNormals = geometry.morphAttributes.normal || [];\r\n\t\tconst morphColors = geometry.morphAttributes.color || [];\r\n\r\n\t\tlet vertexDataCount = 0;\r\n\r\n\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\r\n\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\r\n\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\r\n\r\n\t\tlet width = geometry.attributes.position.count * vertexDataCount;\r\n\t\tlet height = 1;\r\n\r\n\t\tconst maxTextureSize = 4096; // @TODO: Use 'capabilities.maxTextureSize'\r\n\r\n\t\tif ( width > maxTextureSize ) {\r\n\r\n\t\t\theight = Math.ceil( width / maxTextureSize );\r\n\t\t\twidth = maxTextureSize;\r\n\r\n\t\t}\r\n\r\n\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\r\n\r\n\t\tconst bufferTexture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\r\n\t\tbufferTexture.type = FloatType;\r\n\t\tbufferTexture.needsUpdate = true;\r\n\r\n\t\t// fill buffer\r\n\r\n\t\tconst vertexDataStride = vertexDataCount * 4;\r\n\r\n\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\r\n\r\n\t\t\tconst morphTarget = morphTargets[ i ];\r\n\t\t\tconst morphNormal = morphNormals[ i ];\r\n\t\t\tconst morphColor = morphColors[ i ];\r\n\r\n\t\t\tconst offset = width * height * 4 * i;\r\n\r\n\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\r\n\r\n\t\t\t\tconst stride = j * vertexDataStride;\r\n\r\n\t\t\t\tif ( hasMorphPosition === true ) {\r\n\r\n\t\t\t\t\tmorphVec4.fromBufferAttribute( morphTarget, j );\r\n\r\n\t\t\t\t\tbuffer[ offset + stride + 0 ] = morphVec4.x;\r\n\t\t\t\t\tbuffer[ offset + stride + 1 ] = morphVec4.y;\r\n\t\t\t\t\tbuffer[ offset + stride + 2 ] = morphVec4.z;\r\n\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasMorphNormals === true ) {\r\n\r\n\t\t\t\t\tmorphVec4.fromBufferAttribute( morphNormal, j );\r\n\r\n\t\t\t\t\tbuffer[ offset + stride + 4 ] = morphVec4.x;\r\n\t\t\t\t\tbuffer[ offset + stride + 5 ] = morphVec4.y;\r\n\t\t\t\t\tbuffer[ offset + stride + 6 ] = morphVec4.z;\r\n\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasMorphColors === true ) {\r\n\r\n\t\t\t\t\tmorphVec4.fromBufferAttribute( morphColor, j );\r\n\r\n\t\t\t\t\tbuffer[ offset + stride + 8 ] = morphVec4.x;\r\n\t\t\t\t\tbuffer[ offset + stride + 9 ] = morphVec4.y;\r\n\t\t\t\t\tbuffer[ offset + stride + 10 ] = morphVec4.z;\r\n\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morphVec4.w : 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tentry = {\r\n\t\t\tcount: morphTargetsCount,\r\n\t\t\ttexture: bufferTexture,\r\n\t\t\tstride: vertexDataCount,\r\n\t\t\tsize: new Vector2( width, height )\r\n\t\t};\r\n\r\n\t\tmorphTextures.set( geometry, entry );\r\n\r\n\t\tfunction disposeTexture() {\r\n\r\n\t\t\tbufferTexture.dispose();\r\n\r\n\t\t\tmorphTextures.delete( geometry );\r\n\r\n\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addEventListener( 'dispose', disposeTexture );\r\n\r\n\t}\r\n\r\n\treturn entry;\r\n\r\n}\r\n\r\n\r\nclass MorphNode extends Node {\r\n\r\n\tconstructor( mesh ) {\r\n\r\n\t\tsuper( 'void' );\r\n\r\n\t\tthis.mesh = mesh;\r\n\t\tthis.morphBaseInfluence = uniform( 1 );\r\n\r\n\t\tthis.updateType = NodeUpdateType.OBJECT;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst { geometry } = builder;\r\n\r\n\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\r\n\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\r\n\r\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\r\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\r\n\r\n\t\t// nodes\r\n\r\n\t\tconst { texture: bufferMap, stride, size } = getEntry( geometry );\r\n\r\n\t\tif ( hasMorphPosition === true ) positionLocal.mulAssign( this.morphBaseInfluence );\r\n\t\tif ( hasMorphNormals === true ) normalLocal.mulAssign( this.morphBaseInfluence );\r\n\r\n\t\tconst width = int( size.width );\r\n\r\n\t\tloop( morphTargetsCount, ( { i } ) => {\r\n\r\n\t\t\tconst influence = reference( 'morphTargetInfluences', 'float' ).element( i );\r\n\r\n\t\t\tif ( hasMorphPosition === true ) {\r\n\r\n\t\t\t\tpositionLocal.addAssign( getMorph( {\r\n\t\t\t\t\tbufferMap,\r\n\t\t\t\t\tinfluence,\r\n\t\t\t\t\tstride,\r\n\t\t\t\t\twidth,\r\n\t\t\t\t\tdepth: i,\r\n\t\t\t\t\toffset: int( 0 )\r\n\t\t\t\t} ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasMorphNormals === true ) {\r\n\r\n\t\t\t\tnormalLocal.addAssign( getMorph( {\r\n\t\t\t\t\tbufferMap,\r\n\t\t\t\t\tinfluence,\r\n\t\t\t\t\tstride,\r\n\t\t\t\t\twidth,\r\n\t\t\t\t\tdepth: i,\r\n\t\t\t\t\toffset: int( 1 )\r\n\t\t\t\t} ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst morphBaseInfluence = this.morphBaseInfluence;\r\n\r\n\t\tif ( this.mesh.geometry.morphTargetsRelative ) {\r\n\r\n\t\t\tmorphBaseInfluence.value = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmorphBaseInfluence.value = 1 - this.mesh.morphTargetInfluences.reduce( ( a, b ) => a + b, 0 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default MorphNode;\r\n\r\nexport const morphReference = nodeProxy( MorphNode );\r\n\r\naddNodeClass( 'MorphNode', MorphNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { cameraViewMatrix } from './CameraNode.js';\r\nimport { transformedNormalView } from './NormalNode.js';\r\nimport { positionViewDirection } from './PositionNode.js';\r\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\r\n\r\nclass ReflectVectorNode extends Node {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t}\r\n\r\n\tgetHash( /*builder*/ ) {\r\n\r\n\t\treturn 'reflectVector';\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst reflectView = positionViewDirection.negate().reflect( transformedNormalView );\r\n\r\n\t\treturn reflectView.transformDirection( cameraViewMatrix );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ReflectVectorNode;\r\n\r\nexport const reflectVector = nodeImmutable( ReflectVectorNode );\r\n\r\naddNodeClass( 'ReflectVectorNode', ReflectVectorNode );\r\n", "import TextureNode from './TextureNode.js';\r\nimport { reflectVector } from './ReflectVectorNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, nodeProxy, vec3 } from '../shadernode/ShaderNode.js';\r\nimport { WebGPUCoordinateSystem } from 'three';\r\n\r\nclass CubeTextureNode extends TextureNode {\r\n\r\n\tconstructor( value, uvNode = null, levelNode = null ) {\r\n\r\n\t\tsuper( value, uvNode, levelNode );\r\n\r\n\t\tthis.isCubeTextureNode = true;\r\n\r\n\t}\r\n\r\n\tgetInputType( /*builder*/ ) {\r\n\r\n\t\treturn 'cubeTexture';\r\n\r\n\t}\r\n\r\n\tgetDefaultUV() {\r\n\r\n\t\treturn reflectVector;\r\n\r\n\t}\r\n\r\n\tsetUpdateMatrix( /*updateMatrix*/ ) { } // Ignore .updateMatrix for CubeTextureNode\r\n\r\n\tsetupUV( builder, uvNode ) {\r\n\r\n\t\tconst texture = this.value;\r\n\r\n\t\tif ( builder.renderer.coordinateSystem === WebGPUCoordinateSystem || ! texture.isRenderTargetTexture ) {\r\n\r\n\t\t\treturn vec3( uvNode.x.negate(), uvNode.yz );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn uvNode;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgenerateUV( builder, cubeUV ) {\r\n\r\n\t\treturn cubeUV.build( builder, 'vec3' );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default CubeTextureNode;\r\n\r\nexport const cubeTexture = nodeProxy( CubeTextureNode );\r\n\r\naddNodeElement( 'cubeTexture', cubeTexture );\r\n\r\naddNodeClass( 'CubeTextureNode', CubeTextureNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\n\r\nclass LightingNode extends Node {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t}\r\n\r\n\tgenerate( /*builder*/ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default LightingNode;\r\n\r\naddNodeClass( 'LightingNode', LightingNode );\r\n", "import LightingNode from './LightingNode.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { uniform } from '../core/UniformNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { /*vec2,*/ vec3, vec4 } from '../shadernode/ShaderNode.js';\r\nimport { reference } from '../accessors/ReferenceNode.js';\r\nimport { texture } from '../accessors/TextureNode.js';\r\nimport { positionWorld } from '../accessors/PositionNode.js';\r\nimport { normalWorld } from '../accessors/NormalNode.js';\r\nimport { WebGPUCoordinateSystem } from 'three';\r\n//import { add } from '../math/OperatorNode.js';\r\n\r\nimport { Color, DepthTexture, NearestFilter, LessCompare } from 'three';\r\n\r\nlet overrideMaterial = null;\r\n\r\nclass AnalyticLightNode extends LightingNode {\r\n\r\n\tconstructor( light = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.updateType = NodeUpdateType.FRAME;\r\n\r\n\t\tthis.light = light;\r\n\r\n\t\tthis.rtt = null;\r\n\t\tthis.shadowNode = null;\r\n\r\n\t\tthis.color = new Color();\r\n\t\tthis._defaultColorNode = uniform( this.color );\r\n\r\n\t\tthis.colorNode = this._defaultColorNode;\r\n\r\n\t\tthis.isAnalyticLightNode = true;\r\n\r\n\t}\r\n\r\n\tgetCacheKey() {\r\n\r\n\t\treturn super.getCacheKey() + '-' + ( this.light.id + '-' + ( this.light.castShadow ? '1' : '0' ) );\r\n\r\n\t}\r\n\r\n\tgetHash() {\r\n\r\n\t\treturn this.light.uuid;\r\n\r\n\t}\r\n\r\n\tsetupShadow( builder ) {\r\n\r\n\t\tlet shadowNode = this.shadowNode;\r\n\r\n\t\tif ( shadowNode === null ) {\r\n\r\n\t\t\tif ( overrideMaterial === null ) {\r\n\r\n\t\t\t\toverrideMaterial = builder.createNodeMaterial();\r\n\t\t\t\toverrideMaterial.fragmentNode = vec4( 0, 0, 0, 1 );\r\n\t\t\t\toverrideMaterial.isShadowNodeMaterial = true; // Use to avoid other overrideMaterial override material.fragmentNode unintentionally when using material.shadowNode\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst shadow = this.light.shadow;\r\n\t\t\tconst rtt = builder.getRenderTarget( shadow.mapSize.width, shadow.mapSize.height );\r\n\r\n\t\t\tconst depthTexture = new DepthTexture();\r\n\t\t\tdepthTexture.minFilter = NearestFilter;\r\n\t\t\tdepthTexture.magFilter = NearestFilter;\r\n\t\t\tdepthTexture.image.width = shadow.mapSize.width;\r\n\t\t\tdepthTexture.image.height = shadow.mapSize.height;\r\n\t\t\tdepthTexture.compareFunction = LessCompare;\r\n\r\n\t\t\trtt.depthTexture = depthTexture;\r\n\r\n\t\t\tshadow.camera.updateProjectionMatrix();\r\n\r\n\t\t\t//\r\n\r\n\t\t\tconst bias = reference( 'bias', 'float', shadow );\r\n\t\t\tconst normalBias = reference( 'normalBias', 'float', shadow );\r\n\r\n\t\t\tlet shadowCoord = uniform( shadow.matrix ).mul( positionWorld.add( normalWorld.mul( normalBias ) ) );\r\n\t\t\tshadowCoord = shadowCoord.xyz.div( shadowCoord.w );\r\n\r\n\t\t\tconst frustumTest = shadowCoord.x.greaterThanEqual( 0 )\r\n\t\t\t\t.and( shadowCoord.x.lessThanEqual( 1 ) )\r\n\t\t\t\t.and( shadowCoord.y.greaterThanEqual( 0 ) )\r\n\t\t\t\t.and( shadowCoord.y.lessThanEqual( 1 ) )\r\n\t\t\t\t.and( shadowCoord.z.lessThanEqual( 1 ) );\r\n\r\n\t\t\tlet coordZ = shadowCoord.z.add( bias );\r\n\r\n\t\t\tif ( builder.renderer.coordinateSystem === WebGPUCoordinateSystem ) {\r\n\r\n\t\t\t\tcoordZ = coordZ.mul( 2 ).sub( 1 ); // WebGPU: Convertion [ 0, 1 ] to [ - 1, 1 ]\r\n\r\n\t\t\t}\r\n\r\n\t\t\tshadowCoord = vec3(\r\n\t\t\t\tshadowCoord.x,\r\n\t\t\t\tshadowCoord.y.oneMinus(), // follow webgpu standards\r\n\t\t\t\tcoordZ\r\n\t\t\t);\r\n\r\n\t\t\tconst textureCompare = ( depthTexture, shadowCoord, compare ) => texture( depthTexture, shadowCoord ).compare( compare );\r\n\t\t\t//const textureCompare = ( depthTexture, shadowCoord, compare ) => compare.step( texture( depthTexture, shadowCoord ) );\r\n\r\n\t\t\t// BasicShadowMap\r\n\r\n\t\t\tshadowNode = textureCompare( depthTexture, shadowCoord.xy, shadowCoord.z );\r\n\r\n\t\t\t// PCFShadowMap\r\n\t\t\t/*\r\n\t\t\tconst mapSize = reference( 'mapSize', 'vec2', shadow );\r\n\t\t\tconst radius = reference( 'radius', 'float', shadow );\r\n\r\n\t\t\tconst texelSize = vec2( 1 ).div( mapSize );\r\n\t\t\tconst dx0 = texelSize.x.negate().mul( radius );\r\n\t\t\tconst dy0 = texelSize.y.negate().mul( radius );\r\n\t\t\tconst dx1 = texelSize.x.mul( radius );\r\n\t\t\tconst dy1 = texelSize.y.mul( radius );\r\n\t\t\tconst dx2 = dx0.mul( 2 );\r\n\t\t\tconst dy2 = dy0.mul( 2 );\r\n\t\t\tconst dx3 = dx1.mul( 2 );\r\n\t\t\tconst dy3 = dy1.mul( 2 );\r\n\r\n\t\t\tshadowNode = add(\r\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx0, dy0 ) ), shadowCoord.z ),\r\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( 0, dy0 ) ), shadowCoord.z ),\r\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx1, dy0 ) ), shadowCoord.z ),\r\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx2, dy2 ) ), shadowCoord.z ),\r\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( 0, dy2 ) ), shadowCoord.z ),\r\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx3, dy2 ) ), shadowCoord.z ),\r\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx0, 0 ) ), shadowCoord.z ),\r\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx2, 0 ) ), shadowCoord.z ),\r\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy, shadowCoord.z ),\r\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx3, 0 ) ), shadowCoord.z ),\r\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx1, 0 ) ), shadowCoord.z ),\r\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx2, dy3 ) ), shadowCoord.z ),\r\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( 0, dy3 ) ), shadowCoord.z ),\r\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx3, dy3 ) ), shadowCoord.z ),\r\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx0, dy1 ) ), shadowCoord.z ),\r\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( 0, dy1 ) ), shadowCoord.z ),\r\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx1, dy1 ) ), shadowCoord.z )\r\n\t\t\t).mul( 1 / 17 );\r\n\t\t\t*/\r\n\t\t\t//\r\n\r\n\t\t\tconst shadowColor = texture( rtt.texture, shadowCoord );\r\n\r\n\t\t\tthis.rtt = rtt;\r\n\t\t\tthis.colorNode = this.colorNode.mul( frustumTest.mix( 1, shadowNode.mix( shadowColor.a.mix( 1, shadowColor ), 1 ) ) );\r\n\r\n\t\t\tthis.shadowNode = shadowNode;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tthis.updateBeforeType = NodeUpdateType.RENDER;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tif ( this.light.castShadow ) this.setupShadow( builder );\r\n\t\telse if ( this.shadowNode !== null ) this.disposeShadow();\r\n\r\n\t}\r\n\r\n\tupdateShadow( frame ) {\r\n\r\n\t\tconst { rtt, light } = this;\r\n\t\tconst { renderer, scene } = frame;\r\n\r\n\t\tconst currentOverrideMaterial = scene.overrideMaterial;\r\n\r\n\t\tscene.overrideMaterial = overrideMaterial;\r\n\r\n\t\trtt.setSize( light.shadow.mapSize.width, light.shadow.mapSize.height );\r\n\r\n\t\tlight.shadow.updateMatrices( light );\r\n\r\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\tconst currentRenderObjectFunction = renderer.getRenderObjectFunction();\r\n\r\n\t\trenderer.setRenderObjectFunction( ( object, ...params ) => {\r\n\r\n\t\t\tif ( object.castShadow === true ) {\r\n\r\n\t\t\t\trenderer.renderObject( object, ...params );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\trenderer.setRenderTarget( rtt );\r\n\r\n\t\trenderer.render( scene, light.shadow.camera );\r\n\r\n\t\trenderer.setRenderTarget( currentRenderTarget );\r\n\t\trenderer.setRenderObjectFunction( currentRenderObjectFunction );\r\n\r\n\t\tscene.overrideMaterial = currentOverrideMaterial;\r\n\r\n\t}\r\n\r\n\tdisposeShadow() {\r\n\r\n\t\tthis.rtt.dispose();\r\n\r\n\t\tthis.shadowNode = null;\r\n\t\tthis.rtt = null;\r\n\r\n\t\tthis.colorNode = this._defaultColorNode;\r\n\r\n\t}\r\n\r\n\tupdateBefore( frame ) {\r\n\r\n\t\tconst { light } = this;\r\n\r\n\t\tif ( light.castShadow ) this.updateShadow( frame );\r\n\r\n\t}\r\n\r\n\tupdate( /*frame*/ ) {\r\n\r\n\t\tconst { light } = this;\r\n\r\n\t\tthis.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default AnalyticLightNode;\r\n\r\naddNodeClass( 'AnalyticLightNode', AnalyticLightNode );\r\n", "import Node from '../core/Node.js';\r\nimport AnalyticLightNode from './AnalyticLightNode.js';\r\nimport { nodeObject, nodeProxy, vec3 } from '../shadernode/ShaderNode.js';\r\n\r\nconst LightNodes = new WeakMap();\r\n\r\nconst sortLights = ( lights ) => {\r\n\r\n\treturn lights.sort( ( a, b ) => a.id - b.id );\r\n\r\n};\r\n\r\nclass LightsNode extends Node {\r\n\r\n\tconstructor( lightNodes = [] ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.totalDiffuseNode = vec3().temp( 'totalDiffuse' );\r\n\t\tthis.totalSpecularNode = vec3().temp( 'totalSpecular' );\r\n\r\n\t\tthis.outgoingLightNode = vec3().temp( 'outgoingLight' );\r\n\r\n\t\tthis.lightNodes = lightNodes;\r\n\r\n\t\tthis._hash = null;\r\n\r\n\t}\r\n\r\n\tget hasLight() {\r\n\r\n\t\treturn this.lightNodes.length > 0;\r\n\r\n\t}\r\n\r\n\tgetHash() {\r\n\r\n\t\tif ( this._hash === null ) {\r\n\r\n\t\t\tconst hash = [];\r\n\r\n\t\t\tfor ( const lightNode of this.lightNodes ) {\r\n\r\n\t\t\t\thash.push( lightNode.getHash() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._hash = 'lights-' + hash.join( ',' );\r\n\r\n\t\t}\r\n\r\n\t\treturn this._hash;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst context = builder.context;\r\n\t\tconst lightingModel = context.lightingModel;\r\n\r\n\t\tlet outgoingLightNode = this.outgoingLightNode;\r\n\r\n\t\tif ( lightingModel ) {\r\n\r\n\t\t\tconst { lightNodes, totalDiffuseNode, totalSpecularNode } = this;\r\n\r\n\t\t\tcontext.outgoingLight = outgoingLightNode;\r\n\r\n\t\t\tconst stack = builder.addStack();\r\n\r\n\t\t\t//\r\n\r\n\t\t\tlightingModel.start( context, stack, builder );\r\n\r\n\t\t\t// lights\r\n\r\n\t\t\tfor ( const lightNode of lightNodes ) {\r\n\r\n\t\t\t\tlightNode.build( builder );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tlightingModel.indirectDiffuse( context, stack, builder );\r\n\t\t\tlightingModel.indirectSpecular( context, stack, builder );\r\n\t\t\tlightingModel.ambientOcclusion( context, stack, builder );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tconst { backdrop, backdropAlpha } = context;\r\n\t\t\tconst { directDiffuse, directSpecular, indirectDiffuse, indirectSpecular } = context.reflectedLight;\r\n\r\n\t\t\tlet totalDiffuse = directDiffuse.add( indirectDiffuse );\r\n\r\n\t\t\tif ( backdrop !== null ) {\r\n\r\n\t\t\t\ttotalDiffuse = vec3( backdropAlpha !== null ? backdropAlpha.mix( totalDiffuse, backdrop ) : backdrop );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttotalDiffuseNode.assign( totalDiffuse );\r\n\t\t\ttotalSpecularNode.assign( directSpecular.add( indirectSpecular ) );\r\n\r\n\t\t\toutgoingLightNode.assign( totalDiffuseNode.add( totalSpecularNode ) );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tlightingModel.finish( context, stack, builder );\r\n\r\n\t\t\t//\r\n\r\n\t\t\toutgoingLightNode = outgoingLightNode.bypass( builder.removeStack() );\r\n\r\n\t\t}\r\n\r\n\t\treturn outgoingLightNode;\r\n\r\n\t}\r\n\r\n\t_getLightNodeById( id ) {\r\n\r\n\t\tfor ( const lightNode of this.lightNodes ) {\r\n\r\n\t\t\tif ( lightNode.isAnalyticLightNode && lightNode.light.id === id ) {\r\n\r\n\t\t\t\treturn lightNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tfromLights( lights = [] ) {\r\n\r\n\t\tconst lightNodes = [];\r\n\r\n\t\tlights = sortLights( lights );\r\n\r\n\t\tfor ( const light of lights ) {\r\n\r\n\t\t\tlet lightNode = this._getLightNodeById( light.id );\r\n\r\n\t\t\tif ( lightNode === null ) {\r\n\r\n\t\t\t\tconst lightClass = light.constructor;\r\n\t\t\t\tconst lightNodeClass = LightNodes.has( lightClass ) ? LightNodes.get( lightClass ) : AnalyticLightNode;\r\n\r\n\t\t\t\tlightNode = nodeObject( new lightNodeClass( light ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlightNodes.push( lightNode );\r\n\r\n\t\t}\r\n\r\n\t\tthis.lightNodes = lightNodes;\r\n\t\tthis._hash = null;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default LightsNode;\r\n\r\nexport const lights = ( lights ) => nodeObject( new LightsNode().fromLights( lights ) );\r\nexport const lightsNode = nodeProxy( LightsNode );\r\n\r\nexport function addLightNode( lightClass, lightNodeClass ) {\r\n\r\n\tif ( LightNodes.has( lightClass ) ) {\r\n\r\n\t\tconsole.warn( `Redefinition of light node ${ lightNodeClass.type }` );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tif ( typeof lightClass !== 'function' ) throw new Error( `Light ${ lightClass.name } is not a class` );\r\n\tif ( typeof lightNodeClass !== 'function' || ! lightNodeClass.type ) throw new Error( `Light node ${ lightNodeClass.type } is not a class` );\r\n\r\n\tLightNodes.set( lightClass, lightNodeClass );\r\n\r\n}\r\n", "import LightingNode from './LightingNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\n\r\nclass AONode extends LightingNode {\r\n\r\n\tconstructor( aoNode = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.aoNode = aoNode;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst aoIntensity = 1;\r\n\t\tconst aoNode = this.aoNode.x.sub( 1.0 ).mul( aoIntensity ).add( 1.0 );\r\n\r\n\t\tbuilder.context.ambientOcclusion.mulAssign( aoNode );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default AONode;\r\n\r\naddNodeClass( 'AONode', AONode );\r\n", "import ContextNode from '../core/ContextNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, nodeProxy, float, vec3 } from '../shadernode/ShaderNode.js';\r\n\r\nclass LightingContextNode extends ContextNode {\r\n\r\n\tconstructor( node, lightingModel = null, backdropNode = null, backdropAlphaNode = null ) {\r\n\r\n\t\tsuper( node );\r\n\r\n\t\tthis.lightingModel = lightingModel;\r\n\t\tthis.backdropNode = backdropNode;\r\n\t\tthis.backdropAlphaNode = backdropAlphaNode;\r\n\r\n\t\tthis._context = null;\r\n\r\n\t}\r\n\r\n\tgetContext() {\r\n\r\n\t\tconst { backdropNode, backdropAlphaNode } = this;\r\n\r\n\t\tconst directDiffuse = vec3().temp( 'directDiffuse' ),\r\n\t\t\tdirectSpecular = vec3().temp( 'directSpecular' ),\r\n\t\t\tindirectDiffuse = vec3().temp( 'indirectDiffuse' ),\r\n\t\t\tindirectSpecular = vec3().temp( 'indirectSpecular' );\r\n\r\n\t\tconst reflectedLight = {\r\n\t\t\tdirectDiffuse,\r\n\t\t\tdirectSpecular,\r\n\t\t\tindirectDiffuse,\r\n\t\t\tindirectSpecular\r\n\t\t};\r\n\r\n\t\tconst context = {\r\n\t\t\tradiance: vec3().temp( 'radiance' ),\r\n\t\t\tirradiance: vec3().temp( 'irradiance' ),\r\n\t\t\tiblIrradiance: vec3().temp( 'iblIrradiance' ),\r\n\t\t\tambientOcclusion: float( 1 ).temp( 'ambientOcclusion' ),\r\n\t\t\treflectedLight,\r\n\t\t\tbackdrop: backdropNode,\r\n\t\t\tbackdropAlpha: backdropAlphaNode\r\n\t\t};\r\n\r\n\t\treturn context;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tthis.context = this._context || ( this._context = this.getContext() );\r\n\t\tthis.context.lightingModel = this.lightingModel || builder.context.lightingModel;\r\n\r\n\t\treturn super.setup( builder );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default LightingContextNode;\r\n\r\nexport const lightingContext = nodeProxy( LightingContextNode );\r\n\r\naddNodeElement( 'lightingContext', lightingContext );\r\n\r\naddNodeClass( 'LightingContextNode', LightingContextNode );\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { positionWorldDirection } from '../accessors/PositionNode.js';\r\nimport { nodeProxy, vec2 } from '../shadernode/ShaderNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\n\r\nclass EquirectUVNode extends TempNode {\r\n\r\n\tconstructor( dirNode = positionWorldDirection ) {\r\n\r\n\t\tsuper( 'vec2' );\r\n\r\n\t\tthis.dirNode = dirNode;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst dir = this.dirNode;\r\n\r\n\t\tconst u = dir.z.atan2( dir.x ).mul( 1 / ( Math.PI * 2 ) ).add( 0.5 );\r\n\t\tconst v = dir.y.negate().clamp( - 1.0, 1.0 ).asin().mul( 1 / Math.PI ).add( 0.5 ); // @TODO: The use of negate() here could be an NDC issue.\r\n\r\n\t\treturn vec2( u, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default EquirectUVNode;\r\n\r\nexport const equirectUV = nodeProxy( EquirectUVNode );\r\n\r\naddNodeClass( 'EquirectUVNode', EquirectUVNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { maxMipLevel } from './MaxMipLevelNode.js';\r\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass SpecularMIPLevelNode extends Node {\r\n\r\n\tconstructor( textureNode, roughnessNode = null ) {\r\n\r\n\t\tsuper( 'float' );\r\n\r\n\t\tthis.textureNode = textureNode;\r\n\t\tthis.roughnessNode = roughnessNode;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst { textureNode, roughnessNode } = this;\r\n\r\n\t\t// taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\r\n\r\n\t\tconst maxMIPLevelScalar = maxMipLevel( textureNode );\r\n\r\n\t\tconst sigma = roughnessNode.mul( roughnessNode ).mul( Math.PI ).div( roughnessNode.add( 1.0 ) );\r\n\t\tconst desiredMIPLevel = maxMIPLevelScalar.add( sigma.log2() );\r\n\r\n\t\treturn desiredMIPLevel.clamp( 0.0, maxMIPLevelScalar );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default SpecularMIPLevelNode;\r\n\r\nexport const specularMIPLevel = nodeProxy( SpecularMIPLevelNode );\r\n\r\naddNodeClass( 'SpecularMIPLevelNode', SpecularMIPLevelNode );\r\n", "import LightingNode from './LightingNode.js';\r\nimport { cache } from '../core/CacheNode.js';\r\nimport { context } from '../core/ContextNode.js';\r\nimport { maxMipLevel } from '../utils/MaxMipLevelNode.js';\r\nimport { roughness, clearcoatRoughness } from '../core/PropertyNode.js';\r\nimport { equirectUV } from '../utils/EquirectUVNode.js';\r\nimport { specularMIPLevel } from '../utils/SpecularMIPLevelNode.js';\r\nimport { cameraViewMatrix } from '../accessors/CameraNode.js';\r\nimport { transformedClearcoatNormalView, transformedNormalView, transformedNormalWorld } from '../accessors/NormalNode.js';\r\nimport { positionViewDirection } from '../accessors/PositionNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { vec2 } from '../shadernode/ShaderNode.js';\r\nimport { cubeTexture } from '../accessors/CubeTextureNode.js';\r\nimport { reference } from '../accessors/ReferenceNode.js';\r\n\r\nconst envNodeCache = new WeakMap();\r\n\r\nclass EnvironmentNode extends LightingNode {\r\n\r\n\tconstructor( envNode = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.envNode = envNode;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tlet envNode = this.envNode;\r\n\r\n\t\tif ( envNode.isTextureNode && envNode.value.isCubeTexture !== true ) {\r\n\r\n\t\t\tlet cacheEnvNode = envNodeCache.get( envNode.value );\r\n\r\n\t\t\tif ( cacheEnvNode === undefined ) {\r\n\r\n\t\t\t\tconst texture = envNode.value;\r\n\t\t\t\tconst renderer = builder.renderer;\r\n\r\n\t\t\t\t// @TODO: Add dispose logic here\r\n\t\t\t\tconst cubeRTT = builder.getCubeRenderTarget( 512 ).fromEquirectangularTexture( renderer, texture );\r\n\r\n\t\t\t\tcacheEnvNode = cubeTexture( cubeRTT.texture );\r\n\r\n\t\t\t\tenvNodeCache.set( envNode.value, cacheEnvNode );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tenvNode\t= cacheEnvNode;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tconst intensity = reference( 'envMapIntensity', 'float', builder.material ); // @TODO: Add materialEnvIntensity in MaterialNode\r\n\r\n\t\tconst radiance = context( envNode, createRadianceContext( roughness, transformedNormalView ) ).mul( intensity );\r\n\t\tconst irradiance = context( envNode, createIrradianceContext( transformedNormalWorld ) ).mul( Math.PI ).mul( intensity );\r\n\r\n\t\tconst isolateRadiance = cache( radiance );\r\n\r\n\t\t//\r\n\r\n\t\tbuilder.context.radiance.addAssign( isolateRadiance );\r\n\r\n\t\tbuilder.context.iblIrradiance.addAssign( irradiance );\r\n\r\n\t\t//\r\n\r\n\t\tconst clearcoatRadiance = builder.context.lightingModel.clearcoatRadiance;\r\n\r\n\t\tif ( clearcoatRadiance ) {\r\n\r\n\t\t\tconst clearcoatRadianceContext = context( envNode, createRadianceContext( clearcoatRoughness, transformedClearcoatNormalView ) ).mul( intensity );\r\n\t\t\tconst isolateClearcoatRadiance = cache( clearcoatRadianceContext );\r\n\r\n\t\t\tclearcoatRadiance.addAssign( isolateClearcoatRadiance );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst createRadianceContext = ( roughnessNode, normalViewNode ) => {\r\n\r\n\tlet reflectVec = null;\r\n\tlet textureUVNode = null;\r\n\r\n\treturn {\r\n\t\tgetUV: ( textureNode ) => {\r\n\r\n\t\t\tlet node = null;\r\n\r\n\t\t\tif ( reflectVec === null ) {\r\n\r\n\t\t\t\treflectVec = positionViewDirection.negate().reflect( normalViewNode );\r\n\t\t\t\treflectVec = roughnessNode.mul( roughnessNode ).mix( reflectVec, normalViewNode ).normalize();\r\n\t\t\t\treflectVec = reflectVec.transformDirection( cameraViewMatrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( textureNode.isCubeTextureNode ) {\r\n\r\n\t\t\t\tnode = reflectVec;\r\n\r\n\t\t\t} else if ( textureNode.isTextureNode ) {\r\n\r\n\t\t\t\tif ( textureUVNode === null ) {\r\n\r\n\t\t\t\t\t// @TODO: Needed PMREM\r\n\r\n\t\t\t\t\ttextureUVNode = equirectUV( reflectVec );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode = textureUVNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn node;\r\n\r\n\t\t},\r\n\t\tgetTextureLevel: () => {\r\n\r\n\t\t\treturn roughnessNode;\r\n\r\n\t\t},\r\n\t\tgetTextureLevelAlgorithm: ( textureNode, levelNode ) => {\r\n\r\n\t\t\treturn specularMIPLevel( textureNode, levelNode );\r\n\r\n\t\t}\r\n\t};\r\n\r\n};\r\n\r\nconst createIrradianceContext = ( normalWorldNode ) => {\r\n\r\n\tlet textureUVNode = null;\r\n\r\n\treturn {\r\n\t\tgetUV: ( textureNode ) => {\r\n\r\n\t\t\tlet node = null;\r\n\r\n\t\t\tif ( textureNode.isCubeTextureNode ) {\r\n\r\n\t\t\t\tnode = normalWorldNode;\r\n\r\n\t\t\t} else if ( textureNode.isTextureNode ) {\r\n\r\n\t\t\t\tif ( textureUVNode === null ) {\r\n\r\n\t\t\t\t\t// @TODO: Needed PMREM\r\n\r\n\t\t\t\t\ttextureUVNode = equirectUV( normalWorldNode );\r\n\t\t\t\t\ttextureUVNode = vec2( textureUVNode.x, textureUVNode.y.oneMinus() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode = textureUVNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn node;\r\n\r\n\t\t},\r\n\t\tgetTextureLevel: ( textureNode ) => {\r\n\r\n\t\t\treturn maxMipLevel( textureNode );\r\n\r\n\t\t}\r\n\t};\r\n\r\n};\r\n\r\nexport default EnvironmentNode;\r\n\r\naddNodeClass( 'EnvironmentNode', EnvironmentNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { uniform } from '../core/UniformNode.js';\r\nimport { nodeImmutable, vec2 } from '../shadernode/ShaderNode.js';\r\n\r\nimport { Vector2, Vector4 } from 'three';\r\n\r\nlet resolution, viewportResult;\r\n\r\nclass ViewportNode extends Node {\r\n\r\n\tconstructor( scope ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scope = scope;\r\n\r\n\t\tthis.isViewportNode = true;\r\n\r\n\t}\r\n\r\n\tgetNodeType() {\r\n\r\n\t\treturn this.scope === ViewportNode.VIEWPORT ? 'vec4' : 'vec2';\r\n\r\n\t}\r\n\r\n\tgetUpdateType() {\r\n\r\n\t\tlet updateType = NodeUpdateType.NONE;\r\n\r\n\t\tif ( this.scope === ViewportNode.RESOLUTION || this.scope === ViewportNode.VIEWPORT ) {\r\n\r\n\t\t\tupdateType = NodeUpdateType.FRAME;\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateType = updateType;\r\n\r\n\t\treturn updateType;\r\n\r\n\t}\r\n\r\n\tupdate( { renderer } ) {\r\n\r\n\t\tif ( this.scope === ViewportNode.VIEWPORT ) {\r\n\r\n\t\t\trenderer.getViewport( viewportResult );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.getDrawingBufferSize( resolution );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetup( /*builder*/ ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tlet output = null;\r\n\r\n\t\tif ( scope === ViewportNode.RESOLUTION ) {\r\n\r\n\t\t\toutput = uniform( resolution || ( resolution = new Vector2() ) );\r\n\r\n\t\t} else if ( scope === ViewportNode.VIEWPORT ) {\r\n\r\n\t\t\toutput = uniform( viewportResult || ( viewportResult = new Vector4() ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\toutput = viewportCoordinate.div( viewportResolution );\r\n\r\n\t\t\tlet outX = output.x;\r\n\t\t\tlet outY = output.y;\r\n\r\n\t\t\tif ( /bottom/i.test( scope ) ) outY = outY.oneMinus();\r\n\t\t\tif ( /right/i.test( scope ) ) outX = outX.oneMinus();\r\n\r\n\t\t\toutput = vec2( outX, outY );\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tif ( this.scope === ViewportNode.COORDINATE ) {\r\n\r\n\t\t\tlet coord = builder.getFragCoord();\r\n\r\n\t\t\tif ( builder.isFlipY() ) {\r\n\r\n\t\t\t\t// follow webgpu standards\r\n\r\n\t\t\t\tconst resolution = builder.getNodeProperties( viewportResolution ).outputNode.build( builder );\r\n\r\n\t\t\t\tcoord = `${ builder.getType( 'vec2' ) }( ${ coord }.x, ${ resolution }.y - ${ coord }.y )`;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn coord;\r\n\r\n\t\t}\r\n\r\n\t\treturn super.generate( builder );\r\n\r\n\t}\r\n\r\n}\r\n\r\nViewportNode.COORDINATE = 'coordinate';\r\nViewportNode.RESOLUTION = 'resolution';\r\nViewportNode.VIEWPORT = 'viewport';\r\nViewportNode.TOP_LEFT = 'topLeft';\r\nViewportNode.BOTTOM_LEFT = 'bottomLeft';\r\nViewportNode.TOP_RIGHT = 'topRight';\r\nViewportNode.BOTTOM_RIGHT = 'bottomRight';\r\n\r\nexport default ViewportNode;\r\n\r\nexport const viewportCoordinate = nodeImmutable( ViewportNode, ViewportNode.COORDINATE );\r\nexport const viewportResolution = nodeImmutable( ViewportNode, ViewportNode.RESOLUTION );\r\nexport const viewport = nodeImmutable( ViewportNode, ViewportNode.VIEWPORT );\r\nexport const viewportTopLeft = nodeImmutable( ViewportNode, ViewportNode.TOP_LEFT );\r\nexport const viewportBottomLeft = nodeImmutable( ViewportNode, ViewportNode.BOTTOM_LEFT );\r\nexport const viewportTopRight = nodeImmutable( ViewportNode, ViewportNode.TOP_RIGHT );\r\nexport const viewportBottomRight = nodeImmutable( ViewportNode, ViewportNode.BOTTOM_RIGHT );\r\n\r\naddNodeClass( 'ViewportNode', ViewportNode );\r\n", "import TextureNode from '../accessors/TextureNode.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\nimport { viewportTopLeft } from './ViewportNode.js';\r\nimport { Vector2, FramebufferTexture, LinearMipmapLinearFilter } from 'three';\r\n\r\nconst _size = new Vector2();\r\n\r\nclass ViewportTextureNode extends TextureNode {\r\n\r\n\tconstructor( uvNode = viewportTopLeft, levelNode = null, framebufferTexture = null ) {\r\n\r\n\t\tif ( framebufferTexture === null ) {\r\n\r\n\t\t\tframebufferTexture = new FramebufferTexture();\r\n\t\t\tframebufferTexture.minFilter = LinearMipmapLinearFilter;\r\n\r\n\t\t}\r\n\r\n\t\tsuper( framebufferTexture, uvNode, levelNode );\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t\tthis.isOutputTextureNode = true;\r\n\r\n\t\tthis.updateBeforeType = NodeUpdateType.FRAME;\r\n\r\n\t}\r\n\r\n\tupdateBefore( frame ) {\r\n\r\n\t\tconst renderer = frame.renderer;\r\n\t\trenderer.getDrawingBufferSize( _size );\r\n\r\n\t\t//\r\n\r\n\t\tconst framebufferTexture = this.value;\r\n\r\n\t\tif ( framebufferTexture.image.width !== _size.width || framebufferTexture.image.height !== _size.height ) {\r\n\r\n\t\t\tframebufferTexture.image.width = _size.width;\r\n\t\t\tframebufferTexture.image.height = _size.height;\r\n\t\t\tframebufferTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tconst currentGenerateMipmaps = framebufferTexture.generateMipmaps;\r\n\t\tframebufferTexture.generateMipmaps = this.generateMipmaps;\r\n\r\n\t\trenderer.copyFramebufferToTexture( framebufferTexture );\r\n\r\n\t\tframebufferTexture.generateMipmaps = currentGenerateMipmaps;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.uvNode, this.levelNode, this.value );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ViewportTextureNode;\r\n\r\nexport const viewportTexture = nodeProxy( ViewportTextureNode );\r\nexport const viewportMipTexture = nodeProxy( ViewportTextureNode, null, null, { generateMipmaps: true } );\r\n\r\naddNodeElement( 'viewportTexture', viewportTexture );\r\naddNodeElement( 'viewportMipTexture', viewportMipTexture );\r\n\r\naddNodeClass( 'ViewportTextureNode', ViewportTextureNode );\r\n", "import ViewportTextureNode from './ViewportTextureNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\nimport { viewportTopLeft } from './ViewportNode.js';\r\nimport { DepthTexture } from 'three';\r\n\r\nlet sharedDepthbuffer = null;\r\n\r\nclass ViewportDepthTextureNode extends ViewportTextureNode {\r\n\r\n\tconstructor( uvNode = viewportTopLeft, levelNode = null ) {\r\n\r\n\t\tif ( sharedDepthbuffer === null ) {\r\n\r\n\t\t\tsharedDepthbuffer = new DepthTexture();\r\n\r\n\t\t}\r\n\r\n\t\tsuper( uvNode, levelNode, sharedDepthbuffer );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ViewportDepthTextureNode;\r\n\r\nexport const viewportDepthTexture = nodeProxy( ViewportDepthTextureNode );\r\n\r\naddNodeElement( 'viewportDepthTexture', viewportDepthTexture );\r\n\r\naddNodeClass( 'ViewportDepthTextureNode', ViewportDepthTextureNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { nodeImmutable, nodeProxy } from '../shadernode/ShaderNode.js';\r\nimport { cameraNear, cameraFar } from '../accessors/CameraNode.js';\r\nimport { positionView } from '../accessors/PositionNode.js';\r\nimport { viewportDepthTexture } from './ViewportDepthTextureNode.js';\r\n\r\nclass ViewportDepthNode extends Node {\r\n\r\n\tconstructor( scope, valueNode = null ) {\r\n\r\n\t\tsuper( 'float' );\r\n\r\n\t\tthis.scope = scope;\r\n\t\tthis.valueNode = valueNode;\r\n\r\n\t\tthis.isViewportDepthNode = true;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst { scope } = this;\r\n\r\n\t\tif ( scope === ViewportDepthNode.DEPTH_PIXEL ) {\r\n\r\n\t\t\treturn builder.getFragDepth();\r\n\r\n\t\t}\r\n\r\n\t\treturn super.generate( builder );\r\n\r\n\t}\r\n\r\n\tsetup( /*builder*/ ) {\r\n\r\n\t\tconst { scope } = this;\r\n\r\n\t\tlet node = null;\r\n\r\n\t\tif ( scope === ViewportDepthNode.DEPTH ) {\r\n\r\n\t\t\tnode = viewZToOrthographicDepth( positionView.z, cameraNear, cameraFar );\r\n\r\n\t\t} else if ( scope === ViewportDepthNode.DEPTH_TEXTURE ) {\r\n\r\n\t\t\tconst texture = this.valueNode || viewportDepthTexture();\r\n\r\n\t\t\tconst viewZ = perspectiveDepthToViewZ( texture, cameraNear, cameraFar );\r\n\t\t\tnode = viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\r\n\r\n\t\t} else if ( scope === ViewportDepthNode.DEPTH_PIXEL ) {\r\n\r\n\t\t\tif ( this.valueNode !== null ) {\r\n\r\n \t\t\t\tnode = depthPixelBase().assign( this.valueNode );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn node;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// NOTE: viewZ, the z-coordinate in camera space, is negative for points in front of the camera\r\n\r\n// -near maps to 0; -far maps to 1\r\nexport const viewZToOrthographicDepth = ( viewZ, near, far ) => viewZ.add( near ).div( near.sub( far ) );\r\n\r\n// maps orthographic depth in [ 0, 1 ] to viewZ\r\nexport const orthographicDepthToViewZ = ( depth, near, far ) => near.sub( far ).mul( depth ).sub( near );\r\n\r\n// NOTE: https://twitter.com/gonnavis/status/1377183786949959682\r\n\r\n// -near maps to 0; -far maps to 1\r\nexport const viewZToPerspectiveDepth = ( viewZ, near, far ) => near.add( viewZ ).mul( far ).div( near.sub( far ).mul( viewZ ) );\r\n\r\n// maps perspective depth in [ 0, 1 ] to viewZ\r\nexport const perspectiveDepthToViewZ = ( depth, near, far ) => near.mul( far ).div( far.sub( near ).mul( depth ).sub( far ) );\r\n\r\nViewportDepthNode.DEPTH = 'depth';\r\nViewportDepthNode.DEPTH_TEXTURE = 'depthTexture';\r\nViewportDepthNode.DEPTH_PIXEL = 'depthPixel';\r\n\r\nexport default ViewportDepthNode;\r\n\r\nconst depthPixelBase = nodeProxy( ViewportDepthNode, ViewportDepthNode.DEPTH_PIXEL );\r\n\r\nexport const depth = nodeImmutable( ViewportDepthNode, ViewportDepthNode.DEPTH );\r\nexport const depthTexture = nodeProxy( ViewportDepthNode, ViewportDepthNode.DEPTH_TEXTURE );\r\nexport const depthPixel = nodeImmutable( ViewportDepthNode, ViewportDepthNode.DEPTH_PIXEL );\r\n\r\ndepthPixel.assign = ( value ) => depthPixelBase( value );\r\n\r\naddNodeClass( 'ViewportDepthNode', ViewportDepthNode );\r\n", "\r\nimport Node from '../core/Node.js';\r\nimport { nodeObject } from '../shadernode/ShaderNode.js';\r\nimport { positionView } from './PositionNode.js';\r\nimport { diffuseColor, property } from '../core/PropertyNode.js';\r\nimport { tslFn } from '../shadernode/ShaderNode.js';\r\nimport { loop } from '../utils/LoopNode.js';\r\nimport { smoothstep  } from '../math/MathNode.js';\r\nimport { uniforms } from './UniformsNode.js';\r\n\r\nclass ClippingNode extends Node {\r\n\r\n\tconstructor( scope = ClippingNode.DEFAULT ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scope = scope;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tsuper.setup( builder );\r\n\r\n\t\tconst clippingContext = builder.clippingContext;\r\n\t\tconst { localClipIntersection, localClippingCount, globalClippingCount } = clippingContext;\r\n\r\n\t\tconst numClippingPlanes = globalClippingCount + localClippingCount;\r\n\t\tconst numUnionClippingPlanes = localClipIntersection ? numClippingPlanes - localClippingCount : numClippingPlanes;\r\n\r\n\t\tif ( this.scope === ClippingNode.ALPHA_TO_COVERAGE ) {\r\n\r\n\t\t\treturn this.setupAlphaToCoverage( clippingContext.planes, numClippingPlanes, numUnionClippingPlanes );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn this.setupDefault( clippingContext.planes, numClippingPlanes, numUnionClippingPlanes );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetupAlphaToCoverage( planes, numClippingPlanes, numUnionClippingPlanes ) {\r\n\r\n\t\treturn tslFn( () => {\r\n\r\n\t\t\tconst clippingPlanes = uniforms( planes );\r\n\r\n\t\t\tconst distanceToPlane = property( 'float', 'distanceToPlane' );\r\n\t\t\tconst distanceGradient = property( 'float', 'distanceToGradient' );\r\n\r\n\t\t\tconst clipOpacity = property( 'float', 'clipOpacity' );\r\n\r\n\t\t\tclipOpacity.assign( 1 );\r\n\r\n\t\t\tlet plane;\r\n\r\n\t\t\tloop( numUnionClippingPlanes, ( { i } ) => {\r\n\r\n\t\t\t\tplane = clippingPlanes.element( i );\r\n\r\n\t\t\t\tdistanceToPlane.assign( positionView.dot( plane.xyz ).negate().add( plane.w ) );\r\n\t\t\t\tdistanceGradient.assign( distanceToPlane.fwidth().div( 2.0 ) );\r\n\r\n\t\t\t\tclipOpacity.mulAssign( smoothstep( distanceGradient.negate(), distanceGradient, distanceToPlane ) );\r\n\r\n\t\t\t\tclipOpacity.equal( 0.0 ).discard();\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tif ( numUnionClippingPlanes < numClippingPlanes ) {\r\n\r\n\t\t\t\tconst unionClipOpacity = property( 'float', 'unionclipOpacity' );\r\n\r\n\t\t\t\tunionClipOpacity.assign( 1 );\r\n\r\n\t\t\t\tloop( { start: numUnionClippingPlanes, end: numClippingPlanes }, ( { i } ) => {\r\n\r\n\t\t\t\t\tplane = clippingPlanes.element( i );\r\n\r\n\t\t\t\t\tdistanceToPlane.assign( positionView.dot(  plane.xyz ).negate().add( plane.w ) );\r\n\t\t\t\t\tdistanceGradient.assign( distanceToPlane.fwidth().div( 2.0 ) );\r\n\r\n\t\t\t\t\tunionClipOpacity.mulAssign( smoothstep( distanceGradient.negate(), distanceGradient, distanceToPlane ).oneMinus() );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tclipOpacity.mulAssign( unionClipOpacity.oneMinus() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdiffuseColor.a.mulAssign( clipOpacity );\r\n\r\n\t\t\tdiffuseColor.a.equal( 0.0 ).discard();\r\n\r\n\t\t} )();\r\n\r\n\t}\r\n\r\n\tsetupDefault( planes, numClippingPlanes, numUnionClippingPlanes ) {\r\n\r\n\t\treturn tslFn( () => {\r\n\r\n\t\t\tconst clippingPlanes = uniforms( planes );\r\n\r\n\t\t\tlet plane;\r\n\r\n\t\t\tloop( numUnionClippingPlanes, ( { i } ) => {\r\n\r\n\t\t\t\tplane = clippingPlanes.element( i );\r\n\t\t\t\tpositionView.dot( plane.xyz ).greaterThan( plane.w ).discard();\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tif ( numUnionClippingPlanes < numClippingPlanes ) {\r\n\r\n\t\t\t\tconst clipped = property( 'bool', 'clipped' );\r\n\r\n\t\t\t\tclipped.assign( true );\r\n\r\n\t\t\t\tloop( { start: numUnionClippingPlanes, end: numClippingPlanes }, ( { i } ) => {\r\n\r\n\t\t\t\t\tplane = clippingPlanes.element( i );\r\n\t\t\t\t\tclipped.assign( positionView.dot( plane.xyz ).greaterThan( plane.w ).and( clipped ) );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tclipped.discard();\r\n\t\t\t}\r\n\r\n\t\t} )();\r\n\r\n\t}\r\n\r\n}\r\n\r\nClippingNode.ALPHA_TO_COVERAGE = 'alphaToCoverage';\r\nClippingNode.DEFAULT = 'default';\r\n\r\nexport default ClippingNode;\r\n\r\nexport const clipping = () => nodeObject( new ClippingNode() );\r\n\r\nexport const clippingAlpha = () => nodeObject( new ClippingNode( ClippingNode.ALPHA_TO_COVERAGE ) );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { nodeImmutable, float } from '../shadernode/ShaderNode.js';\r\n\r\nclass FrontFacingNode extends Node {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( 'bool' );\r\n\r\n\t\tthis.isFrontFacingNode = true;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\treturn builder.getFrontFacing();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default FrontFacingNode;\r\n\r\nexport const frontFacing = nodeImmutable( FrontFacingNode );\r\nexport const faceDirection = float( frontFacing ).mul( 2.0 ).sub( 1.0 );\r\n\r\naddNodeClass( 'FrontFacingNode', FrontFacingNode );\r\n", "import { Material, ShaderMaterial, NoColorSpace, LinearSRGBColorSpace } from 'three';\r\nimport { getNodeChildren, getCacheKey } from '../core/NodeUtils.js';\r\nimport { attribute } from '../core/AttributeNode.js';\r\nimport { output, diffuseColor } from '../core/PropertyNode.js';\r\nimport { materialAlphaTest, materialColor, materialOpacity, materialEmissive, materialNormal } from '../accessors/MaterialNode.js';\r\nimport { modelViewProjection } from '../accessors/ModelViewProjectionNode.js';\r\nimport { transformedNormalView } from '../accessors/NormalNode.js';\r\nimport { instance } from '../accessors/InstanceNode.js';\r\nimport { positionLocal, positionView } from '../accessors/PositionNode.js';\r\nimport { skinningReference } from '../accessors/SkinningNode.js';\r\nimport { morphReference } from '../accessors/MorphNode.js';\r\nimport { texture } from '../accessors/TextureNode.js';\r\nimport { cubeTexture } from '../accessors/CubeTextureNode.js';\r\nimport { lightsNode } from '../lighting/LightsNode.js';\r\nimport { mix } from '../math/MathNode.js';\r\nimport { float, vec3, vec4 } from '../shadernode/ShaderNode.js';\r\nimport AONode from '../lighting/AONode.js';\r\nimport { lightingContext } from '../lighting/LightingContextNode.js';\r\nimport EnvironmentNode from '../lighting/EnvironmentNode.js';\r\nimport { depthPixel } from '../display/ViewportDepthNode.js';\r\nimport { cameraLogDepth } from '../accessors/CameraNode.js';\r\nimport { clipping, clippingAlpha } from '../accessors/ClippingNode.js';\r\nimport { faceDirection } from '../display/FrontFacingNode.js';\r\n\r\nconst NodeMaterials = new Map();\r\n\r\nclass NodeMaterial extends ShaderMaterial {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isNodeMaterial = true;\r\n\r\n\t\tthis.type = this.constructor.type;\r\n\r\n\t\tthis.forceSinglePass = false;\r\n\r\n\t\tthis.fog = true;\r\n\t\tthis.lights = true;\r\n\t\tthis.normals = true;\r\n\r\n\t\tthis.colorSpaced = true;\r\n\r\n\t\tthis.lightsNode = null;\r\n\t\tthis.envNode = null;\r\n\r\n\t\tthis.colorNode = null;\r\n\t\tthis.normalNode = null;\r\n\t\tthis.opacityNode = null;\r\n\t\tthis.backdropNode = null;\r\n\t\tthis.backdropAlphaNode = null;\r\n\t\tthis.alphaTestNode = null;\r\n\r\n\t\tthis.positionNode = null;\r\n\r\n\t\tthis.depthNode = null;\r\n\t\tthis.shadowNode = null;\r\n\r\n\t\tthis.outputNode = null;\r\n\r\n\t\tthis.fragmentNode = null;\r\n\t\tthis.vertexNode = null;\r\n\r\n\t}\r\n\r\n\tcustomProgramCacheKey() {\r\n\r\n\t\treturn this.type + getCacheKey( this );\r\n\r\n\t}\r\n\r\n\tbuild( builder ) {\r\n\r\n\t\tthis.setup( builder );\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\t// < VERTEX STAGE >\r\n\r\n\t\tbuilder.addStack();\r\n\r\n\t\tbuilder.stack.outputNode = this.vertexNode || this.setupPosition( builder );\r\n\r\n\t\tbuilder.addFlow( 'vertex', builder.removeStack() );\r\n\r\n\t\t// < FRAGMENT STAGE >\r\n\r\n\t\tbuilder.addStack();\r\n\r\n\t\tlet resultNode;\r\n\r\n\t\tconst clippingNode = this.setupClipping( builder );\r\n\r\n\t\tif ( this.fragmentNode === null ) {\r\n\r\n\t\t\tif ( this.depthWrite === true ) this.setupDepth( builder );\r\n\r\n\t\t\tif ( this.normals === true ) this.setupNormal( builder );\r\n\r\n\t\t\tthis.setupDiffuseColor( builder );\r\n\t\t\tthis.setupVariants( builder );\r\n\r\n\t\t\tconst outgoingLightNode = this.setupLighting( builder );\r\n\r\n\t\t\tif ( clippingNode !== null ) builder.stack.add( clippingNode );\r\n\r\n\t\t\tresultNode = this.setupOutput( builder, vec4( outgoingLightNode, diffuseColor.a ) );\r\n\r\n\t\t\t// OUTPUT NODE\r\n\r\n\t\t\toutput.assign( resultNode );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( this.outputNode !== null ) resultNode = this.outputNode;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tresultNode = this.setupOutput( builder, this.fragmentNode );\r\n\r\n\t\t}\r\n\r\n\t\tbuilder.stack.outputNode = resultNode;\r\n\r\n\t\tbuilder.addFlow( 'fragment', builder.removeStack() );\r\n\r\n\t}\r\n\r\n\tsetupClipping( builder ) {\r\n\r\n\t\tconst { globalClippingCount, localClippingCount } = builder.clippingContext;\r\n\r\n\t\tlet result = null;\r\n\r\n\t\tif ( globalClippingCount || localClippingCount ) {\r\n\r\n\t\t\tif ( this.alphaToCoverage ) {\r\n\r\n\t\t\t\t// to be added to flow when the color/alpha value has been determined\r\n\t\t\t\tresult = clippingAlpha();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbuilder.stack.add( clipping() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tsetupDepth( builder ) {\r\n\r\n\t\tconst { renderer } = builder;\r\n\r\n\t\t// Depth\r\n\r\n\t\tlet depthNode = this.depthNode;\r\n\r\n\t\tif ( depthNode === null && renderer.logarithmicDepthBuffer === true ) {\r\n\r\n\t\t\tconst fragDepth = modelViewProjection().w.add( 1 );\r\n\r\n\t\t\tdepthNode = fragDepth.log2().mul( cameraLogDepth ).mul( 0.5 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( depthNode !== null ) {\r\n\r\n\t\t\tdepthPixel.assign( depthNode ).append();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetupPosition( builder ) {\r\n\r\n\t\tconst { object } = builder;\r\n\t\tconst geometry = object.geometry;\r\n\r\n\t\tbuilder.addStack();\r\n\r\n\t\t// Vertex\r\n\r\n\t\tif ( geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color ) {\r\n\r\n\t\t\tmorphReference( object ).append();\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.isSkinnedMesh === true ) {\r\n\r\n\t\t\tskinningReference( object ).append();\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( object.instanceMatrix && object.instanceMatrix.isInstancedBufferAttribute === true ) && builder.isAvailable( 'instance' ) === true ) {\r\n\r\n\t\t\tinstance( object ).append();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.positionNode !== null ) {\r\n\r\n\t\t\tpositionLocal.assign( this.positionNode );\r\n\r\n\t\t}\r\n\r\n\t\tconst mvp = modelViewProjection();\r\n\r\n\t\tbuilder.context.vertex = builder.removeStack();\r\n\t\tbuilder.context.mvp = mvp;\r\n\r\n\t\treturn mvp;\r\n\r\n\t}\r\n\r\n\tsetupDiffuseColor( { geometry } ) {\r\n\r\n\t\tlet colorNode = this.colorNode ? vec4( this.colorNode ) : materialColor;\r\n\r\n\t\t// VERTEX COLORS\r\n\r\n\t\tif ( this.vertexColors === true && geometry.hasAttribute( 'color' ) ) {\r\n\r\n\t\t\tcolorNode = vec4( colorNode.xyz.mul( attribute( 'color', 'vec3' ) ), colorNode.a );\r\n\r\n\t\t}\r\n\r\n\t\t// COLOR\r\n\r\n\t\tdiffuseColor.assign( colorNode );\r\n\r\n\t\t// OPACITY\r\n\r\n\t\tconst opacityNode = this.opacityNode ? float( this.opacityNode ) : materialOpacity;\r\n\t\tdiffuseColor.a.assign( diffuseColor.a.mul( opacityNode ) );\r\n\r\n\t\t// ALPHA TEST\r\n\r\n\t\tif ( this.alphaTestNode !== null || this.alphaTest > 0 ) {\r\n\r\n\t\t\tconst alphaTestNode = this.alphaTestNode !== null ? float( this.alphaTestNode ) : materialAlphaTest;\r\n\r\n\t\t\tdiffuseColor.a.lessThanEqual( alphaTestNode ).discard();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetupVariants( /*builder*/ ) {\r\n\r\n\t\t// Interface function.\r\n\r\n\t}\r\n\r\n\tsetupNormal() {\r\n\r\n\t\t// NORMAL VIEW\r\n\r\n\t\tif ( this.flatShading === true ) {\r\n\r\n\t\t\tconst normalNode = positionView.dFdx().cross( positionView.dFdy() ).normalize();\r\n\r\n\t\t\ttransformedNormalView.assign( normalNode.mul( faceDirection ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst normalNode = this.normalNode ? vec3( this.normalNode ) : materialNormal;\r\n\r\n\t\t\ttransformedNormalView.assign( normalNode.mul( faceDirection ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetEnvNode( builder ) {\r\n\r\n\t\tlet node = null;\r\n\r\n\t\tif ( this.envNode ) {\r\n\r\n\t\t\tnode = this.envNode;\r\n\r\n\t\t} else if ( this.envMap ) {\r\n\r\n\t\t\tnode = this.envMap.isCubeTexture ? cubeTexture( this.envMap ) : texture( this.envMap );\r\n\r\n\t\t} else if ( builder.environmentNode ) {\r\n\r\n\t\t\tnode = builder.environmentNode;\r\n\r\n\t\t}\r\n\r\n\t\treturn node;\r\n\r\n\t}\r\n\r\n\tsetupLights( builder ) {\r\n\r\n\t\tconst envNode = this.getEnvNode( builder );\r\n\r\n\t\t//\r\n\r\n\t\tconst materialLightsNode = [];\r\n\r\n\t\tif ( envNode ) {\r\n\r\n\t\t\tmaterialLightsNode.push( new EnvironmentNode( envNode ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( builder.material.aoMap ) {\r\n\r\n\t\t\tmaterialLightsNode.push( new AONode( texture( builder.material.aoMap ) ) );\r\n\r\n\t\t}\r\n\r\n\t\tlet lightsN = this.lightsNode || builder.lightsNode;\r\n\r\n\t\tif ( materialLightsNode.length > 0 ) {\r\n\r\n\t\t\tlightsN = lightsNode( [ ...lightsN.lightNodes, ...materialLightsNode ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn lightsN;\r\n\r\n\t}\r\n\r\n\tsetupLightingModel( /*builder*/ ) {\r\n\r\n\t\t// Interface function.\r\n\r\n\t}\r\n\r\n\tsetupLighting( builder ) {\r\n\r\n\t\tconst { material } = builder;\r\n\t\tconst { backdropNode, backdropAlphaNode, emissiveNode } = this;\r\n\r\n\t\t// OUTGOING LIGHT\r\n\r\n\t\tconst lights = this.lights === true || this.lightsNode !== null;\r\n\r\n\t\tconst lightsNode = lights ? this.setupLights( builder ) : null;\r\n\r\n\t\tlet outgoingLightNode = diffuseColor.rgb;\r\n\r\n\t\tif ( lightsNode && lightsNode.hasLight !== false ) {\r\n\r\n\t\t\tconst lightingModel = this.setupLightingModel( builder );\r\n\r\n\t\t\toutgoingLightNode = lightingContext( lightsNode, lightingModel, backdropNode, backdropAlphaNode );\r\n\r\n\t\t} else if ( backdropNode !== null ) {\r\n\r\n\t\t\toutgoingLightNode = vec3( backdropAlphaNode !== null ? mix( outgoingLightNode, backdropNode, backdropAlphaNode ) : backdropNode );\r\n\r\n\t\t}\r\n\r\n\t\t// EMISSIVE\r\n\r\n\t\tif ( ( emissiveNode && emissiveNode.isNode === true ) || ( material.emissive && material.emissive.isColor === true ) ) {\r\n\r\n\t\t\toutgoingLightNode = outgoingLightNode.add( vec3( emissiveNode ? emissiveNode : materialEmissive ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn outgoingLightNode;\r\n\r\n\t}\r\n\r\n\tsetupOutput( builder, outputNode ) {\r\n\r\n\t\tconst renderer = builder.renderer;\r\n\r\n\t\t// TONE MAPPING\r\n\r\n\t\tconst toneMappingNode = builder.toneMappingNode;\r\n\r\n\t\tif ( this.toneMapped === true && toneMappingNode ) {\r\n\r\n\t\t\toutputNode = vec4( toneMappingNode.context( { color: outputNode.rgb } ), outputNode.a );\r\n\r\n\t\t}\r\n\r\n\t\t// FOG\r\n\r\n\t\tif ( this.fog === true ) {\r\n\r\n\t\t\tconst fogNode = builder.fogNode;\r\n\r\n\t\t\tif ( fogNode ) outputNode = vec4( fogNode.mixAssign( outputNode.rgb ), outputNode.a );\r\n\r\n\t\t}\r\n\r\n\t\t// ENCODING\r\n\r\n\t\tif ( this.colorSpaced === true ) {\r\n\r\n\t\t\tconst outputColorSpace = renderer.currentColorSpace;\r\n\r\n\t\t\tif ( outputColorSpace !== LinearSRGBColorSpace && outputColorSpace !== NoColorSpace ) {\r\n\r\n\t\t\t\toutputNode = outputNode.linearToColorSpace( outputColorSpace );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode;\r\n\r\n\t}\r\n\r\n\tsetDefaultValues( material ) {\r\n\r\n\t\t// This approach is to reuse the native refreshUniforms*\r\n\t\t// and turn available the use of features like transmission and environment in core\r\n\r\n\t\tfor ( const property in material ) {\r\n\r\n\t\t\tconst value = material[ property ];\r\n\r\n\t\t\tif ( this[ property ] === undefined ) {\r\n\r\n\t\t\t\tthis[ property ] = value;\r\n\r\n\t\t\t\tif ( value && value.clone ) this[ property ] = value.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tObject.assign( this.defines, material.defines );\r\n\r\n\t\tconst descriptors = Object.getOwnPropertyDescriptors( material.constructor.prototype );\r\n\r\n\t\tfor ( const key in descriptors ) {\r\n\r\n\t\t\tif ( Object.getOwnPropertyDescriptor( this.constructor.prototype, key ) === undefined &&\r\n\t\t\t     descriptors[ key ].get !== undefined ) {\r\n\r\n\t\t\t\tObject.defineProperty( this.constructor.prototype, key, descriptors[ key ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\tif ( isRoot ) {\r\n\r\n\t\t\tmeta = {\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {},\r\n\t\t\t\tnodes: {}\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tconst data = Material.prototype.toJSON.call( this, meta );\r\n\t\tconst nodeChildren = getNodeChildren( this );\r\n\r\n\t\tdata.inputNodes = {};\r\n\r\n\t\tfor ( const { property, childNode } of nodeChildren ) {\r\n\r\n\t\t\tdata.inputNodes[ property ] = childNode.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\t// TODO: Copied from Object3D.toJSON\r\n\r\n\t\tfunction extractFromCache( cache ) {\r\n\r\n\t\t\tconst values = [];\r\n\r\n\t\t\tfor ( const key in cache ) {\r\n\r\n\t\t\t\tconst data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t\tif ( isRoot ) {\r\n\r\n\t\t\tconst textures = extractFromCache( meta.textures );\r\n\t\t\tconst images = extractFromCache( meta.images );\r\n\t\t\tconst nodes = extractFromCache( meta.nodes );\r\n\r\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\r\n\t\t\tif ( images.length > 0 ) data.images = images;\r\n\t\t\tif ( nodes.length > 0 ) data.nodes = nodes;\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.lightsNode = source.lightsNode;\r\n\t\tthis.envNode = source.envNode;\r\n\r\n\t\tthis.colorNode = source.colorNode;\r\n\t\tthis.normalNode = source.normalNode;\r\n\t\tthis.opacityNode = source.opacityNode;\r\n\t\tthis.backdropNode = source.backdropNode;\r\n\t\tthis.backdropAlphaNode = source.backdropAlphaNode;\r\n\t\tthis.alphaTestNode = source.alphaTestNode;\r\n\r\n\t\tthis.positionNode = source.positionNode;\r\n\r\n\t\tthis.depthNode = source.depthNode;\r\n\t\tthis.shadowNode = source.shadowNode;\r\n\r\n\t\tthis.outputNode = source.outputNode;\r\n\r\n\t\tthis.fragmentNode = source.fragmentNode;\r\n\t\tthis.vertexNode = source.vertexNode;\r\n\r\n\t\treturn super.copy( source );\r\n\r\n\t}\r\n\r\n\tstatic fromMaterial( material ) {\r\n\r\n\t\tif ( material.isNodeMaterial === true ) { // is already a node material\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t}\r\n\r\n\t\tconst type = material.type.replace( 'Material', 'NodeMaterial' );\r\n\r\n\t\tconst nodeMaterial = createNodeMaterialFromType( type );\r\n\r\n\t\tif ( nodeMaterial === undefined ) {\r\n\r\n\t\t\tthrow new Error( `NodeMaterial: Material \"${ material.type }\" is not compatible.` );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( const key in material ) {\r\n\r\n\t\t\tnodeMaterial[ key ] = material[ key ];\r\n\r\n\t\t}\r\n\r\n\t\treturn nodeMaterial;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeMaterial;\r\n\r\nexport function addNodeMaterial( type, nodeMaterial ) {\r\n\r\n\tif ( typeof nodeMaterial !== 'function' || ! type ) throw new Error( `Node material ${ type } is not a class` );\r\n\tif ( NodeMaterials.has( type ) ) {\r\n\r\n\t\tconsole.warn( `Redefinition of node material ${ type }` );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tNodeMaterials.set( type, nodeMaterial );\r\n\tnodeMaterial.type = type;\r\n\r\n}\r\n\r\nexport function createNodeMaterialFromType( type ) {\r\n\r\n\tconst Material = NodeMaterials.get( type );\r\n\r\n\tif ( Material !== undefined ) {\r\n\r\n\t\treturn new Material();\r\n\r\n\t}\r\n\r\n}\r\n\r\naddNodeMaterial( 'NodeMaterial', NodeMaterial );\r\n", "import { Color, Matrix3, Matrix4, Vector2, Vector3, Vector4 } from 'three';\r\n\r\nclass Uniform {\r\n\r\n\tconstructor( name, value = null ) {\r\n\r\n\t\tthis.name = name;\r\n\t\tthis.value = value;\r\n\r\n\t\tthis.boundary = 0; // used to build the uniform buffer according to the STD140 layout\r\n\t\tthis.itemSize = 0;\r\n\r\n\t\tthis.offset = 0; // this property is set by WebGPUUniformsGroup and marks the start position in the uniform buffer\r\n\r\n\t}\r\n\r\n\tsetValue( value ) {\r\n\r\n\t\tthis.value = value;\r\n\r\n\t}\r\n\r\n\tgetValue() {\r\n\r\n\t\treturn this.value;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass FloatUniform extends Uniform {\r\n\r\n\tconstructor( name, value = 0 ) {\r\n\r\n\t\tsuper( name, value );\r\n\r\n\t\tthis.isFloatUniform = true;\r\n\r\n\t\tthis.boundary = 4;\r\n\t\tthis.itemSize = 1;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Vector2Uniform extends Uniform {\r\n\r\n\tconstructor( name, value = new Vector2() ) {\r\n\r\n\t\tsuper( name, value );\r\n\r\n\t\tthis.isVector2Uniform = true;\r\n\r\n\t\tthis.boundary = 8;\r\n\t\tthis.itemSize = 2;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Vector3Uniform extends Uniform {\r\n\r\n\tconstructor( name, value = new Vector3() ) {\r\n\r\n\t\tsuper( name, value );\r\n\r\n\t\tthis.isVector3Uniform = true;\r\n\r\n\t\tthis.boundary = 16;\r\n\t\tthis.itemSize = 3;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Vector4Uniform extends Uniform {\r\n\r\n\tconstructor( name, value = new Vector4() ) {\r\n\r\n\t\tsuper( name, value );\r\n\r\n\t\tthis.isVector4Uniform = true;\r\n\r\n\t\tthis.boundary = 16;\r\n\t\tthis.itemSize = 4;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ColorUniform extends Uniform {\r\n\r\n\tconstructor( name, value = new Color() ) {\r\n\r\n\t\tsuper( name, value );\r\n\r\n\t\tthis.isColorUniform = true;\r\n\r\n\t\tthis.boundary = 16;\r\n\t\tthis.itemSize = 3;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Matrix3Uniform extends Uniform {\r\n\r\n\tconstructor( name, value = new Matrix3() ) {\r\n\r\n\t\tsuper( name, value );\r\n\r\n\t\tthis.isMatrix3Uniform = true;\r\n\r\n\t\tthis.boundary = 48;\r\n\t\tthis.itemSize = 12;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Matrix4Uniform extends Uniform {\r\n\r\n\tconstructor( name, value = new Matrix4() ) {\r\n\r\n\t\tsuper( name, value );\r\n\r\n\t\tthis.isMatrix4Uniform = true;\r\n\r\n\t\tthis.boundary = 64;\r\n\t\tthis.itemSize = 16;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tFloatUniform,\r\n\tVector2Uniform, Vector3Uniform, Vector4Uniform, ColorUniform,\r\n\tMatrix3Uniform, Matrix4Uniform\r\n};\r\n", "import {\r\n\tFloatUniform, Vector2Uniform, Vector3Uniform, Vector4Uniform,\r\n\tColorUniform, Matrix3Uniform, Matrix4Uniform\r\n} from '../Uniform.js';\r\n\r\nclass FloatNodeUniform extends FloatUniform {\r\n\r\n\tconstructor( nodeUniform ) {\r\n\r\n\t\tsuper( nodeUniform.name, nodeUniform.value );\r\n\r\n\t\tthis.nodeUniform = nodeUniform;\r\n\r\n\t}\r\n\r\n\tgetValue() {\r\n\r\n\t\treturn this.nodeUniform.value;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Vector2NodeUniform extends Vector2Uniform {\r\n\r\n\tconstructor( nodeUniform ) {\r\n\r\n\t\tsuper( nodeUniform.name, nodeUniform.value );\r\n\r\n\t\tthis.nodeUniform = nodeUniform;\r\n\r\n\t}\r\n\r\n\tgetValue() {\r\n\r\n\t\treturn this.nodeUniform.value;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Vector3NodeUniform extends Vector3Uniform {\r\n\r\n\tconstructor( nodeUniform ) {\r\n\r\n\t\tsuper( nodeUniform.name, nodeUniform.value );\r\n\r\n\t\tthis.nodeUniform = nodeUniform;\r\n\r\n\t}\r\n\r\n\tgetValue() {\r\n\r\n\t\treturn this.nodeUniform.value;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Vector4NodeUniform extends Vector4Uniform {\r\n\r\n\tconstructor( nodeUniform ) {\r\n\r\n\t\tsuper( nodeUniform.name, nodeUniform.value );\r\n\r\n\t\tthis.nodeUniform = nodeUniform;\r\n\r\n\t}\r\n\r\n\tgetValue() {\r\n\r\n\t\treturn this.nodeUniform.value;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ColorNodeUniform extends ColorUniform {\r\n\r\n\tconstructor( nodeUniform ) {\r\n\r\n\t\tsuper( nodeUniform.name, nodeUniform.value );\r\n\r\n\t\tthis.nodeUniform = nodeUniform;\r\n\r\n\t}\r\n\r\n\tgetValue() {\r\n\r\n\t\treturn this.nodeUniform.value;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Matrix3NodeUniform extends Matrix3Uniform {\r\n\r\n\tconstructor( nodeUniform ) {\r\n\r\n\t\tsuper( nodeUniform.name, nodeUniform.value );\r\n\r\n\t\tthis.nodeUniform = nodeUniform;\r\n\r\n\t}\r\n\r\n\tgetValue() {\r\n\r\n\t\treturn this.nodeUniform.value;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Matrix4NodeUniform extends Matrix4Uniform {\r\n\r\n\tconstructor( nodeUniform ) {\r\n\r\n\t\tsuper( nodeUniform.name, nodeUniform.value );\r\n\r\n\t\tthis.nodeUniform = nodeUniform;\r\n\r\n\t}\r\n\r\n\tgetValue() {\r\n\r\n\t\treturn this.nodeUniform.value;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tFloatNodeUniform, Vector2NodeUniform, Vector3NodeUniform, Vector4NodeUniform,\r\n\tColorNodeUniform, Matrix3NodeUniform, Matrix4NodeUniform\r\n};\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { property } from '../core/PropertyNode.js';\r\nimport { context as contextNode } from '../core/ContextNode.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass CondNode extends Node {\r\n\r\n\tconstructor( condNode, ifNode, elseNode = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.condNode = condNode;\r\n\r\n\t\tthis.ifNode = ifNode;\r\n\t\tthis.elseNode = elseNode;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst ifType = this.ifNode.getNodeType( builder );\r\n\r\n\t\tif ( this.elseNode !== null ) {\r\n\r\n\t\t\tconst elseType = this.elseNode.getNodeType( builder );\r\n\r\n\t\t\tif ( builder.getTypeLength( elseType ) > builder.getTypeLength( ifType ) ) {\r\n\r\n\t\t\t\treturn elseType;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn ifType;\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst type = this.getNodeType( builder );\r\n\t\tconst context = { tempWrite: false };\r\n\r\n\t\tconst nodeData = builder.getDataFromNode( this );\r\n\r\n\t\tif ( nodeData.nodeProperty !== undefined ) {\r\n\r\n\t\t\treturn nodeData.nodeProperty;\r\n\r\n\t\t}\r\n\r\n\t\tconst { ifNode, elseNode } = this;\r\n\r\n\t\tconst needsOutput = output !== 'void';\r\n\t\tconst nodeProperty = needsOutput ? property( type ).build( builder ) : '';\r\n\r\n\t\tnodeData.nodeProperty = nodeProperty;\r\n\r\n\t\tconst nodeSnippet = contextNode( this.condNode/*, context*/ ).build( builder, 'bool' );\r\n\r\n\t\tbuilder.addFlowCode( `\\n${ builder.tab }if ( ${ nodeSnippet } ) {\\n\\n` ).addFlowTab();\r\n\r\n\t\tlet ifSnippet = contextNode( ifNode, context ).build( builder, type );\r\n\r\n\t\tif ( ifSnippet ) {\r\n\r\n\t\t\tif ( needsOutput ) {\r\n\r\n\t\t\t\tifSnippet = nodeProperty + ' = ' + ifSnippet + ';';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tifSnippet = 'return ' + ifSnippet + ';';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tbuilder.removeFlowTab().addFlowCode( builder.tab + '\\t' + ifSnippet + '\\n\\n' + builder.tab + '}' );\r\n\r\n\t\tif ( elseNode !== null ) {\r\n\r\n\t\t\tbuilder.addFlowCode( ' else {\\n\\n' ).addFlowTab();\r\n\r\n\t\t\tlet elseSnippet = contextNode( elseNode, context ).build( builder, type );\r\n\r\n\t\t\tif ( elseSnippet ) {\r\n\r\n\t\t\t\tif ( needsOutput ) {\r\n\r\n\t\t\t\t\telseSnippet = nodeProperty + ' = ' + elseSnippet + ';';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\telseSnippet = 'return ' + elseSnippet + ';';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbuilder.removeFlowTab().addFlowCode( builder.tab + '\\t' + elseSnippet + '\\n\\n' + builder.tab + '}\\n\\n' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tbuilder.addFlowCode( '\\n\\n' );\r\n\r\n\t\t}\r\n\r\n\t\treturn builder.format( nodeProperty, type, output );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default CondNode;\r\n\r\nexport const cond = nodeProxy( CondNode );\r\n\r\naddNodeElement( 'cond', cond );\r\n\r\naddNodeClass( 'CondNode', CondNode );\r\n", "import Node, { addNodeClass } from './Node.js';\r\nimport { cond } from '../math/CondNode.js';\r\nimport { ShaderNode, nodeProxy, getCurrentStack, setCurrentStack } from '../shadernode/ShaderNode.js';\r\n\r\nclass StackNode extends Node {\r\n\r\n\tconstructor( parent = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.nodes = [];\r\n\t\tthis.outputNode = null;\r\n\r\n\t\tthis.parent = parent;\r\n\r\n\t\tthis._currentCond = null;\r\n\r\n\t\tthis.isStackNode = true;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.outputNode ? this.outputNode.getNodeType( builder ) : 'void';\r\n\r\n\t}\r\n\r\n\tadd( node ) {\r\n\r\n\t\tthis.nodes.push( node );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tif( boolNode, method ) {\r\n\r\n\t\tconst methodNode = new ShaderNode( method );\r\n\t\tthis._currentCond = cond( boolNode, methodNode );\r\n\r\n\t\treturn this.add( this._currentCond );\r\n\r\n\t}\r\n\r\n\telseif( boolNode, method ) {\r\n\r\n\t\tconst methodNode = new ShaderNode( method );\r\n\t\tconst ifNode = cond( boolNode, methodNode );\r\n\r\n\t\tthis._currentCond.elseNode = ifNode;\r\n\t\tthis._currentCond = ifNode;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\telse( method ) {\r\n\r\n\t\tthis._currentCond.elseNode = new ShaderNode( method );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tbuild( builder, ...params ) {\r\n\r\n\t\tconst previousStack = getCurrentStack();\r\n\r\n\t\tsetCurrentStack( this );\r\n\r\n\t\tfor ( const node of this.nodes ) {\r\n\r\n\t\t\tnode.build( builder, 'void' );\r\n\r\n\t\t}\r\n\r\n\t\tsetCurrentStack( previousStack );\r\n\r\n\t\treturn this.outputNode ? this.outputNode.build( builder, ...params ) : super.build( builder, ...params );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default StackNode;\r\n\r\nexport const stack = nodeProxy( StackNode );\r\n\r\naddNodeClass( 'StackNode', StackNode );\r\n", "import { WebGLCubeRenderTarget, Scene, CubeCamera, BoxGeometry, Mesh, BackSide, NoBlending, LinearFilter, LinearMipmapLinearFilter } from 'three';\r\nimport { equirectUV } from '../../nodes/utils/EquirectUVNode.js';\r\nimport { texture as TSL_Texture } from '../../nodes/accessors/TextureNode.js';\r\nimport { positionWorldDirection } from '../../nodes/accessors/PositionNode.js';\r\nimport { createNodeMaterialFromType } from '../../nodes/materials/NodeMaterial.js';\r\n\r\n// @TODO: Consider rename WebGLCubeRenderTarget to just CubeRenderTarget\r\n\r\nclass CubeRenderTarget extends WebGLCubeRenderTarget {\r\n\r\n\tconstructor( size = 1, options = {} ) {\r\n\r\n\t\tsuper( size, options );\r\n\r\n\t\tthis.isCubeRenderTarget = true;\r\n\r\n\t}\r\n\r\n\tfromEquirectangularTexture( renderer, texture ) {\r\n\r\n\t\tconst currentMinFilter = texture.minFilter;\r\n\t\tconst currentGenerateMipmaps = texture.generateMipmaps;\r\n\r\n\t\ttexture.generateMipmaps = true;\r\n\r\n\t\tthis.texture.type = texture.type;\r\n\t\tthis.texture.colorSpace = texture.colorSpace;\r\n\r\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\r\n\t\tthis.texture.minFilter = texture.minFilter;\r\n\t\tthis.texture.magFilter = texture.magFilter;\r\n\r\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\r\n\r\n\t\tconst uvNode = equirectUV( positionWorldDirection );\r\n\r\n\t\tconst material = createNodeMaterialFromType( 'MeshBasicNodeMaterial' );\r\n\t\tmaterial.colorNode = TSL_Texture( texture, uvNode, 0 );\r\n\t\tmaterial.side = BackSide;\r\n\t\tmaterial.blending = NoBlending;\r\n\r\n\t\tconst mesh = new Mesh( geometry, material );\r\n\r\n\t\tconst scene = new Scene();\r\n\t\tscene.add( mesh );\r\n\r\n\t\t// Avoid blurred poles\r\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\r\n\r\n\t\tconst camera = new CubeCamera( 1, 10, this );\r\n\t\tcamera.update( renderer, scene );\r\n\r\n\t\ttexture.minFilter = currentMinFilter;\r\n\t\ttexture.currentGenerateMipmaps = currentGenerateMipmaps;\r\n\r\n\t\tmesh.geometry.dispose();\r\n\t\tmesh.material.dispose();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default CubeRenderTarget;\r\n", "export default class ChainMap {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.weakMap = new WeakMap();\r\n\r\n\t}\r\n\r\n\tget( keys ) {\r\n\r\n\t\tif ( Array.isArray( keys ) ) {\r\n\r\n\t\t\tlet map = this.weakMap;\r\n\r\n\t\t\tfor ( let i = 0; i < keys.length; i ++ ) {\r\n\r\n\t\t\t\tmap = map.get( keys[ i ] );\r\n\r\n\t\t\t\tif ( map === undefined ) return undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn map.get( keys[ keys.length - 1 ] );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn super.get( keys );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tset( keys, value ) {\r\n\r\n\t\tif ( Array.isArray( keys ) ) {\r\n\r\n\t\t\tlet map = this.weakMap;\r\n\r\n\t\t\tfor ( let i = 0; i < keys.length; i ++ ) {\r\n\r\n\t\t\t\tconst key = keys[ i ];\r\n\r\n\t\t\t\tif ( map.has( key ) === false ) map.set( key, new WeakMap() );\r\n\r\n\t\t\t\tmap = map.get( key );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn map.set( keys[ keys.length - 1 ], value );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn super.set( keys, value );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdelete( keys ) {\r\n\r\n\t\tif ( Array.isArray( keys ) ) {\r\n\r\n\t\t\tlet map = this.weakMap;\r\n\r\n\t\t\tfor ( let i = 0; i < keys.length; i ++ ) {\r\n\r\n\t\t\t\tmap = map.get( keys[ i ] );\r\n\r\n\t\t\t\tif ( map === undefined ) return false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn map.delete( keys[ keys.length - 1 ] );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn super.delete( keys );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.weakMap.clear();\r\n\r\n\t}\r\n\r\n}\r\n", "import NodeUniform from './NodeUniform.js';\r\nimport NodeAttribute from './NodeAttribute.js';\r\nimport NodeVarying from './NodeVarying.js';\r\nimport NodeVar from './NodeVar.js';\r\nimport NodeCode from './NodeCode.js';\r\nimport NodeKeywords from './NodeKeywords.js';\r\nimport NodeCache from './NodeCache.js';\r\nimport ParameterNode from './ParameterNode.js';\r\nimport FunctionNode from '../code/FunctionNode.js';\r\nimport { createNodeMaterialFromType, default as NodeMaterial } from '../materials/NodeMaterial.js';\r\nimport { NodeUpdateType, defaultBuildStages, shaderStages } from './constants.js';\r\n\r\nimport {\r\n\tFloatNodeUniform, Vector2NodeUniform, Vector3NodeUniform, Vector4NodeUniform,\r\n\tColorNodeUniform, Matrix3NodeUniform, Matrix4NodeUniform\r\n} from '../../renderers/common/nodes/NodeUniform.js';\r\n\r\nimport { REVISION, RenderTarget, NoColorSpace, Color, Vector2, Vector3, Vector4, Float16BufferAttribute } from 'three';\r\n\r\nimport { stack } from './StackNode.js';\r\nimport { getCurrentStack, setCurrentStack } from '../shadernode/ShaderNode.js';\r\n\r\nimport CubeRenderTarget from '../../renderers/common/CubeRenderTarget.js';\r\nimport ChainMap from '../../renderers/common/ChainMap.js';\r\n\r\nconst uniformsGroupCache = new ChainMap();\r\n\r\nconst typeFromLength = new Map( [\r\n\t[ 2, 'vec2' ],\r\n\t[ 3, 'vec3' ],\r\n\t[ 4, 'vec4' ],\r\n\t[ 9, 'mat3' ],\r\n\t[ 16, 'mat4' ]\r\n] );\r\n\r\nconst typeFromArray = new Map( [\r\n\t[ Int8Array, 'int' ],\r\n\t[ Int16Array, 'int' ],\r\n\t[ Int32Array, 'int' ],\r\n\t[ Uint8Array, 'uint' ],\r\n\t[ Uint16Array, 'uint' ],\r\n\t[ Uint32Array, 'uint' ],\r\n\t[ Float32Array, 'float' ]\r\n] );\r\n\r\nconst toFloat = ( value ) => {\r\n\r\n\tvalue = Number( value );\r\n\r\n\treturn value + ( value % 1 ? '' : '.0' );\r\n\r\n};\r\n\r\nclass NodeBuilder {\r\n\r\n\tconstructor( object, renderer, parser, scene = null, material = null ) {\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.material = material || ( object && object.material ) || null;\r\n\t\tthis.geometry = ( object && object.geometry ) || null;\r\n\t\tthis.renderer = renderer;\r\n\t\tthis.parser = parser;\r\n\t\tthis.scene = scene;\r\n\r\n\t\tthis.nodes = [];\r\n\t\tthis.updateNodes = [];\r\n\t\tthis.updateBeforeNodes = [];\r\n\t\tthis.hashNodes = {};\r\n\r\n\t\tthis.lightsNode = null;\r\n\t\tthis.environmentNode = null;\r\n\t\tthis.fogNode = null;\r\n\t\tthis.toneMappingNode = null;\r\n\r\n\t\tthis.clippingContext = null;\r\n\r\n\t\tthis.vertexShader = null;\r\n\t\tthis.fragmentShader = null;\r\n\t\tthis.computeShader = null;\r\n\r\n\t\tthis.flowNodes = { vertex: [], fragment: [], compute: [] };\r\n\t\tthis.flowCode = { vertex: '', fragment: '', compute: [] };\r\n\t\tthis.uniforms = { vertex: [], fragment: [], compute: [], index: 0 };\r\n\t\tthis.structs = { vertex: [], fragment: [], compute: [], index: 0 };\r\n\t\tthis.bindings = { vertex: [], fragment: [], compute: [] };\r\n\t\tthis.bindingsOffset = { vertex: 0, fragment: 0, compute: 0 };\r\n\t\tthis.bindingsArray = null;\r\n\t\tthis.attributes = [];\r\n\t\tthis.bufferAttributes = [];\r\n\t\tthis.varyings = [];\r\n\t\tthis.codes = {};\r\n\t\tthis.vars = {};\r\n\t\tthis.flow = { code: '' };\r\n\t\tthis.chaining = [];\r\n\t\tthis.stack = stack();\r\n\t\tthis.stacks = [];\r\n\t\tthis.tab = '\\t';\r\n\r\n\t\tthis.currentFunctionNode = null;\r\n\r\n\t\tthis.context = {\r\n\t\t\tkeywords: new NodeKeywords(),\r\n\t\t\tmaterial: this.material\r\n\t\t};\r\n\r\n\t\tthis.cache = new NodeCache();\r\n\t\tthis.globalCache = this.cache;\r\n\r\n\t\tthis.flowsData = new WeakMap();\r\n\r\n\t\tthis.shaderStage = null;\r\n\t\tthis.buildStage = null;\r\n\r\n\t}\r\n\r\n\tgetRenderTarget( width, height, options ) {\r\n\r\n\t\treturn new RenderTarget( width, height, options );\r\n\r\n\t}\r\n\r\n\tgetCubeRenderTarget( size, options ) {\r\n\r\n\t\treturn new CubeRenderTarget( size, options );\r\n\r\n\t}\r\n\r\n\tincludes( node ) {\r\n\r\n\t\treturn this.nodes.includes( node );\r\n\r\n\t}\r\n\r\n\t_getSharedBindings( bindings ) {\r\n\r\n\t\tconst shared = [];\r\n\r\n\t\tfor ( const binding of bindings ) {\r\n\r\n\t\t\tif ( binding.shared === true ) {\r\n\r\n\t\t\t\t// nodes is the chainmap key\r\n\t\t\t\tconst nodes = binding.getNodes();\r\n\r\n\t\t\t\tlet sharedBinding = uniformsGroupCache.get( nodes );\r\n\r\n\t\t\t\tif ( sharedBinding === undefined ) {\r\n\r\n\t\t\t\t\tuniformsGroupCache.set( nodes, binding );\r\n\r\n\t\t\t\t\tsharedBinding = binding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tshared.push( sharedBinding );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tshared.push( binding );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn shared;\r\n\r\n\t}\r\n\r\n\tgetBindings() {\r\n\r\n\t\tlet bindingsArray = this.bindingsArray;\r\n\r\n\t\tif ( bindingsArray === null ) {\r\n\r\n\t\t\tconst bindings = this.bindings;\r\n\r\n\t\t\tthis.bindingsArray = bindingsArray = this._getSharedBindings( ( this.material !== null ) ? [ ...bindings.vertex, ...bindings.fragment ] : bindings.compute );\r\n\r\n\t\t}\r\n\r\n\t\treturn bindingsArray;\r\n\r\n\t}\r\n\r\n\tsetHashNode( node, hash ) {\r\n\r\n\t\tthis.hashNodes[ hash ] = node;\r\n\r\n\t}\r\n\r\n\taddNode( node ) {\r\n\r\n\t\tif ( this.nodes.includes( node ) === false ) {\r\n\r\n\t\t\tthis.nodes.push( node );\r\n\r\n\t\t\tthis.setHashNode( node, node.getHash( this ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbuildUpdateNodes() {\r\n\r\n\t\tfor ( const node of this.nodes ) {\r\n\r\n\t\t\tconst updateType = node.getUpdateType();\r\n\t\t\tconst updateBeforeType = node.getUpdateBeforeType();\r\n\r\n\t\t\tif ( updateType !== NodeUpdateType.NONE ) {\r\n\r\n\t\t\t\tthis.updateNodes.push( node.getSelf() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( updateBeforeType !== NodeUpdateType.NONE ) {\r\n\r\n\t\t\t\tthis.updateBeforeNodes.push( node );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tget currentNode() {\r\n\r\n\t\treturn this.chaining[ this.chaining.length - 1 ];\r\n\r\n\t}\r\n\r\n\taddChain( node ) {\r\n\r\n\t\t/*\r\n\t\tif ( this.chaining.indexOf( node ) !== - 1 ) {\r\n\r\n\t\t\tconsole.warn( 'Recursive node: ', node );\r\n\r\n\t\t}\r\n\t\t*/\r\n\r\n\t\tthis.chaining.push( node );\r\n\r\n\t}\r\n\r\n\tremoveChain( node ) {\r\n\r\n\t\tconst lastChain = this.chaining.pop();\r\n\r\n\t\tif ( lastChain !== node ) {\r\n\r\n\t\t\tthrow new Error( 'NodeBuilder: Invalid node chaining!' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetMethod( method ) {\r\n\r\n\t\treturn method;\r\n\r\n\t}\r\n\r\n\tgetNodeFromHash( hash ) {\r\n\r\n\t\treturn this.hashNodes[ hash ];\r\n\r\n\t}\r\n\r\n\taddFlow( shaderStage, node ) {\r\n\r\n\t\tthis.flowNodes[ shaderStage ].push( node );\r\n\r\n\t\treturn node;\r\n\r\n\t}\r\n\r\n\tsetContext( context ) {\r\n\r\n\t\tthis.context = context;\r\n\r\n\t}\r\n\r\n\tgetContext() {\r\n\r\n\t\treturn this.context;\r\n\r\n\t}\r\n\r\n\tsetCache( cache ) {\r\n\r\n\t\tthis.cache = cache;\r\n\r\n\t}\r\n\r\n\tgetCache() {\r\n\r\n\t\treturn this.cache;\r\n\r\n\t}\r\n\r\n\tisAvailable( /*name*/ ) {\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tgetVertexIndex() {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tgetInstanceIndex() {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tgetFrontFacing() {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tgetFragCoord() {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tisFlipY() {\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tgenerateTexture( /* texture, textureProperty, uvSnippet */ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tgenerateTextureLod( /* texture, textureProperty, uvSnippet, levelSnippet */ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tgenerateConst( type, value = null ) {\r\n\r\n\t\tif ( value === null ) {\r\n\r\n\t\t\tif ( type === 'float' || type === 'int' || type === 'uint' ) value = 0;\r\n\t\t\telse if ( type === 'bool' ) value = false;\r\n\t\t\telse if ( type === 'color' ) value = new Color();\r\n\t\t\telse if ( type === 'vec2' ) value = new Vector2();\r\n\t\t\telse if ( type === 'vec3' ) value = new Vector3();\r\n\t\t\telse if ( type === 'vec4' ) value = new Vector4();\r\n\r\n\t\t}\r\n\r\n\t\tif ( type === 'float' ) return toFloat( value );\r\n\t\tif ( type === 'int' ) return `${ Math.round( value ) }`;\r\n\t\tif ( type === 'uint' ) return value >= 0 ? `${ Math.round( value ) }u` : '0u';\r\n\t\tif ( type === 'bool' ) return value ? 'true' : 'false';\r\n\t\tif ( type === 'color' ) return `${ this.getType( 'vec3' ) }( ${ toFloat( value.r ) }, ${ toFloat( value.g ) }, ${ toFloat( value.b ) } )`;\r\n\r\n\t\tconst typeLength = this.getTypeLength( type );\r\n\r\n\t\tconst componentType = this.getComponentType( type );\r\n\r\n\t\tconst generateConst = value => this.generateConst( componentType, value );\r\n\r\n\t\tif ( typeLength === 2 ) {\r\n\r\n\t\t\treturn `${ this.getType( type ) }( ${ generateConst( value.x ) }, ${ generateConst( value.y ) } )`;\r\n\r\n\t\t} else if ( typeLength === 3 ) {\r\n\r\n\t\t\treturn `${ this.getType( type ) }( ${ generateConst( value.x ) }, ${ generateConst( value.y ) }, ${ generateConst( value.z ) } )`;\r\n\r\n\t\t} else if ( typeLength === 4 ) {\r\n\r\n\t\t\treturn `${ this.getType( type ) }( ${ generateConst( value.x ) }, ${ generateConst( value.y ) }, ${ generateConst( value.z ) }, ${ generateConst( value.w ) } )`;\r\n\r\n\t\t} else if ( typeLength > 4 && value && ( value.isMatrix3 || value.isMatrix4 ) ) {\r\n\r\n\t\t\treturn `${ this.getType( type ) }( ${ value.elements.map( generateConst ).join( ', ' ) } )`;\r\n\r\n\t\t} else if ( typeLength > 4 ) {\r\n\r\n\t\t\treturn `${ this.getType( type ) }()`;\r\n\r\n\t\t}\r\n\r\n\t\tthrow new Error( `NodeBuilder: Type '${type}' not found in generate constant attempt.` );\r\n\r\n\t}\r\n\r\n\tgetType( type ) {\r\n\r\n\t\tif ( type === 'color' ) return 'vec3';\r\n\r\n\t\treturn type;\r\n\r\n\t}\r\n\r\n\tgenerateMethod( method ) {\r\n\r\n\t\treturn method;\r\n\r\n\t}\r\n\r\n\thasGeometryAttribute( name ) {\r\n\r\n\t\treturn this.geometry && this.geometry.getAttribute( name ) !== undefined;\r\n\r\n\t}\r\n\r\n\tgetAttribute( name, type ) {\r\n\r\n\t\tconst attributes = this.attributes;\r\n\r\n\t\t// find attribute\r\n\r\n\t\tfor ( const attribute of attributes ) {\r\n\r\n\t\t\tif ( attribute.name === name ) {\r\n\r\n\t\t\t\treturn attribute;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// create a new if no exist\r\n\r\n\t\tconst attribute = new NodeAttribute( name, type );\r\n\r\n\t\tattributes.push( attribute );\r\n\r\n\t\treturn attribute;\r\n\r\n\t}\r\n\r\n\tgetPropertyName( node/*, shaderStage*/ ) {\r\n\r\n\t\treturn node.name;\r\n\r\n\t}\r\n\r\n\tisVector( type ) {\r\n\r\n\t\treturn /vec\\d/.test( type );\r\n\r\n\t}\r\n\r\n\tisMatrix( type ) {\r\n\r\n\t\treturn /mat\\d/.test( type );\r\n\r\n\t}\r\n\r\n\tisReference( type ) {\r\n\r\n\t\treturn type === 'void' || type === 'property' || type === 'sampler' || type === 'texture' || type === 'cubeTexture' || type === 'storageTexture';\r\n\r\n\t}\r\n\r\n\tneedsColorSpaceToLinear( /*texture*/ ) {\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tgetTextureColorSpaceFromMap( map ) {\r\n\r\n\t\tlet colorSpace;\r\n\r\n\t\tif ( map && map.isTexture ) {\r\n\r\n\t\t\tcolorSpace = map.colorSpace;\r\n\r\n\t\t} else if ( map && map.isWebGLRenderTarget ) {\r\n\r\n\t\t\tcolorSpace = map.texture.colorSpace;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcolorSpace = NoColorSpace;\r\n\r\n\t\t}\r\n\r\n\t\treturn colorSpace;\r\n\r\n\t}\r\n\r\n\tgetComponentType( type ) {\r\n\r\n\t\ttype = this.getVectorType( type );\r\n\r\n\t\tif ( type === 'float' || type === 'bool' || type === 'int' || type === 'uint' ) return type;\r\n\r\n\t\tconst componentType = /(b|i|u|)(vec|mat)([2-4])/.exec( type );\r\n\r\n\t\tif ( componentType === null ) return null;\r\n\r\n\t\tif ( componentType[ 1 ] === 'b' ) return 'bool';\r\n\t\tif ( componentType[ 1 ] === 'i' ) return 'int';\r\n\t\tif ( componentType[ 1 ] === 'u' ) return 'uint';\r\n\r\n\t\treturn 'float';\r\n\r\n\t}\r\n\r\n\tgetVectorType( type ) {\r\n\r\n\t\tif ( type === 'color' ) return 'vec3';\r\n\t\tif ( type === 'texture' || type === 'cubeTexture' || type === 'storageTexture' ) return 'vec4';\r\n\r\n\t\treturn type;\r\n\r\n\t}\r\n\r\n\tgetTypeFromLength( length, componentType = 'float' ) {\r\n\r\n\t\tif ( length === 1 ) return componentType;\r\n\r\n\t\tconst baseType = typeFromLength.get( length );\r\n\t\tconst prefix = componentType === 'float' ? '' : componentType[ 0 ];\r\n\r\n\t\treturn prefix + baseType;\r\n\r\n\t}\r\n\r\n\tgetTypeFromArray( array ) {\r\n\r\n\t\treturn typeFromArray.get( array.constructor );\r\n\r\n\t}\r\n\r\n\tgetTypeFromAttribute( attribute ) {\r\n\r\n\t\tlet dataAttribute = attribute;\r\n\r\n\t\tif ( attribute.isInterleavedBufferAttribute ) dataAttribute = attribute.data;\r\n\r\n\t\tconst array = dataAttribute.array;\r\n\t\tconst itemSize = attribute.itemSize;\r\n\t\tconst normalized = attribute.normalized;\r\n\r\n\t\tlet arrayType;\r\n\r\n\t\tif ( ! ( attribute instanceof Float16BufferAttribute ) && normalized !== true ) {\r\n\r\n\t\t\tarrayType = this.getTypeFromArray( array );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.getTypeFromLength( itemSize, arrayType );\r\n\r\n\t}\r\n\r\n\tgetTypeLength( type ) {\r\n\r\n\t\tconst vecType = this.getVectorType( type );\r\n\t\tconst vecNum = /vec([2-4])/.exec( vecType );\r\n\r\n\t\tif ( vecNum !== null ) return Number( vecNum[ 1 ] );\r\n\t\tif ( vecType === 'float' || vecType === 'bool' || vecType === 'int' || vecType === 'uint' ) return 1;\r\n\t\tif ( /mat2/.test( type ) === true ) return 4;\r\n\t\tif ( /mat3/.test( type ) === true ) return 9;\r\n\t\tif ( /mat4/.test( type ) === true ) return 16;\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\tgetVectorFromMatrix( type ) {\r\n\r\n\t\treturn type.replace( 'mat', 'vec' );\r\n\r\n\t}\r\n\r\n\tchangeComponentType( type, newComponentType ) {\r\n\r\n\t\treturn this.getTypeFromLength( this.getTypeLength( type ), newComponentType );\r\n\r\n\t}\r\n\r\n\tgetIntegerType( type ) {\r\n\r\n\t\tconst componentType = this.getComponentType( type );\r\n\r\n\t\tif ( componentType === 'int' || componentType === 'uint' ) return type;\r\n\r\n\t\treturn this.changeComponentType( type, 'int' );\r\n\r\n\t}\r\n\r\n\taddStack() {\r\n\r\n\t\tthis.stack = stack( this.stack );\r\n\r\n\t\tthis.stacks.push( getCurrentStack() || this.stack );\r\n\t\tsetCurrentStack( this.stack );\r\n\r\n\t\treturn this.stack;\r\n\r\n\t}\r\n\r\n\tremoveStack() {\r\n\r\n\t\tconst lastStack = this.stack;\r\n\t\tthis.stack = lastStack.parent;\r\n\r\n\t\tsetCurrentStack( this.stacks.pop() );\r\n\r\n\t\treturn lastStack;\r\n\r\n\t}\r\n\r\n\tgetDataFromNode( node, shaderStage = this.shaderStage, cache = null ) {\r\n\r\n\t\tcache = cache === null ? ( node.isGlobal( this ) ? this.globalCache : this.cache ) : cache;\r\n\r\n\t\tlet nodeData = cache.getNodeData( node );\r\n\r\n\t\tif ( nodeData === undefined ) {\r\n\r\n\t\t\tnodeData = {};\r\n\r\n\t\t\tcache.setNodeData( node, nodeData );\r\n\r\n\t\t}\r\n\r\n\t\tif ( nodeData[ shaderStage ] === undefined ) nodeData[ shaderStage ] = {};\r\n\r\n\t\treturn nodeData[ shaderStage ];\r\n\r\n\t}\r\n\r\n\tgetNodeProperties( node, shaderStage = 'any' ) {\r\n\r\n\t\tconst nodeData = this.getDataFromNode( node, shaderStage );\r\n\r\n\t\treturn nodeData.properties || ( nodeData.properties = { outputNode: null } );\r\n\r\n\t}\r\n\r\n\tgetBufferAttributeFromNode( node, type ) {\r\n\r\n\t\tconst nodeData = this.getDataFromNode( node );\r\n\r\n\t\tlet bufferAttribute = nodeData.bufferAttribute;\r\n\r\n\t\tif ( bufferAttribute === undefined ) {\r\n\r\n\t\t\tconst index = this.uniforms.index ++;\r\n\r\n\t\t\tbufferAttribute = new NodeAttribute( 'nodeAttribute' + index, type, node );\r\n\r\n\t\t\tthis.bufferAttributes.push( bufferAttribute );\r\n\r\n\t\t\tnodeData.bufferAttribute = bufferAttribute;\r\n\r\n\t\t}\r\n\r\n\t\treturn bufferAttribute;\r\n\r\n\t}\r\n\r\n\tgetStructTypeFromNode( node, shaderStage = this.shaderStage ) {\r\n\r\n\t\tconst nodeData = this.getDataFromNode( node, shaderStage );\r\n\r\n\t\tif ( nodeData.structType === undefined ) {\r\n\r\n\t\t\tconst index = this.structs.index ++;\r\n\r\n\t\t\tnode.name = `StructType${ index }`;\r\n\t\t\tthis.structs[ shaderStage ].push( node );\r\n\r\n\t\t\tnodeData.structType = node;\r\n\r\n\t\t}\r\n\r\n\t\treturn node;\r\n\r\n\t}\r\n\r\n\tgetUniformFromNode( node, type, shaderStage = this.shaderStage, name = null ) {\r\n\r\n\t\tconst nodeData = this.getDataFromNode( node, shaderStage, this.globalCache );\r\n\r\n\t\tlet nodeUniform = nodeData.uniform;\r\n\r\n\t\tif ( nodeUniform === undefined ) {\r\n\r\n\t\t\tconst index = this.uniforms.index ++;\r\n\r\n\t\t\tnodeUniform = new NodeUniform( name || ( 'nodeUniform' + index ), type, node );\r\n\r\n\t\t\tthis.uniforms[ shaderStage ].push( nodeUniform );\r\n\r\n\t\t\tnodeData.uniform = nodeUniform;\r\n\r\n\t\t}\r\n\r\n\t\treturn nodeUniform;\r\n\r\n\t}\r\n\r\n\tgetVarFromNode( node, name = null, type = node.getNodeType( this ), shaderStage = this.shaderStage ) {\r\n\r\n\t\tconst nodeData = this.getDataFromNode( node, shaderStage );\r\n\r\n\t\tlet nodeVar = nodeData.variable;\r\n\r\n\t\tif ( nodeVar === undefined ) {\r\n\r\n\t\t\tconst vars = this.vars[ shaderStage ] || ( this.vars[ shaderStage ] = [] );\r\n\r\n\t\t\tif ( name === null ) name = 'nodeVar' + vars.length;\r\n\r\n\t\t\tnodeVar = new NodeVar( name, type );\r\n\r\n\t\t\tvars.push( nodeVar );\r\n\r\n\t\t\tnodeData.variable = nodeVar;\r\n\r\n\t\t}\r\n\r\n\t\treturn nodeVar;\r\n\r\n\t}\r\n\r\n\tgetVaryingFromNode( node, name = null, type = node.getNodeType( this ) ) {\r\n\r\n\t\tconst nodeData = this.getDataFromNode( node, 'any' );\r\n\r\n\t\tlet nodeVarying = nodeData.varying;\r\n\r\n\t\tif ( nodeVarying === undefined ) {\r\n\r\n\t\t\tconst varyings = this.varyings;\r\n\t\t\tconst index = varyings.length;\r\n\r\n\t\t\tif ( name === null ) name = 'nodeVarying' + index;\r\n\r\n\t\t\tnodeVarying = new NodeVarying( name, type );\r\n\r\n\t\t\tvaryings.push( nodeVarying );\r\n\r\n\t\t\tnodeData.varying = nodeVarying;\r\n\r\n\t\t}\r\n\r\n\t\treturn nodeVarying;\r\n\r\n\t}\r\n\r\n\tgetCodeFromNode( node, type, shaderStage = this.shaderStage ) {\r\n\r\n\t\tconst nodeData = this.getDataFromNode( node );\r\n\r\n\t\tlet nodeCode = nodeData.code;\r\n\r\n\t\tif ( nodeCode === undefined ) {\r\n\r\n\t\t\tconst codes = this.codes[ shaderStage ] || ( this.codes[ shaderStage ] = [] );\r\n\t\t\tconst index = codes.length;\r\n\r\n\t\t\tnodeCode = new NodeCode( 'nodeCode' + index, type );\r\n\r\n\t\t\tcodes.push( nodeCode );\r\n\r\n\t\t\tnodeData.code = nodeCode;\r\n\r\n\t\t}\r\n\r\n\t\treturn nodeCode;\r\n\r\n\t}\r\n\r\n\taddLineFlowCode( code ) {\r\n\r\n\t\tif ( code === '' ) return this;\r\n\r\n\t\tcode = this.tab + code;\r\n\r\n\t\tif ( ! /;\\s*$/.test( code ) ) {\r\n\r\n\t\t\tcode = code + ';\\n';\r\n\r\n\t\t}\r\n\r\n\t\tthis.flow.code += code;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddFlowCode( code ) {\r\n\r\n\t\tthis.flow.code += code;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddFlowTab() {\r\n\r\n\t\tthis.tab += '\\t';\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tremoveFlowTab() {\r\n\r\n\t\tthis.tab = this.tab.slice( 0, - 1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetFlowData( node/*, shaderStage*/ ) {\r\n\r\n\t\treturn this.flowsData.get( node );\r\n\r\n\t}\r\n\r\n\tflowNode( node ) {\r\n\r\n\t\tconst output = node.getNodeType( this );\r\n\r\n\t\tconst flowData = this.flowChildNode( node, output );\r\n\r\n\t\tthis.flowsData.set( node, flowData );\r\n\r\n\t\treturn flowData;\r\n\r\n\t}\r\n\r\n\tbuildFunctionNode( shaderNode ) {\r\n\r\n\t\tconst fn = new FunctionNode();\r\n\r\n\t\tconst previous = this.currentFunctionNode;\r\n\r\n\t\tthis.currentFunctionNode = fn;\r\n\r\n\t\tfn.code = this.buildFunctionCode( shaderNode );\r\n\r\n\t\tthis.currentFunctionNode = previous;\r\n\r\n\t\treturn fn;\r\n\r\n\t}\r\n\r\n\tflowShaderNode( shaderNode ) {\r\n\r\n\t\tconst layout = shaderNode.layout;\r\n\r\n\t\tlet inputs;\r\n\r\n\t\tif ( shaderNode.isArrayInput ) {\r\n\r\n\t\t\tinputs = [];\r\n\r\n\t\t\tfor ( const input of layout.inputs ) {\r\n\r\n\t\t\t\tinputs.push( new ParameterNode( input.type, input.name ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tinputs = {};\r\n\r\n\t\t\tfor ( const input of layout.inputs ) {\r\n\r\n\t\t\t\tinputs[ input.name ] = new ParameterNode( input.type, input.name );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tshaderNode.layout = null;\r\n\r\n\t\tconst callNode = shaderNode.call( inputs );\r\n\t\tconst flowData = this.flowStagesNode( callNode, layout.type );\r\n\r\n\t\tshaderNode.layout = layout;\r\n\r\n\t\treturn flowData;\r\n\r\n\t}\r\n\r\n\tflowStagesNode( node, output = null ) {\r\n\r\n\t\tconst previousFlow = this.flow;\r\n\t\tconst previousVars = this.vars;\r\n\t\tconst previousBuildStage = this.buildStage;\r\n\r\n\t\tconst flow = {\r\n\t\t\tcode: ''\r\n\t\t};\r\n\r\n\t\tthis.flow = flow;\r\n\t\tthis.vars = {};\r\n\r\n\t\tfor ( const buildStage of defaultBuildStages ) {\r\n\r\n\t\t\tthis.setBuildStage( buildStage );\r\n\r\n\t\t\tflow.result = node.build( this, output );\r\n\r\n\t\t}\r\n\r\n\t\tflow.vars = this.getVars( this.shaderStage );\r\n\r\n\t\tthis.flow = previousFlow;\r\n\t\tthis.vars = previousVars;\r\n\t\tthis.setBuildStage( previousBuildStage );\r\n\r\n\t\treturn flow;\r\n\r\n\t}\r\n\r\n\tgetFunctionOperator() {\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tflowChildNode( node, output = null ) {\r\n\r\n\t\tconst previousFlow = this.flow;\r\n\r\n\t\tconst flow = {\r\n\t\t\tcode: ''\r\n\t\t};\r\n\r\n\t\tthis.flow = flow;\r\n\r\n\t\tflow.result = node.build( this, output );\r\n\r\n\t\tthis.flow = previousFlow;\r\n\r\n\t\treturn flow;\r\n\r\n\t}\r\n\r\n\tflowNodeFromShaderStage( shaderStage, node, output = null, propertyName = null ) {\r\n\r\n\t\tconst previousShaderStage = this.shaderStage;\r\n\r\n\t\tthis.setShaderStage( shaderStage );\r\n\r\n\t\tconst flowData = this.flowChildNode( node, output );\r\n\r\n\t\tif ( propertyName !== null ) {\r\n\r\n\t\t\tflowData.code += `${ this.tab + propertyName } = ${ flowData.result };\\n`;\r\n\r\n\t\t}\r\n\r\n\t\tthis.flowCode[ shaderStage ] = this.flowCode[ shaderStage ] + flowData.code;\r\n\r\n\t\tthis.setShaderStage( previousShaderStage );\r\n\r\n\t\treturn flowData;\r\n\r\n\t}\r\n\r\n\tgetAttributesArray() {\r\n\r\n\t\treturn this.attributes.concat( this.bufferAttributes );\r\n\r\n\t}\r\n\r\n\tgetAttributes( /*shaderStage*/ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tgetVaryings( /*shaderStage*/ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tgetVar( type, name ) {\r\n\r\n\t\treturn `${ this.getType( type ) } ${ name }`;\r\n\r\n\t}\r\n\r\n\tgetVars( shaderStage ) {\r\n\r\n\t\tlet snippet = '';\r\n\r\n\t\tconst vars = this.vars[ shaderStage ];\r\n\r\n\t\tif ( vars !== undefined ) {\r\n\r\n\t\t\tfor ( const variable of vars ) {\r\n\r\n\t\t\t\tsnippet += `${ this.getVar( variable.type, variable.name ) }; `;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn snippet;\r\n\r\n\t}\r\n\r\n\tgetUniforms( /*shaderStage*/ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tgetCodes( shaderStage ) {\r\n\r\n\t\tconst codes = this.codes[ shaderStage ];\r\n\r\n\t\tlet code = '';\r\n\r\n\t\tif ( codes !== undefined ) {\r\n\r\n\t\t\tfor ( const nodeCode of codes ) {\r\n\r\n\t\t\t\tcode += nodeCode.code + '\\n';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\r\n\t}\r\n\r\n\tgetHash() {\r\n\r\n\t\treturn this.vertexShader + this.fragmentShader + this.computeShader;\r\n\r\n\t}\r\n\r\n\tsetShaderStage( shaderStage ) {\r\n\r\n\t\tthis.shaderStage = shaderStage;\r\n\r\n\t}\r\n\r\n\tgetShaderStage() {\r\n\r\n\t\treturn this.shaderStage;\r\n\r\n\t}\r\n\r\n\tsetBuildStage( buildStage ) {\r\n\r\n\t\tthis.buildStage = buildStage;\r\n\r\n\t}\r\n\r\n\tgetBuildStage() {\r\n\r\n\t\treturn this.buildStage;\r\n\r\n\t}\r\n\r\n\tbuildCode() {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tbuild( convertMaterial = true ) {\r\n\r\n\t\tconst { object, material } = this;\r\n\r\n\t\tif ( convertMaterial ) {\r\n\r\n\t\t\tif ( material !== null ) {\r\n\r\n\t\t\t\tNodeMaterial.fromMaterial( material ).build( this );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.addFlow( 'compute', object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// setup() -> stage 1: create possible new nodes and returns an output reference node\r\n\t\t// analyze()   -> stage 2: analyze nodes to possible optimization and validation\r\n\t\t// generate()  -> stage 3: generate shader\r\n\r\n\t\tfor ( const buildStage of defaultBuildStages ) {\r\n\r\n\t\t\tthis.setBuildStage( buildStage );\r\n\r\n\t\t\tif ( this.context.vertex && this.context.vertex.isNode ) {\r\n\r\n\t\t\t\tthis.flowNodeFromShaderStage( 'vertex', this.context.vertex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( const shaderStage of shaderStages ) {\r\n\r\n\t\t\t\tthis.setShaderStage( shaderStage );\r\n\r\n\t\t\t\tconst flowNodes = this.flowNodes[ shaderStage ];\r\n\r\n\t\t\t\tfor ( const node of flowNodes ) {\r\n\r\n\t\t\t\t\tif ( buildStage === 'generate' ) {\r\n\r\n\t\t\t\t\t\tthis.flowNode( node );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tnode.build( this );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setBuildStage( null );\r\n\t\tthis.setShaderStage( null );\r\n\r\n\t\t// stage 4: build code for a specific output\r\n\r\n\t\tthis.buildCode();\r\n\t\tthis.buildUpdateNodes();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetNodeUniform( uniformNode, type ) {\r\n\r\n\t\tif ( type === 'float' ) return new FloatNodeUniform( uniformNode );\r\n\t\tif ( type === 'vec2' ) return new Vector2NodeUniform( uniformNode );\r\n\t\tif ( type === 'vec3' ) return new Vector3NodeUniform( uniformNode );\r\n\t\tif ( type === 'vec4' ) return new Vector4NodeUniform( uniformNode );\r\n\t\tif ( type === 'color' ) return new ColorNodeUniform( uniformNode );\r\n\t\tif ( type === 'mat3' ) return new Matrix3NodeUniform( uniformNode );\r\n\t\tif ( type === 'mat4' ) return new Matrix4NodeUniform( uniformNode );\r\n\r\n\t\tthrow new Error( `Uniform \"${type}\" not declared.` );\r\n\r\n\t}\r\n\r\n\tcreateNodeMaterial( type = 'NodeMaterial' ) {\r\n\r\n\t\treturn createNodeMaterialFromType( type );\r\n\r\n\t}\r\n\r\n\tformat( snippet, fromType, toType ) {\r\n\r\n\t\tfromType = this.getVectorType( fromType );\r\n\t\ttoType = this.getVectorType( toType );\r\n\r\n\t\tif ( fromType === toType || toType === null || this.isReference( toType ) ) {\r\n\r\n\t\t\treturn snippet;\r\n\r\n\t\t}\r\n\r\n\t\tconst fromTypeLength = this.getTypeLength( fromType );\r\n\t\tconst toTypeLength = this.getTypeLength( toType );\r\n\r\n\t\tif ( fromTypeLength > 4 ) { // fromType is matrix-like\r\n\r\n\t\t\t// @TODO: ignore for now\r\n\r\n\t\t\treturn snippet;\r\n\r\n\t\t}\r\n\r\n\t\tif ( toTypeLength > 4 || toTypeLength === 0 ) { // toType is matrix-like or unknown\r\n\r\n\t\t\t// @TODO: ignore for now\r\n\r\n\t\t\treturn snippet;\r\n\r\n\t\t}\r\n\r\n\t\tif ( fromTypeLength === toTypeLength ) {\r\n\r\n\t\t\treturn `${ this.getType( toType ) }( ${ snippet } )`;\r\n\r\n\t\t}\r\n\r\n\t\tif ( fromTypeLength > toTypeLength ) {\r\n\r\n\t\t\treturn this.format( `${ snippet }.${ 'xyz'.slice( 0, toTypeLength ) }`, this.getTypeFromLength( toTypeLength, this.getComponentType( fromType ) ), toType );\r\n\r\n\t\t}\r\n\r\n\t\tif ( toTypeLength === 4 && fromTypeLength > 1 ) { // toType is vec4-like\r\n\r\n\t\t\treturn `${ this.getType( toType ) }( ${ this.format( snippet, fromType, 'vec3' ) }, 1.0 )`;\r\n\r\n\t\t}\r\n\r\n\t\tif ( fromTypeLength === 2 ) { // fromType is vec2-like and toType is vec3-like\r\n\r\n\t\t\treturn `${ this.getType( toType ) }( ${ this.format( snippet, fromType, 'vec2' ) }, 0.0 )`;\r\n\r\n\t\t}\r\n\r\n\t\tif ( fromTypeLength === 1 && toTypeLength > 1 && fromType[ 0 ] !== toType[ 0 ] ) { // fromType is float-like\r\n\r\n\t\t\t// convert a number value to vector type, e.g:\r\n\t\t\t// vec3( 1u ) -> vec3( float( 1u ) )\r\n\r\n\t\t\tsnippet = `${ this.getType( this.getComponentType( toType ) ) }( ${ snippet } )`;\r\n\r\n\t\t}\r\n\r\n\t\treturn `${ this.getType( toType ) }( ${ snippet } )`; // fromType is float-like\r\n\r\n\t}\r\n\r\n\tgetSignature() {\r\n\r\n\t\treturn `// Three.js r${ REVISION } - NodeMaterial System\\n`;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeBuilder;\r\n", "import { NodeUpdateType } from './constants.js';\r\n\r\nclass NodeFrame {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.time = 0;\r\n\t\tthis.deltaTime = 0;\r\n\r\n\t\tthis.frameId = 0;\r\n\t\tthis.renderId = 0;\r\n\r\n\t\tthis.startTime = null;\r\n\r\n\t\tthis.updateMap = new WeakMap();\r\n\t\tthis.updateBeforeMap = new WeakMap();\r\n\r\n\t\tthis.renderer = null;\r\n\t\tthis.material = null;\r\n\t\tthis.camera = null;\r\n\t\tthis.object = null;\r\n\t\tthis.scene = null;\r\n\r\n\t}\r\n\r\n\t_getMaps( referenceMap, nodeRef ) {\r\n\r\n\t\tlet maps = referenceMap.get( nodeRef );\r\n\r\n\t\tif ( maps === undefined ) {\r\n\r\n\t\t\tmaps = {\r\n\t\t\t\trenderMap: new WeakMap(),\r\n\t\t\t\tframeMap: new WeakMap()\r\n\t\t\t};\r\n\r\n\t\t\treferenceMap.set( nodeRef, maps );\r\n\r\n\t\t}\r\n\r\n\t\treturn maps;\r\n\r\n\t}\r\n\r\n\tupdateBeforeNode( node ) {\r\n\r\n\t\tconst updateType = node.getUpdateBeforeType();\r\n\t\tconst reference = node.setReference( this );\r\n\r\n\t\tif ( updateType === NodeUpdateType.FRAME ) {\r\n\r\n\t\t\tconst { frameMap } = this._getMaps( this.updateBeforeMap, reference );\r\n\r\n\t\t\tif ( frameMap.get( node ) !== this.frameId ) {\r\n\r\n\t\t\t\tif ( node.updateBefore( this ) !== false ) {\r\n\r\n\t\t\t\t\tframeMap.set( node, this.frameId );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( updateType === NodeUpdateType.RENDER ) {\r\n\r\n\t\t\tconst { renderMap } = this._getMaps( this.updateBeforeMap, reference );\r\n\r\n\t\t\tif ( renderMap.get( node ) !== this.renderId ) {\r\n\r\n\t\t\t\tif ( node.updateBefore( this ) !== false ) {\r\n\r\n\t\t\t\t\trenderMap.set( node, this.renderId );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( updateType === NodeUpdateType.OBJECT ) {\r\n\r\n\t\t\tnode.updateBefore( this );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdateNode( node ) {\r\n\r\n\t\tconst updateType = node.getUpdateType();\r\n\t\tconst reference = node.setReference( this );\r\n\r\n\t\tif ( updateType === NodeUpdateType.FRAME ) {\r\n\r\n\t\t\tconst { frameMap } = this._getMaps( this.updateMap, reference );\r\n\r\n\t\t\tif ( frameMap.get( node ) !== this.frameId ) {\r\n\r\n\t\t\t\tif ( node.update( this ) !== false ) {\r\n\r\n\t\t\t\t\tframeMap.set( node, this.frameId );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( updateType === NodeUpdateType.RENDER ) {\r\n\r\n\t\t\tconst { renderMap } = this._getMaps( this.updateMap, reference );\r\n\r\n\t\t\tif ( renderMap.get( node ) !== this.renderId ) {\r\n\r\n\t\t\t\tif ( node.update( this ) !== false ) {\r\n\r\n\t\t\t\t\trenderMap.set( node, this.renderId );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( updateType === NodeUpdateType.OBJECT ) {\r\n\r\n\t\t\tnode.update( this );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tthis.frameId ++;\r\n\r\n\t\tif ( this.lastTime === undefined ) this.lastTime = performance.now();\r\n\r\n\t\tthis.deltaTime = ( performance.now() - this.lastTime ) / 1000;\r\n\r\n\t\tthis.lastTime = performance.now();\r\n\r\n\t\tthis.time += this.deltaTime;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeFrame;\r\n", "class NodeFunctionInput {\r\n\r\n\tconstructor( type, name, count = null, qualifier = '', isConst = false ) {\r\n\r\n\t\tthis.type = type;\r\n\t\tthis.name = name;\r\n\t\tthis.count = count;\r\n\t\tthis.qualifier = qualifier;\r\n\t\tthis.isConst = isConst;\r\n\r\n\t}\r\n\r\n}\r\n\r\nNodeFunctionInput.isNodeFunctionInput = true;\r\n\r\nexport default NodeFunctionInput;\r\n", "import Node, { addNodeClass } from './Node.js';\r\n\r\nclass StructTypeNode extends Node {\r\n\r\n\tconstructor( types ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.types = types;\r\n\t\tthis.isStructTypeNode = true;\r\n\r\n\t}\r\n\r\n\tgetMemberTypes() {\r\n\r\n\t\treturn this.types;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default StructTypeNode;\r\n\r\naddNodeClass( 'StructTypeNode', StructTypeNode );\r\n", "import Node, { addNodeClass } from './Node.js';\r\nimport StructTypeNode from './StructTypeNode.js';\r\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass OutputStructNode extends Node {\r\n\r\n\tconstructor( ...members ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isOutputStructNode = true;\r\n\t\tthis.members = members;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tsuper.setup( builder );\r\n\r\n\t\tconst members = this.members;\r\n\t\tconst types = [];\r\n\r\n\t\tfor ( let i = 0; i < members.length; i ++ ) {\r\n\r\n\t\t\ttypes.push( members[ i ].getNodeType( builder ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.nodeType = builder.getStructTypeFromNode( new StructTypeNode( types ) ).name;\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst nodeVar = builder.getVarFromNode( this );\r\n\t\tnodeVar.isOutputStructVar = true;\r\n\r\n\t\tconst propertyName = builder.getPropertyName( nodeVar );\r\n\r\n\t\tconst members = this.members;\r\n\r\n\t\tconst structPrefix = propertyName !== '' ? propertyName + '.' : '';\r\n\r\n\t\tfor ( let i = 0; i < members.length; i ++ ) {\r\n\r\n\t\t\tconst snippet = members[ i ].build( builder, output );\r\n\r\n\t\t\tbuilder.addLineFlowCode( `${ structPrefix }m${ i } = ${ snippet }` );\r\n\r\n\t\t}\r\n\r\n\t\treturn propertyName;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default OutputStructNode;\r\n\r\nexport const outputStruct = nodeProxy( OutputStructNode );\r\n\r\naddNodeClass( 'OutputStructNode', OutputStructNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass HashNode extends Node {\r\n\r\n\tconstructor( seedNode ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.seedNode = seedNode;\r\n\r\n\t}\r\n\r\n\tsetup( /*builder*/ ) {\r\n\r\n\t\t// Taken from https://www.shadertoy.com/view/XlGcRh, originally from pcg-random.org\r\n\r\n\t\tconst state = this.seedNode.uint().mul( 747796405 ).add( 2891336453 );\r\n\t\tconst word = state.shiftRight( state.shiftRight( 28 ).add( 4 ) ).bitXor( state ).mul( 277803737 );\r\n\t\tconst result = word.shiftRight( 22 ).bitXor( word );\r\n\r\n\t\treturn result.float().mul( 1 / 2 ** 32 ); // Convert to range [0, 1)\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default HashNode;\r\n\r\nexport const hash = nodeProxy( HashNode );\r\n\r\naddNodeElement( 'hash', hash );\r\n\r\naddNodeClass( 'HashNode', HashNode );\r\n", "import { sub, mul, div, add } from './OperatorNode.js';\r\nimport { addNodeElement } from '../shadernode/ShaderNode.js';\r\nimport { PI, pow, sin } from './MathNode.js';\r\n\r\n// remapping functions https://iquilezles.org/articles/functions/\r\nexport const parabola = ( x, k ) => pow( mul( 4.0, x.mul( sub( 1.0, x ) ) ), k );\r\nexport const gain = ( x, k ) => x.lessThan( 0.5 ) ? parabola( x.mul( 2.0 ), k ).div( 2.0 ) : sub( 1.0, parabola( mul( sub( 1.0, x ), 2.0 ), k ).div( 2.0 ) );\r\nexport const pcurve = ( x, a, b ) => pow( div( pow( x, a ), add( pow( x, a ), pow( sub( 1.0, x ), b ) ) ), 1.0 / a );\r\nexport const sinc = ( x, k ) => sin( PI.mul( k.mul( x ).sub( 1.0 ) ) ).div( PI.mul( k.mul( x ).sub( 1.0 ) ) );\r\n\r\n\r\naddNodeElement( 'parabola', parabola );\r\naddNodeElement( 'gain', gain );\r\naddNodeElement( 'pcurve', pcurve );\r\naddNodeElement( 'sinc', sinc );\r\n", "// https://github.com/cabbibo/glsl-tri-noise-3d\r\n\r\nimport { loop } from '../utils/LoopNode.js';\r\nimport { float, vec3, tslFn } from '../shadernode/ShaderNode.js';\r\n\r\nconst tri = tslFn( ( [ x ] ) => {\r\n\r\n\treturn x.fract().sub( .5 ).abs();\r\n\r\n} );\r\n\r\nconst tri3 = tslFn( ( [ p ] ) => {\r\n\r\n\treturn vec3( tri( p.z.add( tri( p.y.mul( 1. ) ) ) ), tri( p.z.add( tri( p.x.mul( 1. ) ) ) ), tri( p.y.add( tri( p.x.mul( 1. ) ) ) ) );\r\n\r\n} );\r\n\r\nconst triNoise3D = tslFn( ( [ p_immutable, spd, time ] ) => {\r\n\r\n\tconst p = vec3( p_immutable ).toVar();\r\n\tconst z = float( 1.4 ).toVar();\r\n\tconst rz = float( 0.0 ).toVar();\r\n\tconst bp = vec3( p ).toVar();\r\n\r\n\tloop( { start: float( 0.0 ), end: float( 3.0 ), type: 'float', condition: '<=' }, () => {\r\n\r\n\t\tconst dg = vec3( tri3( bp.mul( 2.0 ) ) ).toVar();\r\n\t\tp.addAssign( dg.add( time.mul( float( 0.1 ).mul( spd ) ) ) );\r\n\t\tbp.mulAssign( 1.8 );\r\n\t\tz.mulAssign( 1.5 );\r\n\t\tp.mulAssign( 1.2 );\r\n\r\n\t\tconst t = float( tri( p.z.add( tri( p.x.add( tri( p.y ) ) ) ) ) ).toVar();\r\n\t\trz.addAssign( t.div( z ) );\r\n\t\tbp.addAssign( 0.14 );\r\n\r\n\t} );\r\n\r\n\treturn rz;\r\n\r\n} );\r\n\r\n// layouts\r\n\r\ntri.setLayout( {\r\n\tname: 'tri',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'x', type: 'float' }\r\n\t]\r\n} );\r\n\r\ntri3.setLayout( {\r\n\tname: 'tri3',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec3' }\r\n\t]\r\n} );\r\n\r\ntriNoise3D.setLayout( {\r\n\tname: 'triNoise3D',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec3' },\r\n\t\t{ name: 'spd', type: 'float' },\r\n\t\t{ name: 'time', type: 'float' }\r\n\t]\r\n} );\r\n\r\nexport { tri, tri3, triNoise3D };\r\n", "import CondNode from '../math/CondNode.js';\r\nimport { expression } from '../code/ExpressionNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nlet discardExpression;\r\n\r\nclass DiscardNode extends CondNode {\r\n\r\n\tconstructor( condNode ) {\r\n\r\n\t\tdiscardExpression = discardExpression || expression( 'discard' );\r\n\r\n\t\tsuper( condNode, discardExpression );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default DiscardNode;\r\n\r\nexport const inlineDiscard = nodeProxy( DiscardNode );\r\nexport const discard = ( condNode ) => inlineDiscard( condNode ).append();\r\n\r\naddNodeElement( 'discard', discard ); // @TODO: Check... this cause a little confusing using in chaining\r\n\r\naddNodeClass( 'DiscardNode', DiscardNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass FunctionOverloadingNode extends Node {\r\n\r\n\tconstructor( functionNodes = [], ...parametersNodes ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.functionNodes = functionNodes;\r\n\t\tthis.parametersNodes = parametersNodes;\r\n\r\n\t\tthis._candidateFnCall = null;\r\n\r\n\t}\r\n\r\n\tgetNodeType() {\r\n\r\n\t\treturn this.functionNodes[ 0 ].shaderNode.layout.type;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst params = this.parametersNodes;\r\n\r\n\t\tlet candidateFnCall = this._candidateFnCall;\r\n\r\n\t\tif ( candidateFnCall === null ) {\r\n\r\n\t\t\tlet candidateFn = null;\r\n\t\t\tlet candidateScore = - 1;\r\n\r\n\t\t\tfor ( const functionNode of this.functionNodes ) {\r\n\r\n\t\t\t\tconst shaderNode = functionNode.shaderNode;\r\n\t\t\t\tconst layout = shaderNode.layout;\r\n\r\n\t\t\t\tif ( layout === null ) {\r\n\r\n\t\t\t\t\tthrow new Error( 'FunctionOverloadingNode: FunctionNode must be a layout.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst inputs = layout.inputs;\r\n\r\n\t\t\t\tif ( params.length === inputs.length ) {\r\n\r\n\t\t\t\t\tlet score = 0;\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < params.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst param = params[ i ];\r\n\t\t\t\t\t\tconst input = inputs[ i ];\r\n\r\n\t\t\t\t\t\tif ( param.getNodeType( builder ) === input.type ) {\r\n\r\n\t\t\t\t\t\t\tscore ++;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tscore = 0;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( score > candidateScore ) {\r\n\r\n\t\t\t\t\t\tcandidateFn = functionNode;\r\n\t\t\t\t\t\tcandidateScore = score;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._candidateFnCall = candidateFnCall = candidateFn( ...params );\r\n\r\n\t\t}\r\n\r\n\t\treturn candidateFnCall;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default FunctionOverloadingNode;\r\n\r\nconst overloadingBaseFn = nodeProxy( FunctionOverloadingNode );\r\n\r\nexport const overloadingFn = ( functionNodes ) => ( ...params ) => overloadingBaseFn( functionNodes, ...params );\r\n\r\naddNodeClass( 'FunctionOverloadingNode', FunctionOverloadingNode );\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { transformedNormalView } from '../accessors/NormalNode.js';\r\nimport { positionViewDirection } from '../accessors/PositionNode.js';\r\nimport { nodeImmutable, vec2, vec3 } from '../shadernode/ShaderNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\n\r\nclass MatcapUVNode extends TempNode {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( 'vec2' );\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst x = vec3( positionViewDirection.z, 0, positionViewDirection.x.negate() ).normalize();\r\n\t\tconst y = positionViewDirection.cross( x );\r\n\r\n\t\treturn vec2( x.dot( transformedNormalView ), y.dot( transformedNormalView ) ).mul( 0.495 ).add( 0.5 );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default MatcapUVNode;\r\n\r\nexport const matcapUV = nodeImmutable( MatcapUVNode );\r\n\r\naddNodeClass( 'MatcapUVNode', MatcapUVNode );\r\n", "import UniformNode from '../core/UniformNode.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { nodeObject, nodeImmutable } from '../shadernode/ShaderNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\n\r\nclass TimerNode extends UniformNode {\r\n\r\n\tconstructor( scope = TimerNode.LOCAL, scale = 1, value = 0 ) {\r\n\r\n\t\tsuper( value );\r\n\r\n\t\tthis.scope = scope;\r\n\t\tthis.scale = scale;\r\n\r\n\t\tthis.updateType = NodeUpdateType.FRAME;\r\n\r\n\t}\r\n\t/*\r\n\t@TODO:\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === TimerNode.FRAME ) {\r\n\r\n\t\t\treturn 'uint';\r\n\r\n\t\t}\r\n\r\n\t\treturn 'float';\r\n\r\n\t}\r\n*/\r\n\tupdate( frame ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\t\tconst scale = this.scale;\r\n\r\n\t\tif ( scope === TimerNode.LOCAL ) {\r\n\r\n\t\t\tthis.value += frame.deltaTime * scale;\r\n\r\n\t\t} else if ( scope === TimerNode.DELTA ) {\r\n\r\n\t\t\tthis.value = frame.deltaTime * scale;\r\n\r\n\t\t} else if ( scope === TimerNode.FRAME ) {\r\n\r\n\t\t\tthis.value = frame.frameId;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// global\r\n\r\n\t\t\tthis.value = frame.time * scale;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.scope = this.scope;\r\n\t\tdata.scale = this.scale;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.scope = data.scope;\r\n\t\tthis.scale = data.scale;\r\n\r\n\t}\r\n\r\n}\r\n\r\nTimerNode.LOCAL = 'local';\r\nTimerNode.GLOBAL = 'global';\r\nTimerNode.DELTA = 'delta';\r\nTimerNode.FRAME = 'frame';\r\n\r\nexport default TimerNode;\r\n\r\n// @TODO: add support to use node in timeScale\r\nexport const timerLocal = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.LOCAL, timeScale, value ) );\r\nexport const timerGlobal = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.GLOBAL, timeScale, value ) );\r\nexport const timerDelta = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.DELTA, timeScale, value ) );\r\nexport const frameId = nodeImmutable( TimerNode, TimerNode.FRAME ).uint();\r\n\r\naddNodeClass( 'TimerNode', TimerNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { timerLocal } from './TimerNode.js';\r\nimport { nodeObject, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass OscNode extends Node {\r\n\r\n\tconstructor( method = OscNode.SINE, timeNode = timerLocal() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.method = method;\r\n\t\tthis.timeNode = timeNode;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.timeNode.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst method = this.method;\r\n\t\tconst timeNode = nodeObject( this.timeNode );\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( method === OscNode.SINE ) {\r\n\r\n\t\t\toutputNode = timeNode.add( 0.75 ).mul( Math.PI * 2 ).sin().mul( 0.5 ).add( 0.5 );\r\n\r\n\t\t} else if ( method === OscNode.SQUARE ) {\r\n\r\n\t\t\toutputNode = timeNode.fract().round();\r\n\r\n\t\t} else if ( method === OscNode.TRIANGLE ) {\r\n\r\n\t\t\toutputNode = timeNode.add( 0.5 ).fract().mul( 2 ).sub( 1 ).abs();\r\n\r\n\t\t} else if ( method === OscNode.SAWTOOTH ) {\r\n\r\n\t\t\toutputNode = timeNode.fract();\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode;\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.method = this.method;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.method = data.method;\r\n\r\n\t}\r\n\r\n}\r\n\r\nOscNode.SINE = 'sine';\r\nOscNode.SQUARE = 'square';\r\nOscNode.TRIANGLE = 'triangle';\r\nOscNode.SAWTOOTH = 'sawtooth';\r\n\r\nexport default OscNode;\r\n\r\nexport const oscSine = nodeProxy( OscNode, OscNode.SINE );\r\nexport const oscSquare = nodeProxy( OscNode, OscNode.SQUARE );\r\nexport const oscTriangle = nodeProxy( OscNode, OscNode.TRIANGLE );\r\nexport const oscSawtooth = nodeProxy( OscNode, OscNode.SAWTOOTH );\r\n\r\naddNodeClass( 'OscNode', OscNode );\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass PackingNode extends TempNode {\r\n\r\n\tconstructor( scope, node ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scope = scope;\r\n\t\tthis.node = node;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.node.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst { scope, node } = this;\r\n\r\n\t\tlet result = null;\r\n\r\n\t\tif ( scope === PackingNode.DIRECTION_TO_COLOR ) {\r\n\r\n\t\t\tresult = node.mul( 0.5 ).add( 0.5 );\r\n\r\n\t\t} else if ( scope === PackingNode.COLOR_TO_DIRECTION ) {\r\n\r\n\t\t\tresult = node.mul( 2.0 ).sub( 1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n}\r\n\r\nPackingNode.DIRECTION_TO_COLOR = 'directionToColor';\r\nPackingNode.COLOR_TO_DIRECTION = 'colorToDirection';\r\n\r\nexport default PackingNode;\r\n\r\nexport const directionToColor = nodeProxy( PackingNode, PackingNode.DIRECTION_TO_COLOR );\r\nexport const colorToDirection = nodeProxy( PackingNode, PackingNode.COLOR_TO_DIRECTION );\r\n\r\naddNodeElement( 'directionToColor', directionToColor );\r\naddNodeElement( 'colorToDirection', colorToDirection );\r\n\r\naddNodeClass( 'PackingNode', PackingNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { float, addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass RemapNode extends Node {\r\n\r\n\tconstructor( node, inLowNode, inHighNode, outLowNode = float( 0 ), outHighNode = float( 1 ) ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.inLowNode = inLowNode;\r\n\t\tthis.inHighNode = inHighNode;\r\n\t\tthis.outLowNode = outLowNode;\r\n\t\tthis.outHighNode = outHighNode;\r\n\r\n\t\tthis.doClamp = true;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst { node, inLowNode, inHighNode, outLowNode, outHighNode, doClamp } = this;\r\n\r\n\t\tlet t = node.sub( inLowNode ).div( inHighNode.sub( inLowNode ) );\r\n\r\n\t\tif ( doClamp === true ) t = t.clamp();\r\n\r\n\t\treturn t.mul( outHighNode.sub( outLowNode ) ).add( outLowNode );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default RemapNode;\r\n\r\nexport const remap = nodeProxy( RemapNode, null, null, { doClamp: false } );\r\nexport const remapClamp = nodeProxy( RemapNode );\r\n\r\naddNodeElement( 'remap', remap );\r\naddNodeElement( 'remapClamp', remapClamp );\r\n\r\naddNodeClass( 'RemapNode', RemapNode );\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, nodeProxy, vec2 } from '../shadernode/ShaderNode.js';\r\n\r\nclass RotateUVNode extends TempNode {\r\n\r\n\tconstructor( uvNode, rotationNode, centerNode = vec2( 0.5 ) ) {\r\n\r\n\t\tsuper( 'vec2' );\r\n\r\n\t\tthis.uvNode = uvNode;\r\n\t\tthis.rotationNode = rotationNode;\r\n\t\tthis.centerNode = centerNode;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst { uvNode, rotationNode, centerNode } = this;\r\n\r\n\t\tconst vector = uvNode.sub( centerNode );\r\n\r\n\t\treturn vector.rotate( rotationNode ).add( centerNode );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default RotateUVNode;\r\n\r\nexport const rotateUV = nodeProxy( RotateUVNode );\r\n\r\naddNodeElement( 'rotateUV', rotateUV );\r\n\r\naddNodeClass( 'RotateUVNode', RotateUVNode );\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport {\r\n\taddNodeElement,\r\n\tnodeProxy,\r\n\tvec4,\r\n\tmat2,\r\n\tmat4,\r\n} from '../shadernode/ShaderNode.js';\r\nimport { cos, sin } from '../math/MathNode.js';\r\n\r\nclass RotateNode extends TempNode {\r\n\r\n\tconstructor( positionNode, rotationNode ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.positionNode = positionNode;\r\n\t\tthis.rotationNode = rotationNode;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.positionNode.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst { rotationNode, positionNode } = this;\r\n\r\n\t\tconst nodeType = this.getNodeType( builder );\r\n\r\n\t\tif ( nodeType === 'vec2' ) {\r\n\r\n\t\t\tconst cosAngle = rotationNode.cos();\r\n\t\t\tconst sinAngle = rotationNode.sin();\r\n\r\n\t\t\tconst rotationMatrix = mat2(\r\n\t\t\t\tcosAngle, sinAngle,\r\n\t\t\t\tsinAngle.negate(), cosAngle\r\n\t\t\t);\r\n\r\n\t\t\treturn rotationMatrix.mul( positionNode );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst rotation = rotationNode;\r\n\t\t\tconst rotationXMatrix = mat4( vec4( 1.0, 0.0, 0.0, 0.0 ), vec4( 0.0, cos( rotation.x ), sin( rotation.x ).negate(), 0.0 ), vec4( 0.0, sin( rotation.x ), cos( rotation.x ), 0.0 ), vec4( 0.0, 0.0, 0.0, 1.0 ) );\r\n\t\t\tconst rotationYMatrix = mat4( vec4( cos( rotation.y ), 0.0, sin( rotation.y ), 0.0 ), vec4( 0.0, 1.0, 0.0, 0.0 ), vec4( sin( rotation.y ).negate(), 0.0, cos( rotation.y ), 0.0 ), vec4( 0.0, 0.0, 0.0, 1.0 ) );\r\n\t\t\tconst rotationZMatrix = mat4( vec4( cos( rotation.z ), sin( rotation.z ).negate(), 0.0, 0.0 ), vec4( sin( rotation.z ), cos( rotation.z ), 0.0, 0.0 ), vec4( 0.0, 0.0, 1.0, 0.0 ), vec4( 0.0, 0.0, 0.0, 1.0 ) );\r\n\r\n\t\t\treturn rotationXMatrix.mul( rotationYMatrix ).mul( rotationZMatrix ).mul( vec4( positionNode, 1.0 ) ).xyz;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default RotateNode;\r\n\r\nexport const rotate = nodeProxy( RotateNode );\r\n\r\naddNodeElement( 'rotate', rotate );\r\n\r\naddNodeClass( 'RotateNode', RotateNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { uv } from '../accessors/UVNode.js';\r\nimport { nodeProxy, float, vec2 } from '../shadernode/ShaderNode.js';\r\n\r\nclass SpriteSheetUVNode extends Node {\r\n\r\n\tconstructor( countNode, uvNode = uv(), frameNode = float( 0 ) ) {\r\n\r\n\t\tsuper( 'vec2' );\r\n\r\n\t\tthis.countNode = countNode;\r\n\t\tthis.uvNode = uvNode;\r\n\t\tthis.frameNode = frameNode;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst { frameNode, uvNode, countNode } = this;\r\n\r\n\t\tconst { width, height } = countNode;\r\n\r\n\t\tconst frameNum = frameNode.mod( width.mul( height ) ).floor();\r\n\r\n\t\tconst column = frameNum.mod( width );\r\n\t\tconst row = height.sub( frameNum.add( 1 ).div( width ).ceil() );\r\n\r\n\t\tconst scale = countNode.reciprocal();\r\n\t\tconst uvFrameOffset = vec2( column, row );\r\n\r\n\t\treturn uvNode.add( uvFrameOffset ).mul( scale );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default SpriteSheetUVNode;\r\n\r\nexport const spritesheetUV = nodeProxy( SpriteSheetUVNode );\r\n\r\naddNodeClass( 'SpriteSheetUVNode', SpriteSheetUVNode );\r\n", "import { addNodeClass } from '../core/Node.js';\r\nimport { nodeProxy, addNodeElement } from '../shadernode/ShaderNode.js';\r\nimport ArrayElementNode from './ArrayElementNode.js';\r\n\r\nclass StorageArrayElementNode extends ArrayElementNode {\r\n\r\n\tconstructor( storageBufferNode, indexNode ) {\r\n\r\n\t\tsuper( storageBufferNode, indexNode );\r\n\r\n\t\tthis.isStorageArrayElementNode = true;\r\n\r\n\t}\r\n\r\n\tset storageBufferNode( value ) {\r\n\r\n\t\tthis.node = value;\r\n\r\n\t}\r\n\r\n\tget storageBufferNode() {\r\n\r\n\t\treturn this.node;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tif ( builder.isAvailable( 'storageBuffer' ) === false ) {\r\n\r\n\t\t\tif ( ! this.node.instanceIndex && this.node.bufferObject === true ) {\r\n\r\n\t\t\t\tbuilder.setupPBO( this.node );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn super.setup( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tlet snippet;\r\n\r\n\t\tconst isAssignContext = builder.context.assign;\r\n\r\n\t\t//\r\n\r\n\t\tif ( builder.isAvailable( 'storageBuffer' ) === false ) {\r\n\r\n\t\t\tconst { node } = this;\r\n\r\n\t\t\tif ( ! node.instanceIndex && this.node.bufferObject === true && isAssignContext !== true ) {\r\n\r\n\t\t\t\tsnippet = builder.generatePBO( this );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsnippet = node.build( builder );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tsnippet = super.generate( builder );\r\n\r\n\t\t}\r\n\r\n\t\tif ( isAssignContext !== true ) {\r\n\r\n\t\t\tconst type = this.getNodeType( builder );\r\n\r\n\t\t\tsnippet = builder.format( snippet, type, output );\r\n\r\n\t\t}\r\n\r\n\t\treturn snippet;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default StorageArrayElementNode;\r\n\r\nexport const storageElement = nodeProxy( StorageArrayElementNode );\r\n\r\naddNodeElement( 'storageElement', storageElement );\r\n\r\naddNodeClass( 'StorageArrayElementNode', StorageArrayElementNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { add } from '../math/OperatorNode.js';\r\nimport { normalLocal } from '../accessors/NormalNode.js';\r\nimport { positionLocal } from '../accessors/PositionNode.js';\r\nimport { texture } from '../accessors/TextureNode.js';\r\nimport { addNodeElement, nodeProxy, float, vec3 } from '../shadernode/ShaderNode.js';\r\n\r\nclass TriplanarTexturesNode extends Node {\r\n\r\n\tconstructor( textureXNode, textureYNode = null, textureZNode = null, scaleNode = float( 1 ), positionNode = positionLocal, normalNode = normalLocal ) {\r\n\r\n\t\tsuper( 'vec4' );\r\n\r\n\t\tthis.textureXNode = textureXNode;\r\n\t\tthis.textureYNode = textureYNode;\r\n\t\tthis.textureZNode = textureZNode;\r\n\r\n\t\tthis.scaleNode = scaleNode;\r\n\r\n\t\tthis.positionNode = positionNode;\r\n\t\tthis.normalNode = normalNode;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst { textureXNode, textureYNode, textureZNode, scaleNode, positionNode, normalNode } = this;\r\n\r\n\t\t// Ref: https://github.com/keijiro/StandardTriplanar\r\n\r\n\t\t// Blending factor of triplanar mapping\r\n\t\tlet bf = normalNode.abs().normalize();\r\n\t\tbf = bf.div( bf.dot( vec3( 1.0 ) ) );\r\n\r\n\t\t// Triplanar mapping\r\n\t\tconst tx = positionNode.yz.mul( scaleNode );\r\n\t\tconst ty = positionNode.zx.mul( scaleNode );\r\n\t\tconst tz = positionNode.xy.mul( scaleNode );\r\n\r\n\t\t// Base color\r\n\t\tconst textureX = textureXNode.value;\r\n\t\tconst textureY = textureYNode !== null ? textureYNode.value : textureX;\r\n\t\tconst textureZ = textureZNode !== null ? textureZNode.value : textureX;\r\n\r\n\t\tconst cx = texture( textureX, tx ).mul( bf.x );\r\n\t\tconst cy = texture( textureY, ty ).mul( bf.y );\r\n\t\tconst cz = texture( textureZ, tz ).mul( bf.z );\r\n\r\n\t\treturn add( cx, cy, cz );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default TriplanarTexturesNode;\r\n\r\nexport const triplanarTextures = nodeProxy( TriplanarTexturesNode );\r\nexport const triplanarTexture = ( ...params ) => triplanarTextures( ...params );\r\n\r\naddNodeElement( 'triplanarTexture', triplanarTexture );\r\n\r\naddNodeClass( 'TriplanarTexturesNode', TriplanarTexturesNode );\r\n", "import TextureNode from '../accessors/TextureNode.js';\r\nimport { nodeObject, vec2 } from '../shadernode/ShaderNode.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { viewportTopLeft } from '../display/ViewportNode.js';\r\nimport { Matrix4, Vector2, Vector3, Vector4, Object3D, Plane, RenderTarget, HalfFloatType, LinearMipMapLinearFilter } from 'three';\r\n\r\nconst _reflectorPlane = new Plane();\r\nconst _normal = new Vector3();\r\nconst _reflectorWorldPosition = new Vector3();\r\nconst _cameraWorldPosition = new Vector3();\r\nconst _rotationMatrix = new Matrix4();\r\nconst _lookAtPosition = new Vector3( 0, 0, - 1 );\r\nconst clipPlane = new Vector4();\r\n\r\nconst _view = new Vector3();\r\nconst _target = new Vector3();\r\nconst _q = new Vector4();\r\n\r\nconst _size = new Vector2();\r\n\r\nconst _defaultRT = new RenderTarget();\r\nconst _defaultUV = vec2( viewportTopLeft.x.oneMinus(), viewportTopLeft.y );\r\n\r\nlet _inReflector = false;\r\n\r\nclass ReflectorNode extends TextureNode {\r\n\r\n\tconstructor( parameters = {} ) {\r\n\r\n\t\tsuper( _defaultRT.texture, _defaultUV );\r\n\r\n\t\tconst {\r\n\t\t\ttarget = new Object3D(),\r\n\t\t\tresolution = 1,\r\n\t\t\tgenerateMipmaps = false,\r\n\t\t\tbounces = true\r\n\t\t} = parameters;\r\n\r\n\t\t//\r\n\r\n\t\tthis.target = target;\r\n\t\tthis.resolution = resolution;\r\n\t\tthis.generateMipmaps = generateMipmaps;\r\n\t\tthis.bounces = bounces;\r\n\r\n\t\tthis.updateBeforeType = bounces ? NodeUpdateType.RENDER : NodeUpdateType.FRAME;\r\n\r\n\t\tthis.virtualCameras = new WeakMap();\r\n\t\tthis.renderTargets = new WeakMap();\r\n\r\n\r\n\t}\r\n\r\n\t_updateResolution( renderTarget, renderer ) {\r\n\r\n\t\tconst resolution = this.resolution;\r\n\r\n\t\trenderer.getDrawingBufferSize( _size );\r\n\r\n\t\trenderTarget.setSize( Math.round( _size.width * resolution ), Math.round( _size.height * resolution ) );\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tthis._updateResolution( _defaultRT, builder.renderer );\r\n\r\n\t\treturn super.setup( builder );\r\n\r\n\t}\r\n\r\n\tgetTextureNode() {\r\n\r\n\t\treturn this.textureNode;\r\n\r\n\t}\r\n\r\n\tgetVirtualCamera( camera ) {\r\n\r\n\t\tlet virtualCamera = this.virtualCameras.get( camera );\r\n\r\n\t\tif ( virtualCamera === undefined ) {\r\n\r\n\t\t\tvirtualCamera = camera.clone();\r\n\r\n\t\t\tthis.virtualCameras.set( camera, virtualCamera );\r\n\r\n\t\t}\r\n\r\n\t\treturn virtualCamera;\r\n\r\n\t}\r\n\r\n\tgetRenderTarget( camera ) {\r\n\r\n\t\tlet renderTarget = this.renderTargets.get( camera );\r\n\r\n\t\tif ( renderTarget === undefined ) {\r\n\r\n\t\t\trenderTarget = new RenderTarget( 0, 0, { type: HalfFloatType } );\r\n\r\n\t\t\tif ( this.generateMipmaps === true ) {\r\n\r\n\t\t\t    renderTarget.texture.minFilter = LinearMipMapLinearFilter;\r\n\t\t\t    renderTarget.texture.generateMipmaps = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderTargets.set( camera, renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\treturn renderTarget;\r\n\r\n\t}\r\n\r\n\tupdateBefore( frame ) {\r\n\r\n\t\tif ( this.bounces === false && _inReflector ) return false;\r\n\r\n\t\t_inReflector = true;\r\n\r\n\t\tconst { scene, camera, renderer, material } = frame;\r\n\t\tconst { target } = this;\r\n\r\n\t\tconst virtualCamera = this.getVirtualCamera( camera );\r\n\t\tconst renderTarget = this.getRenderTarget( virtualCamera );\r\n\r\n\t\trenderer.getDrawingBufferSize( _size );\r\n\r\n\t\tthis._updateResolution( renderTarget, renderer );\r\n\r\n\t\t//\r\n\r\n\t\t_reflectorWorldPosition.setFromMatrixPosition( target.matrixWorld );\r\n\t\t_cameraWorldPosition.setFromMatrixPosition( camera.matrixWorld );\r\n\r\n\t\t_rotationMatrix.extractRotation( target.matrixWorld );\r\n\r\n\t\t_normal.set( 0, 0, 1 );\r\n\t\t_normal.applyMatrix4( _rotationMatrix );\r\n\r\n\t\t_view.subVectors( _reflectorWorldPosition, _cameraWorldPosition );\r\n\r\n\t\t// Avoid rendering when reflector is facing away\r\n\r\n\t\tif ( _view.dot( _normal ) > 0 ) return;\r\n\r\n\t\t_view.reflect( _normal ).negate();\r\n\t\t_view.add( _reflectorWorldPosition );\r\n\r\n\t\t_rotationMatrix.extractRotation( camera.matrixWorld );\r\n\r\n\t\t_lookAtPosition.set( 0, 0, - 1 );\r\n\t\t_lookAtPosition.applyMatrix4( _rotationMatrix );\r\n\t\t_lookAtPosition.add( _cameraWorldPosition );\r\n\r\n\t\t_target.subVectors( _reflectorWorldPosition, _lookAtPosition );\r\n\t\t_target.reflect( _normal ).negate();\r\n\t\t_target.add( _reflectorWorldPosition );\r\n\r\n\t\t//\r\n\r\n\t\tvirtualCamera.coordinateSystem = camera.coordinateSystem;\r\n\t\tvirtualCamera.position.copy( _view );\r\n\t\tvirtualCamera.up.set( 0, 1, 0 );\r\n\t\tvirtualCamera.up.applyMatrix4( _rotationMatrix );\r\n\t\tvirtualCamera.up.reflect( _normal );\r\n\t\tvirtualCamera.lookAt( _target );\r\n\r\n\t\tvirtualCamera.near = camera.near;\r\n\t\tvirtualCamera.far = camera.far;\r\n\r\n\t\tvirtualCamera.updateMatrixWorld();\r\n\t\tvirtualCamera.projectionMatrix.copy( camera.projectionMatrix );\r\n\r\n\t\t// Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\r\n\t\t// Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\r\n\t\t_reflectorPlane.setFromNormalAndCoplanarPoint( _normal, _reflectorWorldPosition );\r\n\t\t_reflectorPlane.applyMatrix4( virtualCamera.matrixWorldInverse );\r\n\r\n\t\tclipPlane.set( _reflectorPlane.normal.x, _reflectorPlane.normal.y, _reflectorPlane.normal.z, _reflectorPlane.constant );\r\n\r\n\t\tconst projectionMatrix = virtualCamera.projectionMatrix;\r\n\r\n\t\t_q.x = ( Math.sign( clipPlane.x ) + projectionMatrix.elements[ 8 ] ) / projectionMatrix.elements[ 0 ];\r\n\t\t_q.y = ( Math.sign( clipPlane.y ) + projectionMatrix.elements[ 9 ] ) / projectionMatrix.elements[ 5 ];\r\n\t\t_q.z = - 1.0;\r\n\t\t_q.w = ( 1.0 + projectionMatrix.elements[ 10 ] ) / projectionMatrix.elements[ 14 ];\r\n\r\n\t\t// Calculate the scaled plane vector\r\n\t\tclipPlane.multiplyScalar( 1.0 / clipPlane.dot( _q ) );\r\n\r\n\t\tconst clipBias = 0;\r\n\r\n\t\t// Replacing the third row of the projection matrix\r\n\t\tprojectionMatrix.elements[ 2 ] = clipPlane.x;\r\n\t\tprojectionMatrix.elements[ 6 ] = clipPlane.y;\r\n\t\tprojectionMatrix.elements[ 10 ] = clipPlane.z - clipBias;\r\n\t\tprojectionMatrix.elements[ 14 ] = clipPlane.w;\r\n\r\n\t\t//\r\n\r\n\t\tthis.value = renderTarget.texture;\r\n\r\n\t\tmaterial.visible = false;\r\n\r\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\trenderer.setRenderTarget( renderTarget );\r\n\r\n\t\trenderer.render( scene, virtualCamera );\r\n\r\n\t\trenderer.setRenderTarget( currentRenderTarget );\r\n\r\n\t\tmaterial.visible = true;\r\n\r\n\t\t_inReflector = false;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport const reflector = ( parameters ) => nodeObject( new ReflectorNode( parameters ) );\r\n\r\nexport default ReflectorNode;\r\n\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { varying } from '../core/VaryingNode.js';\r\nimport { normalize } from '../math/MathNode.js';\r\nimport { cameraViewMatrix } from './CameraNode.js';\r\nimport { normalGeometry, normalLocal, normalView, normalWorld, transformedNormalView } from './NormalNode.js';\r\nimport { tangentGeometry, tangentLocal, tangentView, tangentWorld, transformedTangentView } from './TangentNode.js';\r\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\r\n\r\nclass BitangentNode extends Node {\r\n\r\n\tconstructor( scope = BitangentNode.LOCAL ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.scope = scope;\r\n\r\n\t}\r\n\r\n\tgetHash( /*builder*/ ) {\r\n\r\n\t\treturn `bitangent-${this.scope}`;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tlet crossNormalTangent;\r\n\r\n\t\tif ( scope === BitangentNode.GEOMETRY ) {\r\n\r\n\t\t\tcrossNormalTangent = normalGeometry.cross( tangentGeometry );\r\n\r\n\t\t} else if ( scope === BitangentNode.LOCAL ) {\r\n\r\n\t\t\tcrossNormalTangent = normalLocal.cross( tangentLocal );\r\n\r\n\t\t} else if ( scope === BitangentNode.VIEW ) {\r\n\r\n\t\t\tcrossNormalTangent = normalView.cross( tangentView );\r\n\r\n\t\t} else if ( scope === BitangentNode.WORLD ) {\r\n\r\n\t\t\tcrossNormalTangent = normalWorld.cross( tangentWorld );\r\n\r\n\t\t}\r\n\r\n\t\tconst vertexNode = crossNormalTangent.mul( tangentGeometry.w ).xyz;\r\n\r\n\t\tconst outputNode = normalize( varying( vertexNode ) );\r\n\r\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.scope = this.scope;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.scope = data.scope;\r\n\r\n\t}\r\n\r\n}\r\n\r\nBitangentNode.GEOMETRY = 'geometry';\r\nBitangentNode.LOCAL = 'local';\r\nBitangentNode.VIEW = 'view';\r\nBitangentNode.WORLD = 'world';\r\n\r\nexport default BitangentNode;\r\n\r\nexport const bitangentGeometry = nodeImmutable( BitangentNode, BitangentNode.GEOMETRY );\r\nexport const bitangentLocal = nodeImmutable( BitangentNode, BitangentNode.LOCAL );\r\nexport const bitangentView = nodeImmutable( BitangentNode, BitangentNode.VIEW );\r\nexport const bitangentWorld = nodeImmutable( BitangentNode, BitangentNode.WORLD );\r\nexport const transformedBitangentView = normalize( transformedNormalView.cross( transformedTangentView ).mul( tangentGeometry.w ) );\r\nexport const transformedBitangentWorld = normalize( transformedBitangentView.transformDirection( cameraViewMatrix ) );\r\n\r\naddNodeClass( 'BitangentNode', BitangentNode );\r\n", "import { bitangentView } from './BitangentNode.js';\r\nimport { normalView } from './NormalNode.js';\r\nimport { tangentView } from './TangentNode.js';\r\nimport { mat3 } from '../shadernode/ShaderNode.js';\r\nimport { positionViewDirection } from './PositionNode.js';\r\n\r\nexport const TBNViewMatrix = mat3( tangentView, bitangentView, normalView );\r\n\r\nexport const parallaxDirection = positionViewDirection.mul( TBNViewMatrix )/*.normalize()*/;\r\nexport const parallaxUV = ( uv, scale ) => uv.sub( parallaxDirection.mul( scale ) );\r\n", "import { addNodeClass } from '../core/Node.js';\r\nimport AttributeNode from '../core/AttributeNode.js';\r\nimport { nodeObject } from '../shadernode/ShaderNode.js';\r\nimport { Vector4 } from 'three';\r\n\r\nclass VertexColorNode extends AttributeNode {\r\n\r\n\tconstructor( index = 0 ) {\r\n\r\n\t\tsuper( null, 'vec4' );\r\n\r\n\t\tthis.isVertexColorNode = true;\r\n\r\n\t\tthis.index = index;\r\n\r\n\t}\r\n\r\n\tgetAttributeName( /*builder*/ ) {\r\n\r\n\t\tconst index = this.index;\r\n\r\n\t\treturn 'color' + ( index > 0 ? index : '' );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst attributeName = this.getAttributeName( builder );\r\n\t\tconst geometryAttribute = builder.hasGeometryAttribute( attributeName );\r\n\r\n\t\tlet result;\r\n\r\n\t\tif ( geometryAttribute === true ) {\r\n\r\n\t\t\tresult = super.generate( builder );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Vertex color fallback should be white\r\n\t\t\tresult = builder.generateConst( this.nodeType, new Vector4( 1, 1, 1, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.index = this.index;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.index = data.index;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default VertexColorNode;\r\n\r\nexport const vertexColor = ( ...params ) => nodeObject( new VertexColorNode( ...params ) );\r\n\r\naddNodeClass( 'VertexColorNode', VertexColorNode );\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { add, mul, div } from '../math/OperatorNode.js';\r\nimport { floor, ceil, fract, pow } from '../math/MathNode.js';\r\nimport { nodeProxy, addNodeElement, float, vec2, vec4, int } from '../shadernode/ShaderNode.js';\r\n\r\n// Mipped Bicubic Texture Filtering by N8\r\n// https://www.shadertoy.com/view/Dl2SDW\r\n\r\nconst bC = 1.0 / 6.0;\r\n\r\nconst w0 = ( a ) => mul( bC, mul( a, mul( a, a.negate().add( 3.0 ) ).sub( 3.0 ) ).add( 1.0 ) );\r\n\r\nconst w1 = ( a ) => mul( bC, mul( a, mul( a, mul( 3.0, a ).sub( 6.0 ) ) ).add( 4.0 ) );\r\n\r\nconst w2 = ( a ) => mul( bC, mul( a, mul( a, mul( - 3.0, a ).add( 3.0 ) ).add( 3.0 ) ).add( 1.0 ) );\r\n\r\nconst w3 = ( a ) => mul( bC, pow( a, 3 ) );\r\n\r\nconst g0 = ( a ) => w0( a ).add( w1( a ) );\r\n\r\nconst g1 = ( a ) => w2( a ).add( w3( a ) );\r\n\r\n// h0 and h1 are the two offset functions\r\nconst h0 = ( a ) => add( - 1.0, w1( a ).div( w0( a ).add( w1( a ) ) ) );\r\n\r\nconst h1 = ( a ) => add( 1.0, w3( a ).div( w2( a ).add( w3( a ) ) ) );\r\n\r\nconst bicubic = ( textureNode, texelSize, lod ) => {\r\n\r\n\tconst uv = textureNode.uvNode;\r\n\tconst uvScaled = mul( uv, texelSize.zw ).add( 0.5 );\r\n\r\n\tconst iuv = floor( uvScaled );\r\n\tconst fuv = fract( uvScaled );\r\n\r\n\tconst g0x = g0( fuv.x );\r\n\tconst g1x = g1( fuv.x );\r\n\tconst h0x = h0( fuv.x );\r\n\tconst h1x = h1( fuv.x );\r\n\tconst h0y = h0( fuv.y );\r\n\tconst h1y = h1( fuv.y );\r\n\r\n\tconst p0 = vec2( iuv.x.add( h0x ), iuv.y.add( h0y ) ).sub( 0.5 ).mul( texelSize.xy );\r\n\tconst p1 = vec2( iuv.x.add( h1x ), iuv.y.add( h0y ) ).sub( 0.5 ).mul( texelSize.xy );\r\n\tconst p2 = vec2( iuv.x.add( h0x ), iuv.y.add( h1y ) ).sub( 0.5 ).mul( texelSize.xy );\r\n\tconst p3 = vec2( iuv.x.add( h1x ), iuv.y.add( h1y ) ).sub( 0.5 ).mul( texelSize.xy );\r\n\r\n\tconst a = g0( fuv.y ).mul( add( g0x.mul( textureNode.uv( p0 ).level( lod ) ), g1x.mul( textureNode.uv( p1 ).level( lod ) ) ) );\r\n\tconst b = g1( fuv.y ).mul( add( g0x.mul( textureNode.uv( p2 ).level( lod ) ), g1x.mul( textureNode.uv( p3 ).level( lod ) ) ) );\r\n\r\n\treturn a.add( b );\r\n\r\n};\r\n\r\nconst textureBicubicMethod = ( textureNode, lodNode ) => {\r\n\r\n\tconst fLodSize = vec2( textureNode.size( int( lodNode ) ) );\r\n\tconst cLodSize = vec2( textureNode.size( int( lodNode.add( 1.0 ) ) ) );\r\n\tconst fLodSizeInv = div( 1.0, fLodSize );\r\n\tconst cLodSizeInv = div( 1.0, cLodSize );\r\n\tconst fSample = bicubic( textureNode, vec4( fLodSizeInv, fLodSize ), floor( lodNode ) );\r\n\tconst cSample = bicubic( textureNode, vec4( cLodSizeInv, cLodSize ), ceil( lodNode ) );\r\n\r\n\treturn fract( lodNode ).mix( fSample, cSample );\r\n\r\n};\r\n\r\nclass TextureBicubicNode extends TempNode {\r\n\r\n\tconstructor( textureNode, blurNode = float( 3 ) ) {\r\n\r\n\t\tsuper( 'vec4' );\r\n\r\n\t\tthis.textureNode = textureNode;\r\n\t\tthis.blurNode = blurNode;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\treturn textureBicubicMethod( this.textureNode, this.blurNode );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default TextureBicubicNode;\r\n\r\nexport const textureBicubic = nodeProxy( TextureBicubicNode );\r\n\r\naddNodeElement( 'bicubic', textureBicubic );\r\n\r\naddNodeClass( 'TextureBicubicNode', TextureBicubicNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\r\n\r\nclass PointUVNode extends Node {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( 'vec2' );\r\n\r\n\t\tthis.isPointUVNode = true;\r\n\r\n\t}\r\n\r\n\tgenerate( /*builder*/ ) {\r\n\r\n\t\treturn 'vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )';\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default PointUVNode;\r\n\r\nexport const pointUV = nodeImmutable( PointUVNode );\r\n\r\naddNodeClass( 'PointUVNode', PointUVNode );\r\n", "import Node from '../core/Node.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\r\nimport { reference } from './ReferenceNode.js';\r\n\r\nclass SceneNode extends Node {\r\n\r\n\tconstructor( scope = SceneNode.BACKGROUND_BLURRINESS, scene = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scope = scope;\r\n\t\tthis.scene = scene;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\t\tconst scene = this.scene !== null ? this.scene : builder.scene;\r\n\r\n\t\tlet output;\r\n\r\n\t\tif ( scope === SceneNode.BACKGROUND_BLURRINESS ) {\r\n\r\n\t\t\toutput = reference( 'backgroundBlurriness', 'float', scene );\r\n\r\n\t\t} else if ( scope === SceneNode.BACKGROUND_INTENSITY ) {\r\n\r\n\t\t\toutput = reference( 'backgroundIntensity', 'float', scene );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( 'THREE.SceneNode: Unknown scope:', scope );\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n}\r\n\r\nSceneNode.BACKGROUND_BLURRINESS = 'backgroundBlurriness';\r\nSceneNode.BACKGROUND_INTENSITY = 'backgroundIntensity';\r\n\r\nexport default SceneNode;\r\n\r\nexport const backgroundBlurriness = nodeImmutable( SceneNode, SceneNode.BACKGROUND_BLURRINESS );\r\nexport const backgroundIntensity = nodeImmutable( SceneNode, SceneNode.BACKGROUND_INTENSITY );\r\n\r\naddNodeClass( 'SceneNode', SceneNode );\r\n", "import BufferNode from './BufferNode.js';\r\nimport { bufferAttribute } from './BufferAttributeNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { nodeObject } from '../shadernode/ShaderNode.js';\r\nimport { varying } from '../core/VaryingNode.js';\r\nimport { storageElement } from '../utils/StorageArrayElementNode.js';\r\n\r\nclass StorageBufferNode extends BufferNode {\r\n\r\n\tconstructor( value, bufferType, bufferCount = 0 ) {\r\n\r\n\t\tsuper( value, bufferType, bufferCount );\r\n\r\n\t\tthis.isStorageBufferNode = true;\r\n\r\n\t\tthis.bufferObject = false;\r\n\r\n\t\tthis._attribute = null;\r\n\t\tthis._varying = null;\r\n\r\n\t}\r\n\r\n\tgetInputType( /*builder*/ ) {\r\n\r\n\t\treturn 'storageBuffer';\r\n\r\n\t}\r\n\r\n\telement( indexNode ) {\r\n\r\n\t\treturn storageElement( this, indexNode );\r\n\r\n\t}\r\n\r\n\tsetBufferObject( value ) {\r\n\r\n\t\tthis.bufferObject = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tif ( builder.isAvailable( 'storageBuffer' ) ) return super.generate( builder );\r\n\r\n\t\tconst nodeType = this.getNodeType( builder );\r\n\r\n\t\tif ( this._attribute === null ) {\r\n\r\n\t\t\tthis._attribute = bufferAttribute( this.value );\r\n\t\t\tthis._varying = varying( this._attribute );\r\n\r\n\t\t}\r\n\r\n\r\n\t\tconst output = this._varying.build( builder, nodeType );\r\n\r\n\t\tbuilder.registerTransform( output, this._attribute );\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default StorageBufferNode;\r\n\r\nexport const storage = ( value, type, count ) => nodeObject( new StorageBufferNode( value, type, count ) );\r\nexport const storageObject = ( value, type, count ) => nodeObject( new StorageBufferNode( value, type, count ).setBufferObject( true ) );\r\n\r\naddNodeClass( 'StorageBufferNode', StorageBufferNode );\r\n", "import { addNodeClass } from '../core/Node.js';\r\nimport TextureNode from './TextureNode.js';\r\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass TextureStoreNode extends TextureNode {\r\n\r\n\tconstructor( value, uvNode, storeNode = null ) {\r\n\r\n\t\tsuper( value, uvNode );\r\n\r\n\t\tthis.storeNode = storeNode;\r\n\r\n\t\tthis.isStoreTextureNode = true;\r\n\r\n\t}\r\n\r\n\tgetInputType( /*builder*/ ) {\r\n\r\n\t\treturn 'storageTexture';\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tsuper.setup( builder );\r\n\r\n\t\tconst properties = builder.getNodeProperties( this );\r\n\t\tproperties.storeNode = this.storeNode;\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tlet snippet;\r\n\r\n\t\tif ( this.storeNode !== null ) {\r\n\r\n\t\t\tsnippet = this.generateStore( builder );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tsnippet = super.generate( builder, output );\r\n\r\n\t\t}\r\n\r\n\t\treturn snippet;\r\n\r\n\t}\r\n\r\n\tgenerateStore( builder ) {\r\n\r\n\t\tconst properties = builder.getNodeProperties( this );\r\n\r\n\t\tconst { uvNode, storeNode } = properties;\r\n\r\n\t\tconst textureProperty = super.generate( builder, 'property' );\r\n\t\tconst uvSnippet = uvNode.build( builder, 'uvec2' );\r\n\t\tconst storeSnippet = storeNode.build( builder, 'vec4' );\r\n\r\n\t\tconst snippet = builder.generateTextureStore( builder, textureProperty, uvSnippet, storeSnippet );\r\n\r\n\t\tbuilder.addLineFlowCode( snippet );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default TextureStoreNode;\r\n\r\nconst textureStoreBase = nodeProxy( TextureStoreNode );\r\n\r\nexport const textureStore = ( value, uvNode, storeNode ) => {\r\n\r\n\tconst node = textureStoreBase( value, uvNode, storeNode );\r\n\r\n\tif ( storeNode !== null ) node.append();\r\n\r\n\treturn node;\r\n\r\n};\r\n\r\naddNodeClass( 'TextureStoreNode', TextureStoreNode );\r\n", "import ReferenceNode from './ReferenceNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { nodeObject } from '../shadernode/ShaderNode.js';\r\n\r\nclass UserDataNode extends ReferenceNode {\r\n\r\n\tconstructor( property, inputType, userData = null ) {\r\n\r\n\t\tsuper( property, inputType, userData );\r\n\r\n\t\tthis.userData = userData;\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tthis.reference = this.userData !== null ? this.userData : frame.object.userData;\r\n\r\n\t\tsuper.update( frame );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default UserDataNode;\r\n\r\nexport const userData = ( name, inputType, userData ) => nodeObject( new UserDataNode( name, inputType, userData ) );\r\n\r\naddNodeClass( 'UserDataNode', UserDataNode );\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { /*mix, step,*/ EPSILON } from '../math/MathNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, tslFn, nodeProxy, vec3 } from '../shadernode/ShaderNode.js';\r\n\r\nexport const BurnNode = tslFn( ( { base, blend } ) => {\r\n\r\n\tconst fn = ( c ) => blend[ c ].lessThan( EPSILON ).cond( blend[ c ], base[ c ].oneMinus().div( blend[ c ] ).oneMinus().max( 0 ) );\r\n\r\n\treturn vec3( fn( 'x' ), fn( 'y' ), fn( 'z' ) );\r\n\r\n} ).setLayout( {\r\n\tname: 'burnColor',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'base', type: 'vec3' },\r\n\t\t{ name: 'blend', type: 'vec3' }\r\n\t]\r\n} );\r\n\r\nexport const DodgeNode = tslFn( ( { base, blend } ) => {\r\n\r\n\tconst fn = ( c ) => blend[ c ].equal( 1.0 ).cond( blend[ c ], base[ c ].div( blend[ c ].oneMinus() ).max( 0 ) );\r\n\r\n\treturn vec3( fn( 'x' ), fn( 'y' ), fn( 'z' ) );\r\n\r\n} ).setLayout( {\r\n\tname: 'dodgeColor',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'base', type: 'vec3' },\r\n\t\t{ name: 'blend', type: 'vec3' }\r\n\t]\r\n} );\r\n\r\nexport const ScreenNode = tslFn( ( { base, blend } ) => {\r\n\r\n\tconst fn = ( c ) => base[ c ].oneMinus().mul( blend[ c ].oneMinus() ).oneMinus();\r\n\r\n\treturn vec3( fn( 'x' ), fn( 'y' ), fn( 'z' ) );\r\n\r\n} ).setLayout( {\r\n\tname: 'screenColor',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'base', type: 'vec3' },\r\n\t\t{ name: 'blend', type: 'vec3' }\r\n\t]\r\n} );\r\n\r\nexport const OverlayNode = tslFn( ( { base, blend } ) => {\r\n\r\n\tconst fn = ( c ) => base[ c ].lessThan( 0.5 ).cond( base[ c ].mul( blend[ c ], 2.0 ), base[ c ].oneMinus().mul( blend[ c ].oneMinus() ).oneMinus() );\r\n\t//const fn = ( c ) => mix( base[ c ].oneMinus().mul( blend[ c ].oneMinus() ).oneMinus(), base[ c ].mul( blend[ c ], 2.0 ), step( base[ c ], 0.5 ) );\r\n\r\n\treturn vec3( fn( 'x' ), fn( 'y' ), fn( 'z' ) );\r\n\r\n} ).setLayout( {\r\n\tname: 'overlayColor',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'base', type: 'vec3' },\r\n\t\t{ name: 'blend', type: 'vec3' }\r\n\t]\r\n} );\r\n\r\nclass BlendModeNode extends TempNode {\r\n\r\n\tconstructor( blendMode, baseNode, blendNode ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.blendMode = blendMode;\r\n\r\n\t\tthis.baseNode = baseNode;\r\n\t\tthis.blendNode = blendNode;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst { blendMode, baseNode, blendNode } = this;\r\n\t\tconst params = { base: baseNode, blend: blendNode };\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( blendMode === BlendModeNode.BURN ) {\r\n\r\n\t\t\toutputNode = BurnNode( params );\r\n\r\n\t\t} else if ( blendMode === BlendModeNode.DODGE ) {\r\n\r\n\t\t\toutputNode = DodgeNode( params );\r\n\r\n\t\t} else if ( blendMode === BlendModeNode.SCREEN ) {\r\n\r\n\t\t\toutputNode = ScreenNode( params );\r\n\r\n\t\t} else if ( blendMode === BlendModeNode.OVERLAY ) {\r\n\r\n\t\t\toutputNode = OverlayNode( params );\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode;\r\n\r\n\t}\r\n\r\n}\r\n\r\nBlendModeNode.BURN = 'burn';\r\nBlendModeNode.DODGE = 'dodge';\r\nBlendModeNode.SCREEN = 'screen';\r\nBlendModeNode.OVERLAY = 'overlay';\r\n\r\nexport default BlendModeNode;\r\n\r\nexport const burn = nodeProxy( BlendModeNode, BlendModeNode.BURN );\r\nexport const dodge = nodeProxy( BlendModeNode, BlendModeNode.DODGE );\r\nexport const overlay = nodeProxy( BlendModeNode, BlendModeNode.OVERLAY );\r\nexport const screen = nodeProxy( BlendModeNode, BlendModeNode.SCREEN );\r\n\r\naddNodeElement( 'burn', burn );\r\naddNodeElement( 'dodge', dodge );\r\naddNodeElement( 'overlay', overlay );\r\naddNodeElement( 'screen', screen );\r\n\r\naddNodeClass( 'BlendModeNode', BlendModeNode );\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { uv } from '../accessors/UVNode.js';\r\nimport { normalView } from '../accessors/NormalNode.js';\r\nimport { positionView } from '../accessors/PositionNode.js';\r\nimport { faceDirection } from './FrontFacingNode.js';\r\nimport { addNodeElement, tslFn, nodeProxy, float, vec2 } from '../shadernode/ShaderNode.js';\r\n\r\n// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\r\n// https://mmikk.github.io/papers3d/mm_sfgrad_bump.pdf\r\n\r\n// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\r\n\r\nconst dHdxy_fwd = tslFn( ( { textureNode, bumpScale } ) => {\r\n\r\n\tlet texNode = textureNode;\r\n\r\n\tif ( texNode.isTextureNode !== true ) {\r\n\r\n\t\ttexNode.traverse( ( node ) => {\r\n\r\n\t\t\tif ( node.isTextureNode === true ) texNode = node;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tif ( texNode.isTextureNode !== true ) {\r\n\r\n\t\tthrow new Error( 'THREE.TSL: dHdxy_fwd() requires a TextureNode.' );\r\n\r\n\t}\r\n\r\n\tconst Hll = float( textureNode );\r\n\tconst uvNode = texNode.uvNode || uv();\r\n\r\n\t// It's used to preserve the same TextureNode instance\r\n\tconst sampleTexture = ( uv ) => textureNode.cache().context( { getUV: () => uv, forceUVContext: true } );\r\n\r\n\treturn vec2(\r\n\t\tfloat( sampleTexture( uvNode.add( uvNode.dFdx() ) ) ).sub( Hll ),\r\n\t\tfloat( sampleTexture( uvNode.add( uvNode.dFdy() ) ) ).sub( Hll )\r\n\t).mul( bumpScale );\r\n\r\n} );\r\n\r\nconst perturbNormalArb = tslFn( ( inputs ) => {\r\n\r\n\tconst { surf_pos, surf_norm, dHdxy } = inputs;\r\n\r\n\t// normalize is done to ensure that the bump map looks the same regardless of the texture's scale\r\n\tconst vSigmaX = surf_pos.dFdx().normalize();\r\n\tconst vSigmaY = surf_pos.dFdy().normalize();\r\n\tconst vN = surf_norm; // normalized\r\n\r\n\tconst R1 = vSigmaY.cross( vN );\r\n\tconst R2 = vN.cross( vSigmaX );\r\n\r\n\tconst fDet = vSigmaX.dot( R1 ).mul( faceDirection );\r\n\r\n\tconst vGrad = fDet.sign().mul( dHdxy.x.mul( R1 ).add( dHdxy.y.mul( R2 ) ) );\r\n\r\n\treturn fDet.abs().mul( surf_norm ).sub( vGrad ).normalize();\r\n\r\n} );\r\n\r\nclass BumpMapNode extends TempNode {\r\n\r\n\tconstructor( textureNode, scaleNode = null ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.textureNode = textureNode;\r\n\t\tthis.scaleNode = scaleNode;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst bumpScale = this.scaleNode !== null ? this.scaleNode : 1;\r\n\t\tconst dHdxy = dHdxy_fwd( { textureNode: this.textureNode, bumpScale } );\r\n\r\n\t\treturn perturbNormalArb( {\r\n\t\t\tsurf_pos: positionView,\r\n\t\t\tsurf_norm: normalView,\r\n\t\t\tdHdxy\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default BumpMapNode;\r\n\r\nexport const bumpMap = nodeProxy( BumpMapNode );\r\n\r\naddNodeElement( 'bumpMap', bumpMap );\r\n\r\naddNodeClass( 'BumpMapNode', BumpMapNode );\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { dot, mix } from '../math/MathNode.js';\r\nimport { add } from '../math/OperatorNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, tslFn, nodeProxy, float, vec3 } from '../shadernode/ShaderNode.js';\r\n\r\nconst saturationNode = tslFn( ( { color, adjustment } ) => {\r\n\r\n\treturn adjustment.mix( luminance( color.rgb ), color.rgb );\r\n\r\n} );\r\n\r\nconst vibranceNode = tslFn( ( { color, adjustment } ) => {\r\n\r\n\tconst average = add( color.r, color.g, color.b ).div( 3.0 );\r\n\r\n\tconst mx = color.r.max( color.g.max( color.b ) );\r\n\tconst amt = mx.sub( average ).mul( adjustment ).mul( - 3.0 );\r\n\r\n\treturn mix( color.rgb, mx, amt );\r\n\r\n} );\r\n\r\nconst hueNode = tslFn( ( { color, adjustment } ) => {\r\n\r\n\tconst k = vec3( 0.57735, 0.57735, 0.57735 );\r\n\r\n\tconst cosAngle = adjustment.cos();\r\n\r\n\treturn vec3( color.rgb.mul( cosAngle ).add( k.cross( color.rgb ).mul( adjustment.sin() ).add( k.mul( dot( k, color.rgb ).mul( cosAngle.oneMinus() ) ) ) ) );\r\n\r\n} );\r\n\r\nclass ColorAdjustmentNode extends TempNode {\r\n\r\n\tconstructor( method, colorNode, adjustmentNode = float( 1 ) ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.method = method;\r\n\r\n\t\tthis.colorNode = colorNode;\r\n\t\tthis.adjustmentNode = adjustmentNode;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst { method, colorNode, adjustmentNode } = this;\r\n\r\n\t\tconst callParams = { color: colorNode, adjustment: adjustmentNode };\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( method === ColorAdjustmentNode.SATURATION ) {\r\n\r\n\t\t\toutputNode = saturationNode( callParams );\r\n\r\n\t\t} else if ( method === ColorAdjustmentNode.VIBRANCE ) {\r\n\r\n\t\t\toutputNode = vibranceNode( callParams );\r\n\r\n\t\t} else if ( method === ColorAdjustmentNode.HUE ) {\r\n\r\n\t\t\toutputNode = hueNode( callParams );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( `${ this.type }: Method \"${ this.method }\" not supported!` );\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode;\r\n\r\n\t}\r\n\r\n}\r\n\r\nColorAdjustmentNode.SATURATION = 'saturation';\r\nColorAdjustmentNode.VIBRANCE = 'vibrance';\r\nColorAdjustmentNode.HUE = 'hue';\r\n\r\nexport default ColorAdjustmentNode;\r\n\r\nexport const saturation = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.SATURATION );\r\nexport const vibrance = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.VIBRANCE );\r\nexport const hue = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.HUE );\r\n\r\nexport const lumaCoeffs = vec3( 0.2125, 0.7154, 0.0721 );\r\nexport const luminance = ( color, luma = lumaCoeffs ) => dot( color, luma );\r\n\r\nexport const threshold = ( color, threshold ) => mix( vec3( 0.0 ), color, luminance( color ).sub( threshold ).max( 0 ) );\r\n\r\naddNodeElement( 'saturation', saturation );\r\naddNodeElement( 'vibrance', vibrance );\r\naddNodeElement( 'hue', hue );\r\naddNodeElement( 'threshold', threshold );\r\n\r\naddNodeClass( 'ColorAdjustmentNode', ColorAdjustmentNode );\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { add } from '../math/OperatorNode.js';\r\n\r\nimport { modelNormalMatrix } from '../accessors/ModelNode.js';\r\nimport { normalView } from '../accessors/NormalNode.js';\r\nimport { positionView } from '../accessors/PositionNode.js';\r\nimport { TBNViewMatrix } from '../accessors/AccessorsUtils.js';\r\nimport { uv } from '../accessors/UVNode.js';\r\nimport { faceDirection } from './FrontFacingNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, tslFn, nodeProxy, vec3 } from '../shadernode/ShaderNode.js';\r\n\r\nimport { TangentSpaceNormalMap, ObjectSpaceNormalMap } from 'three';\r\n\r\n// Normal Mapping Without Precomputed Tangents\r\n// http://www.thetenthplanet.de/archives/1180\r\n\r\nconst perturbNormal2Arb = tslFn( ( inputs ) => {\r\n\r\n\tconst { eye_pos, surf_norm, mapN, uv } = inputs;\r\n\r\n\tconst q0 = eye_pos.dFdx();\r\n\tconst q1 = eye_pos.dFdy();\r\n\tconst st0 = uv.dFdx();\r\n\tconst st1 = uv.dFdy();\r\n\r\n\tconst N = surf_norm; // normalized\r\n\r\n\tconst q1perp = q1.cross( N );\r\n\tconst q0perp = N.cross( q0 );\r\n\r\n\tconst T = q1perp.mul( st0.x ).add( q0perp.mul( st1.x ) );\r\n\tconst B = q1perp.mul( st0.y ).add( q0perp.mul( st1.y ) );\r\n\r\n\tconst det = T.dot( T ).max( B.dot( B ) );\r\n\tconst scale = faceDirection.mul( det.inverseSqrt() );\r\n\r\n\treturn add( T.mul( mapN.x, scale ), B.mul( mapN.y, scale ), N.mul( mapN.z ) ).normalize();\r\n\r\n} );\r\n\r\nclass NormalMapNode extends TempNode {\r\n\r\n\tconstructor( node, scaleNode = null ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.scaleNode = scaleNode;\r\n\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst { normalMapType, scaleNode } = this;\r\n\r\n\t\tlet normalMap = this.node.mul( 2.0 ).sub( 1.0 );\r\n\r\n\t\tif ( scaleNode !== null ) {\r\n\r\n\t\t\tnormalMap = vec3( normalMap.xy.mul( scaleNode ), normalMap.z );\r\n\r\n\t\t}\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( normalMapType === ObjectSpaceNormalMap ) {\r\n\r\n\t\t\toutputNode = modelNormalMatrix.mul( normalMap ).normalize();\r\n\r\n\t\t} else if ( normalMapType === TangentSpaceNormalMap ) {\r\n\r\n\t\t\tconst tangent = builder.hasGeometryAttribute( 'tangent' );\r\n\r\n\t\t\tif ( tangent === true ) {\r\n\r\n\t\t\t\toutputNode = TBNViewMatrix.mul( normalMap ).normalize();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\toutputNode = perturbNormal2Arb( {\r\n\t\t\t\t\teye_pos: positionView,\r\n\t\t\t\t\tsurf_norm: normalView,\r\n\t\t\t\t\tmapN: normalMap,\r\n\t\t\t\t\tuv: uv()\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NormalMapNode;\r\n\r\nexport const normalMap = nodeProxy( NormalMapNode );\r\n\r\naddNodeElement( 'normalMap', normalMap );\r\n\r\naddNodeClass( 'NormalMapNode', NormalMapNode );\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass PosterizeNode extends TempNode {\r\n\r\n\tconstructor( sourceNode, stepsNode ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.sourceNode = sourceNode;\r\n\t\tthis.stepsNode = stepsNode;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst { sourceNode, stepsNode } = this;\r\n\r\n\t\treturn sourceNode.mul( stepsNode ).floor().div( stepsNode );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default PosterizeNode;\r\n\r\nexport const posterize = nodeProxy( PosterizeNode );\r\n\r\naddNodeElement( 'posterize', posterize );\r\n\r\naddNodeClass( 'PosterizeNode', PosterizeNode );\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { tslFn, nodeObject, float, mat3, vec3 } from '../shadernode/ShaderNode.js';\r\n\r\nimport { NoToneMapping, LinearToneMapping, ReinhardToneMapping, CineonToneMapping, ACESFilmicToneMapping, AgXToneMapping } from 'three';\r\nimport { clamp, log2, max, pow } from '../math/MathNode.js';\r\nimport { mul } from '../math/OperatorNode.js';\r\n\r\n// exposure only\r\nconst LinearToneMappingNode = tslFn( ( { color, exposure } ) => {\r\n\r\n\treturn color.mul( exposure ).clamp();\r\n\r\n} );\r\n\r\n// source: https://www.cs.utah.edu/docs/techreports/2002/pdf/UUCS-02-001.pdf\r\nconst ReinhardToneMappingNode = tslFn( ( { color, exposure } ) => {\r\n\r\n\tcolor = color.mul( exposure );\r\n\r\n\treturn color.div( color.add( 1.0 ) ).clamp();\r\n\r\n} );\r\n\r\n// source: http://filmicworlds.com/blog/filmic-tonemapping-operators/\r\nconst OptimizedCineonToneMappingNode = tslFn( ( { color, exposure } ) => {\r\n\r\n\t// optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\r\n\tcolor = color.mul( exposure );\r\n\tcolor = color.sub( 0.004 ).max( 0.0 );\r\n\r\n\tconst a = color.mul( color.mul( 6.2 ).add( 0.5 ) );\r\n\tconst b = color.mul( color.mul( 6.2 ).add( 1.7 ) ).add( 0.06 );\r\n\r\n\treturn a.div( b ).pow( 2.2 );\r\n\r\n} );\r\n\r\n// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\r\nconst RRTAndODTFit = tslFn( ( { color } ) => {\r\n\r\n\tconst a = color.mul( color.add( 0.0245786 ) ).sub( 0.000090537 );\r\n\tconst b = color.mul( color.add( 0.4329510 ).mul( 0.983729 ) ).add( 0.238081 );\r\n\r\n\treturn a.div( b );\r\n\r\n} );\r\n\r\n// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\r\nconst ACESFilmicToneMappingNode = tslFn( ( { color, exposure } ) => {\r\n\r\n\t// sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\r\n\tconst ACESInputMat = mat3(\r\n\t\t0.59719, 0.35458, 0.04823,\r\n\t\t0.07600, 0.90834, 0.01566,\r\n\t\t0.02840, 0.13383, 0.83777\r\n\t);\r\n\r\n\t// ODT_SAT => XYZ => D60_2_D65 => sRGB\r\n\tconst ACESOutputMat = mat3(\r\n\t\t1.60475, - 0.53108, - 0.07367,\r\n\t\t- 0.10208, 1.10813, - 0.00605,\r\n\t\t- 0.00327, - 0.07276, 1.07602\r\n\t);\r\n\r\n\tcolor = color.mul( exposure ).div( 0.6 );\r\n\r\n\tcolor = ACESInputMat.mul( color );\r\n\r\n\t// Apply RRT and ODT\r\n\tcolor = RRTAndODTFit( { color } );\r\n\r\n\tcolor = ACESOutputMat.mul( color );\r\n\r\n\t// Clamp to [0, 1]\r\n\treturn color.clamp();\r\n\r\n} );\r\n\r\n\r\n\r\nconst LINEAR_REC2020_TO_LINEAR_SRGB = mat3( vec3( 1.6605, - 0.1246, - 0.0182 ), vec3( - 0.5876, 1.1329, - 0.1006 ), vec3( - 0.0728, - 0.0083, 1.1187 ) );\r\nconst LINEAR_SRGB_TO_LINEAR_REC2020 = mat3( vec3( 0.6274, 0.0691, 0.0164 ), vec3( 0.3293, 0.9195, 0.0880 ), vec3( 0.0433, 0.0113, 0.8956 ) );\r\n\r\nconst agxDefaultContrastApprox = tslFn( ( [ x_immutable ] ) => {\r\n\r\n\tconst x = vec3( x_immutable ).toVar();\r\n\tconst x2 = vec3( x.mul( x ) ).toVar();\r\n\tconst x4 = vec3( x2.mul( x2 ) ).toVar();\r\n\r\n\treturn float( 15.5 ).mul( x4.mul( x2 ) ).sub( mul( 40.14, x4.mul( x ) ) ).add( mul( 31.96, x4 ).sub( mul( 6.868, x2.mul( x ) ) ).add( mul( 0.4298, x2 ).add( mul( 0.1191, x ).sub( 0.00232 ) ) ) );\r\n\r\n} );\r\n\r\nconst AGXToneMappingNode = tslFn( ( { color, exposure } ) => {\r\n\r\n\tconst colortone = vec3( color ).toVar();\r\n\tconst AgXInsetMatrix = mat3( vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ), vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ), vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 ) );\r\n\tconst AgXOutsetMatrix = mat3( vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ), vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ), vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 ) );\r\n\tconst AgxMinEv = float( - 12.47393 );\r\n\tconst AgxMaxEv = float( 4.026069 );\r\n\tcolortone.mulAssign( exposure );\r\n\tcolortone.assign( LINEAR_SRGB_TO_LINEAR_REC2020.mul( colortone ) );\r\n\tcolortone.assign( AgXInsetMatrix.mul( colortone ) );\r\n\tcolortone.assign( max( colortone, 1e-10 ) );\r\n\tcolortone.assign( log2( colortone ) );\r\n\tcolortone.assign( colortone.sub( AgxMinEv ).div( AgxMaxEv.sub( AgxMinEv ) ) );\r\n\tcolortone.assign( clamp( colortone, 0.0, 1.0 ) );\r\n\tcolortone.assign( agxDefaultContrastApprox( colortone ) );\r\n\tcolortone.assign( AgXOutsetMatrix.mul( colortone ) );\r\n\tcolortone.assign( pow( max( vec3( 0.0 ), colortone ), vec3( 2.2 ) ) );\r\n\tcolortone.assign( LINEAR_REC2020_TO_LINEAR_SRGB.mul( colortone ) );\r\n\tcolortone.assign( clamp( colortone, 0.0, 1.0 ) );\r\n\r\n\treturn colortone;\r\n\r\n} );\r\n\r\n\r\nconst toneMappingLib = {\r\n\t[ LinearToneMapping ]: LinearToneMappingNode,\r\n\t[ ReinhardToneMapping ]: ReinhardToneMappingNode,\r\n\t[ CineonToneMapping ]: OptimizedCineonToneMappingNode,\r\n\t[ ACESFilmicToneMapping ]: ACESFilmicToneMappingNode,\r\n\t[ AgXToneMapping ]: AGXToneMappingNode\r\n};\r\n\r\nclass ToneMappingNode extends TempNode {\r\n\r\n\tconstructor( toneMapping = NoToneMapping, exposureNode = float( 1 ), colorNode = null ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.toneMapping = toneMapping;\r\n\r\n\t\tthis.exposureNode = exposureNode;\r\n\t\tthis.colorNode = colorNode;\r\n\r\n\t}\r\n\r\n\tgetCacheKey() {\r\n\r\n\t\tlet cacheKey = super.getCacheKey();\r\n\t\tcacheKey = '{toneMapping:' + this.toneMapping + ',nodes:' + cacheKey + '}';\r\n\r\n\t\treturn cacheKey;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst colorNode = this.colorNode || builder.context.color;\r\n\t\tconst toneMapping = this.toneMapping;\r\n\r\n\t\tif ( toneMapping === NoToneMapping ) return colorNode;\r\n\r\n\t\tconst toneMappingParams = { exposure: this.exposureNode, color: colorNode };\r\n\t\tconst toneMappingNode = toneMappingLib[ toneMapping ];\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( toneMappingNode ) {\r\n\r\n\t\t\toutputNode = toneMappingNode( toneMappingParams );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( 'ToneMappingNode: Unsupported Tone Mapping configuration.', toneMapping );\r\n\r\n\t\t\toutputNode = colorNode;\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ToneMappingNode;\r\n\r\nexport const toneMapping = ( mapping, exposure, color ) => nodeObject( new ToneMappingNode( mapping, nodeObject( exposure ), nodeObject( color ) ) );\r\n\r\naddNodeClass( 'ToneMappingNode', ToneMappingNode );\r\n", "import ViewportTextureNode from './ViewportTextureNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\nimport { viewportTopLeft } from './ViewportNode.js';\r\nimport { FramebufferTexture } from 'three';\r\n\r\nlet _sharedFramebuffer = null;\r\n\r\nclass ViewportSharedTextureNode extends ViewportTextureNode {\r\n\r\n\tconstructor( uvNode = viewportTopLeft, levelNode = null ) {\r\n\r\n\t\tif ( _sharedFramebuffer === null ) {\r\n\r\n\t\t\t_sharedFramebuffer = new FramebufferTexture();\r\n\r\n\t\t}\r\n\r\n\t\tsuper( uvNode, levelNode, _sharedFramebuffer );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ViewportSharedTextureNode;\r\n\r\nexport const viewportSharedTexture = nodeProxy( ViewportSharedTextureNode );\r\n\r\naddNodeElement( 'viewportSharedTexture', viewportSharedTexture );\r\n\r\naddNodeClass( 'ViewportSharedTextureNode', ViewportSharedTextureNode );\r\n", "import { addNodeClass } from '../core/Node.js';\r\nimport TempNode from '../core/TempNode.js';\r\nimport TextureNode from '../accessors/TextureNode.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { nodeObject } from '../shadernode/ShaderNode.js';\r\nimport { uniform } from '../core/UniformNode.js';\r\nimport { viewZToOrthographicDepth, perspectiveDepthToViewZ } from './ViewportDepthNode.js';\r\nimport { RenderTarget, Vector2, HalfFloatType, DepthTexture, NoToneMapping/*, FloatType*/ } from 'three';\r\n\r\nclass PassTextureNode extends TextureNode {\r\n\r\n\tconstructor( passNode, texture ) {\r\n\r\n\t\tsuper( texture );\r\n\r\n\t\tthis.passNode = passNode;\r\n\r\n\t\tthis.setUpdateMatrix( false );\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tthis.passNode.build( builder );\r\n\r\n\t\treturn super.setup( builder );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.passNode, this.value );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass PassNode extends TempNode {\r\n\r\n\tconstructor( scope, scene, camera ) {\r\n\r\n\t\tsuper( 'vec4' );\r\n\r\n\t\tthis.scope = scope;\r\n\t\tthis.scene = scene;\r\n\t\tthis.camera = camera;\r\n\r\n\t\tthis._pixelRatio = 1;\r\n\t\tthis._width = 1;\r\n\t\tthis._height = 1;\r\n\r\n\t\tconst depthTexture = new DepthTexture();\r\n\t\tdepthTexture.isRenderTargetTexture = true;\r\n\t\t//depthTexture.type = FloatType;\r\n\t\tdepthTexture.name = 'PostProcessingDepth';\r\n\r\n\t\tconst renderTarget = new RenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, { type: HalfFloatType } );\r\n\t\trenderTarget.texture.name = 'PostProcessing';\r\n\t\trenderTarget.depthTexture = depthTexture;\r\n\r\n\t\tthis.renderTarget = renderTarget;\r\n\r\n\t\tthis.updateBeforeType = NodeUpdateType.FRAME;\r\n\r\n\t\tthis._textureNode = nodeObject( new PassTextureNode( this, renderTarget.texture ) );\r\n\t\tthis._depthTextureNode = nodeObject( new PassTextureNode( this, depthTexture ) );\r\n\r\n\t\tthis._depthNode = null;\r\n\t\tthis._cameraNear = uniform( 0 );\r\n\t\tthis._cameraFar = uniform( 0 );\r\n\r\n\t\tthis.isPassNode = true;\r\n\r\n\t}\r\n\r\n\tisGlobal() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tgetTextureNode() {\r\n\r\n\t\treturn this._textureNode;\r\n\r\n\t}\r\n\r\n\tgetTextureDepthNode() {\r\n\r\n\t\treturn this._depthTextureNode;\r\n\r\n\t}\r\n\r\n\tgetDepthNode() {\r\n\r\n\t\tif ( this._depthNode === null ) {\r\n\r\n\t\t\tconst cameraNear = this._cameraNear;\r\n\t\t\tconst cameraFar = this._cameraFar;\r\n\r\n\t\t\tthis._depthNode = viewZToOrthographicDepth( perspectiveDepthToViewZ( this._depthTextureNode, cameraNear, cameraFar ), cameraNear, cameraFar );\r\n\r\n\t\t}\r\n\r\n\t\treturn this._depthNode;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\treturn this.scope === PassNode.COLOR ? this.getTextureNode() : this.getDepthNode();\r\n\r\n\t}\r\n\r\n\tupdateBefore( frame ) {\r\n\r\n\t\tconst { renderer } = frame;\r\n\t\tconst { scene, camera } = this;\r\n\r\n\t\tthis._pixelRatio = renderer.getPixelRatio();\r\n\r\n\t\tconst size = renderer.getSize( new Vector2() );\r\n\r\n\t\tthis.setSize( size.width, size.height );\r\n\r\n\t\tconst currentToneMapping = renderer.toneMapping;\r\n\t\tconst currentToneMappingNode = renderer.toneMappingNode;\r\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\tthis._cameraNear.value = camera.near;\r\n\t\tthis._cameraFar.value = camera.far;\r\n\r\n\t\trenderer.toneMapping = NoToneMapping;\r\n\t\trenderer.toneMappingNode = null;\r\n\t\trenderer.setRenderTarget( this.renderTarget );\r\n\r\n\t\trenderer.render( scene, camera );\r\n\r\n\t\trenderer.toneMapping = currentToneMapping;\r\n\t\trenderer.toneMappingNode = currentToneMappingNode;\r\n\t\trenderer.setRenderTarget( currentRenderTarget );\r\n\r\n\t}\r\n\r\n\tsetSize( width, height ) {\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\r\n\t\tconst effectiveWidth = this._width * this._pixelRatio;\r\n\t\tconst effectiveHeight = this._height * this._pixelRatio;\r\n\r\n\t\tthis.renderTarget.setSize( effectiveWidth, effectiveHeight );\r\n\r\n\t}\r\n\r\n\tsetPixelRatio( pixelRatio ) {\r\n\r\n\t\tthis._pixelRatio = pixelRatio;\r\n\r\n\t\tthis.setSize( this._width, this._height );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.renderTarget.dispose();\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nPassNode.COLOR = 'color';\r\nPassNode.DEPTH = 'depth';\r\n\r\nexport default PassNode;\r\n\r\nexport const pass = ( scene, camera ) => nodeObject( new PassNode( PassNode.COLOR, scene, camera ) );\r\nexport const texturePass = ( pass, texture ) => nodeObject( new PassTextureNode( pass, texture ) );\r\nexport const depthPass = ( scene, camera ) => nodeObject( new PassNode( PassNode.DEPTH, scene, camera ) );\r\n\r\naddNodeClass( 'PassNode', PassNode );\r\n", "import { BufferGeometry, Float32BufferAttribute, Mesh, OrthographicCamera } from 'three';\r\n\r\n// Helper for passes that need to fill the viewport with a single quad.\r\n\r\nconst _camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\r\n// https://github.com/mrdoob/three.js/pull/21358\r\n\r\nclass QuadGeometry extends BufferGeometry {\r\n\r\n\tconstructor( flipY = false ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst uv = flipY === false ? [ 0, - 1, 0, 1, 2, 1 ] : [ 0, 2, 0, 0, 2, 0 ];\r\n\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( [ - 1, 3, 0, - 1, - 1, 0, 3, - 1, 0 ], 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uv, 2 ) );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _geometry = new QuadGeometry();\r\n\r\nclass QuadMesh {\r\n\r\n\tconstructor( material = null ) {\r\n\r\n\t\tthis._mesh = new Mesh( _geometry, material );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis._mesh.geometry.dispose();\r\n\r\n\t}\r\n\r\n\tasync renderAsync( renderer ) {\r\n\r\n\t\tawait renderer.renderAsync( this._mesh, _camera );\r\n\r\n\t}\r\n\r\n\tget material() {\r\n\r\n\t\treturn this._mesh.material;\r\n\r\n\t}\r\n\r\n\tset material( value ) {\r\n\r\n\t\tthis._mesh.material = value;\r\n\r\n\t}\r\n\r\n\tget render() {\r\n\r\n\t\treturn this.renderAsync;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default QuadMesh;\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { nodeObject, addNodeElement, tslFn, float, vec2, vec4 } from '../shadernode/ShaderNode.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { mul } from '../math/OperatorNode.js';\r\nimport { uv } from '../accessors/UVNode.js';\r\nimport { texturePass } from './PassNode.js';\r\nimport { uniform } from '../core/UniformNode.js';\r\nimport { Vector2, RenderTarget } from 'three';\r\nimport QuadMesh from '../../objects/QuadMesh.js';\r\n\r\n// WebGPU: The use of a single QuadMesh for both gaussian blur passes results in a single RenderObject with a SampledTexture binding that\r\n// alternates between source textures and triggers creation of new BindGroups and BindGroupLayouts every frame.\r\n\r\nconst quadMesh1 = new QuadMesh();\r\nconst quadMesh2 = new QuadMesh();\r\n\r\nclass GaussianBlurNode extends TempNode {\r\n\r\n\tconstructor( textureNode, sigma = 2 ) {\r\n\r\n\t\tsuper( 'vec4' );\r\n\r\n\t\tthis.textureNode = textureNode;\r\n\t\tthis.sigma = sigma;\r\n\r\n\t\tthis.directionNode = vec2( 1 );\r\n\r\n\t\tthis._invSize = uniform( new Vector2() );\r\n\t\tthis._passDirection = uniform( new Vector2() );\r\n\r\n\t\tthis._horizontalRT = new RenderTarget();\r\n\t\tthis._horizontalRT.texture.name = 'GaussianBlurNode.horizontal';\r\n\t\tthis._verticalRT = new RenderTarget();\r\n\t\tthis._verticalRT.texture.name = 'GaussianBlurNode.vertical';\r\n\r\n\t\tthis._textureNode = texturePass( this, this._verticalRT.texture );\r\n\r\n\t\tthis.updateBeforeType = NodeUpdateType.RENDER;\r\n\r\n\t\tthis.resolution = new Vector2( 1, 1 );\r\n\r\n\t}\r\n\r\n\tsetSize( width, height ) {\r\n\r\n\t\twidth = Math.max( Math.round( width * this.resolution.x ), 1 );\r\n\t\theight = Math.max( Math.round( height * this.resolution.y ), 1 );\r\n\r\n\t\tthis._invSize.value.set( 1 / width, 1 / height );\r\n\t\tthis._horizontalRT.setSize( width, height );\r\n\t\tthis._verticalRT.setSize( width, height );\r\n\r\n\t}\r\n\r\n\tupdateBefore( frame ) {\r\n\r\n\t\tconst { renderer } = frame;\r\n\r\n\t\tconst textureNode = this.textureNode;\r\n\t\tconst map = textureNode.value;\r\n\r\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\tconst currentTexture = textureNode.value;\r\n\r\n\t\tquadMesh1.material = this._material;\r\n\t\tquadMesh2.material = this._material;\r\n\r\n\t\tthis.setSize( map.image.width, map.image.height );\r\n\r\n\t\tconst textureType = map.type;\r\n\r\n\t\tthis._horizontalRT.texture.type = textureType;\r\n\t\tthis._verticalRT.texture.type = textureType;\r\n\r\n\t\t// horizontal\r\n\r\n\t\trenderer.setRenderTarget( this._horizontalRT );\r\n\r\n\t\tthis._passDirection.value.set( 1, 0 );\r\n\r\n\t\tquadMesh1.render( renderer );\r\n\r\n\t\t// vertical\r\n\r\n\t\ttextureNode.value = this._horizontalRT.texture;\r\n\t\trenderer.setRenderTarget( this._verticalRT );\r\n\r\n\t\tthis._passDirection.value.set( 0, 1 );\r\n\r\n\t\tquadMesh2.render( renderer );\r\n\r\n\t\t// restore\r\n\r\n\t\trenderer.setRenderTarget( currentRenderTarget );\r\n\t\ttextureNode.value = currentTexture;\r\n\r\n\t}\r\n\r\n\tgetTextureNode() {\r\n\r\n\t\treturn this._textureNode;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst textureNode = this.textureNode;\r\n\r\n\t\tif ( textureNode.isTextureNode !== true ) {\r\n\r\n\t\t\tconsole.error( 'GaussianBlurNode requires a TextureNode.' );\r\n\r\n\t\t\treturn vec4();\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tconst uvNode = textureNode.uvNode || uv();\r\n\r\n\t\tconst sampleTexture = ( uv ) => textureNode.cache().context( { getUV: () => uv, forceUVContext: true } );\r\n\r\n\t\tconst blur = tslFn( () => {\r\n\r\n\t\t\tconst kernelSize = 3 + ( 2 * this.sigma );\r\n\t\t\tconst gaussianCoefficients = this._getCoefficients( kernelSize );\r\n\r\n\t\t\tconst invSize = this._invSize;\r\n\t\t\tconst direction = vec2( this.directionNode ).mul( this._passDirection );\r\n\r\n\t\t\tconst weightSum = float( gaussianCoefficients[ 0 ] ).toVar();\r\n\t\t\tconst diffuseSum = vec4( sampleTexture( uvNode ).mul( weightSum ) ).toVar();\r\n\r\n\t\t\tfor ( let i = 1; i < kernelSize; i ++ ) {\r\n\r\n\t\t\t\tconst x = float( i );\r\n\t\t\t\tconst w = float( gaussianCoefficients[ i ] );\r\n\r\n\t\t\t\tconst uvOffset = vec2( direction.mul( invSize.mul( x ) ) ).toVar();\r\n\r\n\t\t\t\tconst sample1 = vec4( sampleTexture( uvNode.add( uvOffset ) ) );\r\n\t\t\t\tconst sample2 = vec4( sampleTexture( uvNode.sub( uvOffset ) ) );\r\n\r\n\t\t\t\tdiffuseSum.addAssign( sample1.add( sample2 ).mul( w ) );\r\n\t\t\t\tweightSum.addAssign( mul( 2.0, w ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn diffuseSum.div( weightSum );\r\n\r\n\t\t} );\r\n\r\n\t\t//\r\n\r\n\t\tconst material = this._material || ( this._material = builder.createNodeMaterial() );\r\n\t\tmaterial.fragmentNode = blur();\r\n\r\n\t\t//\r\n\r\n\t\tconst properties = builder.getNodeProperties( this );\r\n\t\tproperties.textureNode = textureNode;\r\n\r\n\t\t//\r\n\r\n\t\treturn this._textureNode;\r\n\r\n\t}\r\n\r\n\t_getCoefficients( kernelRadius ) {\r\n\r\n\t\tconst coefficients = [];\r\n\r\n\t\tfor ( let i = 0; i < kernelRadius; i ++ ) {\r\n\r\n\t\t\tcoefficients.push( 0.39894 * Math.exp( - 0.5 * i * i / ( kernelRadius * kernelRadius ) ) / kernelRadius );\r\n\r\n\t\t}\r\n\r\n\t\treturn coefficients;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport const gaussianBlur = ( node, sigma ) => nodeObject( new GaussianBlurNode( nodeObject( node ), sigma ) );\r\n\r\naddNodeElement( 'gaussianBlur', gaussianBlur );\r\n\r\nexport default GaussianBlurNode;\r\n\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { nodeObject, addNodeElement, tslFn, float, vec4 } from '../shadernode/ShaderNode.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { uv } from '../accessors/UVNode.js';\r\nimport { texture } from '../accessors/TextureNode.js';\r\nimport { texturePass } from './PassNode.js';\r\nimport { uniform } from '../core/UniformNode.js';\r\nimport { RenderTarget } from 'three';\r\nimport { sign, max } from '../math/MathNode.js';\r\nimport QuadMesh from '../../objects/QuadMesh.js';\r\n\r\nconst quadMeshComp = new QuadMesh();\r\n\r\nclass AfterImageNode extends TempNode {\r\n\r\n\tconstructor( textureNode, damp = 0.96 ) {\r\n\r\n\t\tsuper( textureNode );\r\n\r\n\t\tthis.textureNode = textureNode;\r\n\t\tthis.textureNodeOld = texture();\r\n\t\tthis.damp = uniform( damp );\r\n\r\n\t\tthis._compRT = new RenderTarget();\r\n\t\tthis._compRT.texture.name = 'AfterImageNode.comp';\r\n\r\n\t\tthis._oldRT = new RenderTarget();\r\n\t\tthis._oldRT.texture.name = 'AfterImageNode.old';\r\n\r\n\t\tthis._textureNode = texturePass( this, this._compRT.texture );\r\n\r\n\t\tthis.updateBeforeType = NodeUpdateType.RENDER;\r\n\r\n\t}\r\n\r\n\tgetTextureNode() {\r\n\r\n\t\treturn this._textureNode;\r\n\r\n\t}\r\n\r\n\tsetSize( width, height ) {\r\n\r\n\t\tthis._compRT.setSize( width, height );\r\n\t\tthis._oldRT.setSize( width, height );\r\n\r\n\t}\r\n\r\n\tupdateBefore( frame ) {\r\n\r\n\t\tconst { renderer } = frame;\r\n\r\n\t\tconst textureNode = this.textureNode;\r\n\t\tconst map = textureNode.value;\r\n\r\n\t\tconst textureType = map.type;\r\n\r\n\t\tthis._compRT.texture.type = textureType;\r\n\t\tthis._oldRT.texture.type = textureType;\r\n\r\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\tconst currentTexture = textureNode.value;\r\n\r\n\t\tthis.textureNodeOld.value = this._oldRT.texture;\r\n\r\n\t\t// comp\r\n\t\trenderer.setRenderTarget( this._compRT );\r\n\t\tquadMeshComp.render( renderer );\r\n\r\n\t\t// Swap the textures\r\n\t\tconst temp = this._oldRT;\r\n\t\tthis._oldRT = this._compRT;\r\n\t\tthis._compRT = temp;\r\n\r\n\t\t// set size before swapping fails\r\n\t\tthis.setSize( map.image.width, map.image.height );\r\n\r\n\t\trenderer.setRenderTarget( currentRenderTarget );\r\n\t\ttextureNode.value = currentTexture;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst textureNode = this.textureNode;\r\n\t\tconst textureNodeOld = this.textureNodeOld;\r\n\r\n\t\tif ( textureNode.isTextureNode !== true ) {\r\n\r\n\t\t\tconsole.error( 'AfterImageNode requires a TextureNode.' );\r\n\r\n\t\t\treturn vec4();\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tconst uvNode = textureNode.uvNode || uv();\r\n\r\n\t\ttextureNodeOld.uvNode = uvNode;\r\n\r\n\t\tconst sampleTexture = ( uv ) => textureNode.cache().context( { getUV: () => uv, forceUVContext: true } );\r\n\r\n\t\tconst when_gt = tslFn( ( [ x_immutable, y_immutable ] ) => {\r\n\r\n\t\t\tconst y = float( y_immutable ).toVar();\r\n\t\t\tconst x = vec4( x_immutable ).toVar();\r\n\r\n\t\t\treturn max( sign( x.sub( y ) ), 0.0 );\r\n\r\n\t\t} );\r\n\r\n\t\tconst afterImg = tslFn( () => {\r\n\r\n\t\t\tconst texelOld = vec4( textureNodeOld );\r\n\t\t\tconst texelNew = vec4( sampleTexture( uvNode ) );\r\n\r\n\t\t\ttexelOld.mulAssign( this.damp.mul( when_gt( texelOld, 0.1 ) ) );\r\n\t\t\treturn max( texelNew, texelOld );\r\n\r\n\t\t} );\r\n\r\n\t\t//\r\n\r\n\t\tconst materialComposed = this._materialComposed || ( this._materialComposed = builder.createNodeMaterial() );\r\n\t\tmaterialComposed.fragmentNode = afterImg();\r\n\r\n\t\tquadMeshComp.material = materialComposed;\r\n\r\n\t\t//\r\n\r\n\t\tconst properties = builder.getNodeProperties( this );\r\n\t\tproperties.textureNode = textureNode;\r\n\r\n\t\t//\r\n\r\n\t\treturn this._textureNode;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport const afterImage = ( node, damp ) => nodeObject( new AfterImageNode( nodeObject( node ), damp ) );\r\n\r\naddNodeElement( 'afterImage', afterImage );\r\n\r\nexport default AfterImageNode;\r\n\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { nodeObject, addNodeElement, tslFn, float, vec2, vec3, vec4 } from '../shadernode/ShaderNode.js';\r\nimport { loop } from '../utils/LoopNode.js';\r\nimport { uniform } from '../core/UniformNode.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { threshold } from './ColorAdjustmentNode.js';\r\nimport { uv } from '../accessors/UVNode.js';\r\nimport { texturePass } from './PassNode.js';\r\nimport { Vector2, RenderTarget } from 'three';\r\nimport QuadMesh from '../../objects/QuadMesh.js';\r\n\r\nconst quadMesh = new QuadMesh();\r\n\r\nclass AnamorphicNode extends TempNode {\r\n\r\n\tconstructor( textureNode, tresholdNode, scaleNode, samples ) {\r\n\r\n\t\tsuper( 'vec4' );\r\n\r\n\t\tthis.textureNode = textureNode;\r\n\t\tthis.tresholdNode = tresholdNode;\r\n\t\tthis.scaleNode = scaleNode;\r\n\t\tthis.colorNode = vec3( 0.1, 0.0, 1.0 );\r\n\t\tthis.samples = samples;\r\n\t\tthis.resolution = new Vector2( 1, 1 );\r\n\r\n\t\tthis._renderTarget = new RenderTarget();\r\n\t\tthis._renderTarget.texture.name = 'anamorphic';\r\n\r\n\t\tthis._invSize = uniform( new Vector2() );\r\n\r\n\t\tthis._textureNode = texturePass( this, this._renderTarget.texture );\r\n\r\n\t\tthis.updateBeforeType = NodeUpdateType.RENDER;\r\n\r\n\t}\r\n\r\n\tgetTextureNode() {\r\n\r\n\t\treturn this._textureNode;\r\n\r\n\t}\r\n\r\n\tsetSize( width, height ) {\r\n\r\n\t\tthis._invSize.value.set( 1 / width, 1 / height );\r\n\r\n\t\twidth = Math.max( Math.round( width * this.resolution.x ), 1 );\r\n\t\theight = Math.max( Math.round( height * this.resolution.y ), 1 );\r\n\r\n\t\tthis._renderTarget.setSize( width, height );\r\n\r\n\t}\r\n\r\n\tupdateBefore( frame ) {\r\n\r\n\t\tconst { renderer } = frame;\r\n\r\n\t\tconst textureNode = this.textureNode;\r\n\t\tconst map = textureNode.value;\r\n\r\n\t\tthis._renderTarget.texture.type = map.type;\r\n\r\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\tconst currentTexture = textureNode.value;\r\n\r\n\t\tquadMesh.material = this._material;\r\n\r\n\t\tthis.setSize( map.image.width, map.image.height );\r\n\r\n\t\t// render\r\n\r\n\t\trenderer.setRenderTarget( this._renderTarget );\r\n\r\n\t\tquadMesh.render( renderer );\r\n\r\n\t\t// restore\r\n\r\n\t\trenderer.setRenderTarget( currentRenderTarget );\r\n\t\ttextureNode.value = currentTexture;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst textureNode = this.textureNode;\r\n\r\n\t\tif ( textureNode.isTextureNode !== true ) {\r\n\r\n\t\t\tconsole.error( 'AnamorphNode requires a TextureNode.' );\r\n\r\n\t\t\treturn vec4();\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tconst uvNode = textureNode.uvNode || uv();\r\n\r\n\t\tconst sampleTexture = ( uv ) => textureNode.cache().context( { getUV: () => uv, forceUVContext: true } );\r\n\r\n\t\tconst anamorph = tslFn( () => {\r\n\r\n\t\t\tconst samples = this.samples;\r\n\t\t\tconst halfSamples = Math.floor( samples / 2 );\r\n\r\n\t\t\tconst total = vec3( 0 ).toVar();\r\n\r\n\t\t\tloop( { start: - halfSamples, end: halfSamples }, ( { i } ) => {\r\n\r\n\t\t\t\tconst softness = float( i ).abs().div( halfSamples ).oneMinus();\r\n\r\n\t\t\t\tconst uv = vec2( uvNode.x.add( this._invSize.x.mul( i ).mul( this.scaleNode ) ), uvNode.y );\r\n\t\t\t\tconst color = sampleTexture( uv );\r\n\t\t\t\tconst pass = threshold( color, this.tresholdNode ).mul( softness );\r\n\r\n\t\t\t\ttotal.addAssign( pass );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn total.mul( this.colorNode );\r\n\r\n\t\t} );\r\n\r\n\t\t//\r\n\r\n\t\tconst material = this._material || ( this._material = builder.createNodeMaterial() );\r\n\t\tmaterial.fragmentNode = anamorph();\r\n\r\n\t\t//\r\n\r\n\t\tconst properties = builder.getNodeProperties( this );\r\n\t\tproperties.textureNode = textureNode;\r\n\r\n\t\t//\r\n\r\n\t\treturn this._textureNode;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport const anamorphic = ( node, threshold = .9, scale = 3, samples = 32 ) => nodeObject( new AnamorphicNode( nodeObject( node ), nodeObject( threshold ), nodeObject( scale ), samples ) );\r\n\r\naddNodeElement( 'anamorphic', anamorphic );\r\n\r\nexport default AnamorphicNode;\r\n\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, nodeArray, nodeObject, nodeObjects } from '../shadernode/ShaderNode.js';\r\n\r\nclass FunctionCallNode extends TempNode {\r\n\r\n\tconstructor( functionNode = null, parameters = {} ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.functionNode = functionNode;\r\n\t\tthis.parameters = parameters;\r\n\r\n\t}\r\n\r\n\tsetParameters( parameters ) {\r\n\r\n\t\tthis.parameters = parameters;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetParameters() {\r\n\r\n\t\treturn this.parameters;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.functionNode.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst params = [];\r\n\r\n\t\tconst functionNode = this.functionNode;\r\n\r\n\t\tconst inputs = functionNode.getInputs( builder );\r\n\t\tconst parameters = this.parameters;\r\n\r\n\t\tif ( Array.isArray( parameters ) ) {\r\n\r\n\t\t\tfor ( let i = 0; i < parameters.length; i ++ ) {\r\n\r\n\t\t\t\tconst inputNode = inputs[ i ];\r\n\t\t\t\tconst node = parameters[ i ];\r\n\r\n\t\t\t\tparams.push( node.build( builder, inputNode.type ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( const inputNode of inputs ) {\r\n\r\n\t\t\t\tconst node = parameters[ inputNode.name ];\r\n\r\n\t\t\t\tif ( node !== undefined ) {\r\n\r\n\t\t\t\t\tparams.push( node.build( builder, inputNode.type ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthrow new Error( `FunctionCallNode: Input '${inputNode.name}' not found in FunctionNode.` );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst functionName = functionNode.build( builder, 'property' );\r\n\r\n\t\treturn `${functionName}( ${params.join( ', ' )} )`;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default FunctionCallNode;\r\n\r\nexport const call = ( func, ...params ) => {\r\n\r\n\tparams = params.length > 1 || ( params[ 0 ] && params[ 0 ].isNode === true ) ? nodeArray( params ) : nodeObjects( params[ 0 ] );\r\n\r\n\treturn nodeObject( new FunctionCallNode( nodeObject( func ), params ) );\r\n\r\n};\r\n\r\naddNodeElement( 'call', call );\r\n\r\naddNodeClass( 'FunctionCallNode', FunctionCallNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { arrayBufferToBase64, base64ToArrayBuffer } from '../core/NodeUtils.js';\r\nimport { addNodeElement, nodeProxy, float } from '../shadernode/ShaderNode.js';\r\nimport { EventDispatcher } from 'three';\r\n\r\nclass ScriptableValueNode extends Node {\r\n\r\n\tconstructor( value = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._value = value;\r\n\t\tthis._cache = null;\r\n\r\n\t\tthis.inputType = null;\r\n\t\tthis.outpuType = null;\r\n\r\n\t\tthis.events = new EventDispatcher();\r\n\r\n\t\tthis.isScriptableValueNode = true;\r\n\r\n\t}\r\n\r\n\tget isScriptableOutputNode() {\r\n\r\n\t\treturn this.outputType !== null;\r\n\r\n\t}\r\n\r\n\tset value( val ) {\r\n\r\n\t\tif ( this._value === val ) return;\r\n\r\n\t\tif ( this._cache && this.inputType === 'URL' && this.value.value instanceof ArrayBuffer ) {\r\n\r\n\t\t\tURL.revokeObjectURL( this._cache );\r\n\r\n\t\t\tthis._cache = null;\r\n\r\n\t\t}\r\n\r\n\t\tthis._value = val;\r\n\r\n\t\tthis.events.dispatchEvent( { type: 'change' } );\r\n\r\n\t\tthis.refresh();\r\n\r\n\t}\r\n\r\n\tget value() {\r\n\r\n\t\treturn this._value;\r\n\r\n\t}\r\n\r\n\trefresh() {\r\n\r\n\t\tthis.events.dispatchEvent( { type: 'refresh' } );\r\n\r\n\t}\r\n\r\n\tgetValue() {\r\n\r\n\t\tconst value = this.value;\r\n\r\n\t\tif ( value && this._cache === null && this.inputType === 'URL' && value.value instanceof ArrayBuffer ) {\r\n\r\n\t\t\tthis._cache = URL.createObjectURL( new Blob( [ value.value ] ) );\r\n\r\n\t\t} else if ( value && value.value !== null && value.value !== undefined && (\r\n\t\t\t( ( this.inputType === 'URL' || this.inputType === 'String' ) && typeof value.value === 'string' ) ||\r\n\t\t\t( this.inputType === 'Number' && typeof value.value === 'number' ) ||\r\n\t\t\t( this.inputType === 'Vector2' && value.value.isVector2 ) ||\r\n\t\t\t( this.inputType === 'Vector3' && value.value.isVector3 ) ||\r\n\t\t\t( this.inputType === 'Vector4' && value.value.isVector4 ) ||\r\n\t\t\t( this.inputType === 'Color' && value.value.isColor ) ||\r\n\t\t\t( this.inputType === 'Matrix3' && value.value.isMatrix3 ) ||\r\n\t\t\t( this.inputType === 'Matrix4' && value.value.isMatrix4 )\r\n\t\t) ) {\r\n\r\n\t\t\treturn value.value;\r\n\r\n\t\t}\r\n\r\n\t\treturn this._cache || value;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.value && this.value.isNode ? this.value.getNodeType( builder ) : 'float';\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\treturn this.value && this.value.isNode ? this.value : float();\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tif ( this.value !== null ) {\r\n\r\n\t\t\tif ( this.inputType === 'ArrayBuffer' ) {\r\n\r\n\t\t\t\tdata.value = arrayBufferToBase64( this.value );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdata.value = this.value ? this.value.toJSON( data.meta ).uuid : null;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdata.value = null;\r\n\r\n\t\t}\r\n\r\n\t\tdata.inputType = this.inputType;\r\n\t\tdata.outputType = this.outputType;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tlet value = null;\r\n\r\n\t\tif ( data.value !== null ) {\r\n\r\n\t\t\tif ( data.inputType === 'ArrayBuffer' ) {\r\n\r\n\t\t\t\tvalue = base64ToArrayBuffer( data.value );\r\n\r\n\t\t\t} else if ( data.inputType === 'Texture' ) {\r\n\r\n\t\t\t\tvalue = data.meta.textures[ data.value ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvalue = data.meta.nodes[ data.value ] || null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.value = value;\r\n\r\n\t\tthis.inputType = data.inputType;\r\n\t\tthis.outputType = data.outputType;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ScriptableValueNode;\r\n\r\nexport const scriptableValue = nodeProxy( ScriptableValueNode );\r\n\r\naddNodeElement( 'scriptableValue', scriptableValue );\r\n\r\naddNodeClass( 'ScriptableValueNode', ScriptableValueNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { scriptableValue } from './ScriptableValueNode.js';\r\nimport { addNodeElement, nodeProxy, float } from '../shadernode/ShaderNode.js';\r\n\r\nclass Resources extends Map {\r\n\r\n\tget( key, callback = null, ...params ) {\r\n\r\n\t\tif ( this.has( key ) ) return super.get( key );\r\n\r\n\t\tif ( callback !== null ) {\r\n\r\n\t\t\tconst value = callback( ...params );\r\n\t\t\tthis.set( key, value );\r\n\t\t\treturn value;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Parameters {\r\n\r\n\tconstructor( scriptableNode ) {\r\n\r\n\t\tthis.scriptableNode = scriptableNode;\r\n\r\n\t}\r\n\r\n\tget parameters() {\r\n\r\n\t\treturn this.scriptableNode.parameters;\r\n\r\n\t}\r\n\r\n\tget layout() {\r\n\r\n\t\treturn this.scriptableNode.getLayout();\r\n\r\n\t}\r\n\r\n\tgetInputLayout( id ) {\r\n\r\n\t\treturn this.scriptableNode.getInputLayout( id );\r\n\r\n\t}\r\n\r\n\tget( name ) {\r\n\r\n\t\tconst param = this.parameters[ name ];\r\n\t\tconst value = param ? param.getValue() : null;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport const global = new Resources();\r\n\r\nclass ScriptableNode extends Node {\r\n\r\n\tconstructor( codeNode = null, parameters = {} ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.codeNode = codeNode;\r\n\t\tthis.parameters = parameters;\r\n\r\n\t\tthis._local = new Resources();\r\n\t\tthis._output = scriptableValue();\r\n\t\tthis._outputs = {};\r\n\t\tthis._source = this.source;\r\n\t\tthis._method = null;\r\n\t\tthis._object = null;\r\n\t\tthis._value = null;\r\n\t\tthis._needsOutputUpdate = true;\r\n\r\n\t\tthis.onRefresh = this.onRefresh.bind( this );\r\n\r\n\t\tthis.isScriptableNode = true;\r\n\r\n\t}\r\n\r\n\tget source() {\r\n\r\n\t\treturn this.codeNode ? this.codeNode.code : '';\r\n\r\n\t}\r\n\r\n\tsetLocal( name, value ) {\r\n\r\n\t\treturn this._local.set( name, value );\r\n\r\n\t}\r\n\r\n\tgetLocal( name ) {\r\n\r\n\t\treturn this._local.get( name );\r\n\r\n\t}\r\n\r\n\tonRefresh() {\r\n\r\n\t\tthis._refresh();\r\n\r\n\t}\r\n\r\n\tgetInputLayout( id ) {\r\n\r\n\t\tfor ( const element of this.getLayout() ) {\r\n\r\n\t\t\tif ( element.inputType && ( element.id === id || element.name === id ) ) {\r\n\r\n\t\t\t\treturn element;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetOutputLayout( id ) {\r\n\r\n\t\tfor ( const element of this.getLayout() ) {\r\n\r\n\t\t\tif ( element.outputType && ( element.id === id || element.name === id ) ) {\r\n\r\n\t\t\t\treturn element;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetOutput( name, value ) {\r\n\r\n\t\tconst outputs = this._outputs;\r\n\r\n\t\tif ( outputs[ name ] === undefined ) {\r\n\r\n\t\t\toutputs[ name ] = scriptableValue( value );\r\n\r\n\t\t} else {\r\n\r\n\t\t\toutputs[ name ].value = value;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetOutput( name ) {\r\n\r\n\t\treturn this._outputs[ name ];\r\n\r\n\t}\r\n\r\n\tgetParameter( name ) {\r\n\r\n\t\treturn this.parameters[ name ];\r\n\r\n\t}\r\n\r\n\tsetParameter( name, value ) {\r\n\r\n\t\tconst parameters = this.parameters;\r\n\r\n\t\tif ( value && value.isScriptableNode ) {\r\n\r\n\t\t\tthis.deleteParameter( name );\r\n\r\n\t\t\tparameters[ name ] = value;\r\n\t\t\tparameters[ name ].getDefaultOutput().events.addEventListener( 'refresh', this.onRefresh );\r\n\r\n\t\t} else if ( value && value.isScriptableValueNode ) {\r\n\r\n\t\t\tthis.deleteParameter( name );\r\n\r\n\t\t\tparameters[ name ] = value;\r\n\t\t\tparameters[ name ].events.addEventListener( 'refresh', this.onRefresh );\r\n\r\n\t\t} else if ( parameters[ name ] === undefined ) {\r\n\r\n\t\t\tparameters[ name ] = scriptableValue( value );\r\n\t\t\tparameters[ name ].events.addEventListener( 'refresh', this.onRefresh );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tparameters[ name ].value = value;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetValue() {\r\n\r\n\t\treturn this.getDefaultOutput().getValue();\r\n\r\n\t}\r\n\r\n\tdeleteParameter( name ) {\r\n\r\n\t\tlet valueNode = this.parameters[ name ];\r\n\r\n\t\tif ( valueNode ) {\r\n\r\n\t\t\tif ( valueNode.isScriptableNode ) valueNode = valueNode.getDefaultOutput();\r\n\r\n\t\t\tvalueNode.events.removeEventListener( 'refresh', this.onRefresh );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclearParameters() {\r\n\r\n\t\tfor ( const name of Object.keys( this.parameters ) ) {\r\n\r\n\t\t\tthis.deleteParameter( name );\r\n\r\n\t\t}\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcall( name, ...params ) {\r\n\r\n\t\tconst object = this.getObject();\r\n\t\tconst method = object[ name ];\r\n\r\n\t\tif ( typeof method === 'function' ) {\r\n\r\n\t\t\treturn method( ...params );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tasync callAsync( name, ...params ) {\r\n\r\n\t\tconst object = this.getObject();\r\n\t\tconst method = object[ name ];\r\n\r\n\t\tif ( typeof method === 'function' ) {\r\n\r\n\t\t\treturn method.constructor.name === 'AsyncFunction' ? await method( ...params ) : method( ...params );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.getDefaultOutputNode().getNodeType( builder );\r\n\r\n\t}\r\n\r\n\trefresh( output = null ) {\r\n\r\n\t\tif ( output !== null ) {\r\n\r\n\t\t\tthis.getOutput( output ).refresh();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._refresh();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetObject() {\r\n\r\n\t\tif ( this.needsUpdate ) this.dispose();\r\n\t\tif ( this._object !== null ) return this._object;\r\n\r\n\t\t//\r\n\r\n\t\tconst refresh = () => this.refresh();\r\n\t\tconst setOutput = ( id, value ) => this.setOutput( id, value );\r\n\r\n\t\tconst parameters = new Parameters( this );\r\n\r\n\t\tconst THREE = global.get( 'THREE' );\r\n\t\tconst TSL = global.get( 'TSL' );\r\n\r\n\t\tconst method = this.getMethod( this.codeNode );\r\n\t\tconst params = [ parameters, this._local, global, refresh, setOutput, THREE, TSL ];\r\n\r\n\t\tthis._object = method( ...params );\r\n\r\n\t\tconst layout = this._object.layout;\r\n\r\n\t\tif ( layout ) {\r\n\r\n\t\t\tif ( layout.cache === false ) {\r\n\r\n\t\t\t\tthis._local.clear();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// default output\r\n\t\t\tthis._output.outputType = layout.outputType || null;\r\n\r\n\t\t\tif ( Array.isArray( layout.elements ) ) {\r\n\r\n\t\t\t\tfor ( const element of layout.elements ) {\r\n\r\n\t\t\t\t\tconst id = element.id || element.name;\r\n\r\n\t\t\t\t\tif ( element.inputType ) {\r\n\r\n\t\t\t\t\t\tif ( this.getParameter( id ) === undefined ) this.setParameter( id, null );\r\n\r\n\t\t\t\t\t\tthis.getParameter( id ).inputType = element.inputType;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( element.outputType ) {\r\n\r\n\t\t\t\t\t\tif ( this.getOutput( id ) === undefined ) this.setOutput( id, null );\r\n\r\n\t\t\t\t\t\tthis.getOutput( id ).outputType = element.outputType;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this._object;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tfor ( const name in this.parameters ) {\r\n\r\n\t\t\tlet valueNode = this.parameters[ name ];\r\n\r\n\t\t\tif ( valueNode.isScriptableNode ) valueNode = valueNode.getDefaultOutput();\r\n\r\n\t\t\tvalueNode.events.addEventListener( 'refresh', this.onRefresh );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetLayout() {\r\n\r\n\t\treturn this.getObject().layout;\r\n\r\n\t}\r\n\r\n\tgetDefaultOutputNode() {\r\n\r\n\t\tconst output = this.getDefaultOutput().value;\r\n\r\n\t\tif ( output && output.isNode ) {\r\n\r\n\t\t\treturn output;\r\n\r\n\t\t}\r\n\r\n\t\treturn float();\r\n\r\n\t}\r\n\r\n\tgetDefaultOutput()\t{\r\n\r\n\t\treturn this._exec()._output;\r\n\r\n\t}\r\n\r\n\tgetMethod() {\r\n\r\n\t\tif ( this.needsUpdate ) this.dispose();\r\n\t\tif ( this._method !== null ) return this._method;\r\n\r\n\t\t//\r\n\r\n\t\tconst parametersProps = [ 'parameters', 'local', 'global', 'refresh', 'setOutput', 'THREE', 'TSL' ];\r\n\t\tconst interfaceProps = [ 'layout', 'init', 'main', 'dispose' ];\r\n\r\n\t\tconst properties = interfaceProps.join( ', ' );\r\n\t\tconst declarations = 'var ' + properties + '; var output = {};\\n';\r\n\t\tconst returns = '\\nreturn { ...output, ' + properties + ' };';\r\n\r\n\t\tconst code = declarations + this.codeNode.code + returns;\r\n\r\n\t\t//\r\n\r\n\t\tthis._method = new Function( ...parametersProps, code );\r\n\r\n\t\treturn this._method;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tif ( this._method === null ) return;\r\n\r\n\t\tif ( this._object && typeof this._object.dispose === 'function' ) {\r\n\r\n\t\t\tthis._object.dispose();\r\n\r\n\t\t}\r\n\r\n\t\tthis._method = null;\r\n\t\tthis._object = null;\r\n\t\tthis._source = null;\r\n\t\tthis._value = null;\r\n\t\tthis._needsOutputUpdate = true;\r\n\t\tthis._output.value = null;\r\n\t\tthis._outputs = {};\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\treturn this.getDefaultOutputNode();\r\n\r\n\t}\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.dispose();\r\n\r\n\t}\r\n\r\n\tget needsUpdate() {\r\n\r\n\t\treturn this.source !== this._source;\r\n\r\n\t}\r\n\r\n\t_exec()\t{\r\n\r\n\t\tif ( this.codeNode === null ) return this;\r\n\r\n\t\tif ( this._needsOutputUpdate === true ) {\r\n\r\n\t\t\tthis._value = this.call( 'main' );\r\n\r\n\t\t\tthis._needsOutputUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tthis._output.value = this._value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t_refresh() {\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t\tthis._exec();\r\n\r\n\t\tthis._output.refresh();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ScriptableNode;\r\n\r\nexport const scriptable = nodeProxy( ScriptableNode );\r\n\r\naddNodeElement( 'scriptable', scriptable );\r\n\r\naddNodeClass( 'ScriptableNode', ScriptableNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { mix } from '../math/MathNode.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass FogNode extends Node {\r\n\r\n\tconstructor( colorNode, factorNode ) {\r\n\r\n\t\tsuper( 'float' );\r\n\r\n\t\tthis.isFogNode = true;\r\n\r\n\t\tthis.colorNode = colorNode;\r\n\t\tthis.factorNode = factorNode;\r\n\r\n\t}\r\n\r\n\tmixAssign( outputNode ) {\r\n\r\n\t\treturn mix( outputNode, this.colorNode, this );\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\treturn this.factorNode;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default FogNode;\r\n\r\nexport const fog = nodeProxy( FogNode );\r\n\r\naddNodeElement( 'fog', fog );\r\n\r\naddNodeClass( 'FogNode', FogNode );\r\n", "import FogNode from './FogNode.js';\r\nimport { smoothstep } from '../math/MathNode.js';\r\nimport { positionView } from '../accessors/PositionNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass FogRangeNode extends FogNode {\r\n\r\n\tconstructor( colorNode, nearNode, farNode ) {\r\n\r\n\t\tsuper( colorNode );\r\n\r\n\t\tthis.isFogRangeNode = true;\r\n\r\n\t\tthis.nearNode = nearNode;\r\n\t\tthis.farNode = farNode;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\treturn smoothstep( this.nearNode, this.farNode, positionView.z.negate() );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default FogRangeNode;\r\n\r\nexport const rangeFog = nodeProxy( FogRangeNode );\r\n\r\naddNodeElement( 'rangeFog', rangeFog );\r\n\r\naddNodeClass( 'FogRangeNode', FogRangeNode );\r\n", "import FogNode from './FogNode.js';\r\nimport { positionView } from '../accessors/PositionNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nclass FogExp2Node extends FogNode {\r\n\r\n\tconstructor( colorNode, densityNode ) {\r\n\r\n\t\tsuper( colorNode );\r\n\r\n\t\tthis.isFogExp2Node = true;\r\n\r\n\t\tthis.densityNode = densityNode;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst depthNode = positionView.z.negate();\r\n\t\tconst densityNode = this.densityNode;\r\n\r\n\t\treturn densityNode.mul( densityNode, depthNode, depthNode ).negate().exp().oneMinus();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default FogExp2Node;\r\n\r\nexport const densityFog = nodeProxy( FogExp2Node );\r\n\r\naddNodeElement( 'densityFog', densityFog );\r\n\r\naddNodeClass( 'FogExp2Node', FogExp2Node );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { getValueType } from '../core/NodeUtils.js';\r\nimport { buffer } from '../accessors/BufferNode.js';\r\n//import { bufferAttribute } from '../accessors/BufferAttributeNode.js';\r\nimport { instanceIndex } from '../core/IndexNode.js';\r\nimport { nodeProxy, float } from '../shadernode/ShaderNode.js';\r\n\r\nimport { Vector4, MathUtils } from 'three';\r\n\r\nlet min = null;\r\nlet max = null;\r\n\r\nclass RangeNode extends Node {\r\n\r\n\tconstructor( minNode = float(), maxNode = float() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.minNode = minNode;\r\n\t\tthis.maxNode = maxNode;\r\n\r\n\t}\r\n\r\n\tgetVectorLength( builder ) {\r\n\r\n\t\tconst minLength = builder.getTypeLength( getValueType( this.minNode.value ) );\r\n\t\tconst maxLength = builder.getTypeLength( getValueType( this.maxNode.value ) );\r\n\r\n\t\treturn minLength > maxLength ? minLength : maxLength;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn builder.object.isInstancedMesh === true ? builder.getTypeFromLength( this.getVectorLength( builder ) ) : 'float';\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst object = builder.object;\r\n\r\n\t\tlet output = null;\r\n\r\n\t\tif ( object.isInstancedMesh === true ) {\r\n\r\n\t\t\tconst minValue = this.minNode.value;\r\n\t\t\tconst maxValue = this.maxNode.value;\r\n\r\n\t\t\tconst minLength = builder.getTypeLength( getValueType( minValue ) );\r\n\t\t\tconst maxLength = builder.getTypeLength( getValueType( maxValue ) );\r\n\r\n\t\t\tmin = min || new Vector4();\r\n\t\t\tmax = max || new Vector4();\r\n\r\n\t\t\tmin.setScalar( 0 );\r\n\t\t\tmax.setScalar( 0 );\r\n\r\n\t\t\tif ( minLength === 1 ) min.setScalar( minValue );\r\n\t\t\telse if ( minValue.isColor ) min.set( minValue.r, minValue.g, minValue.b );\r\n\t\t\telse min.set( minValue.x, minValue.y, minValue.z || 0, minValue.w || 0 );\r\n\r\n\t\t\tif ( maxLength === 1 ) max.setScalar( maxValue );\r\n\t\t\telse if ( maxValue.isColor ) max.set( maxValue.r, maxValue.g, maxValue.b );\r\n\t\t\telse max.set( maxValue.x, maxValue.y, maxValue.z || 0, maxValue.w || 0 );\r\n\r\n\t\t\tconst stride = 4;\r\n\r\n\t\t\tconst length = stride * object.count;\r\n\t\t\tconst array = new Float32Array( length );\r\n\r\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tconst index = i % stride;\r\n\r\n\t\t\t\tconst minElementValue = min.getComponent( index );\r\n\t\t\t\tconst maxElementValue = max.getComponent( index );\r\n\r\n\t\t\t\tarray[ i ] = MathUtils.lerp( minElementValue, maxElementValue, Math.random() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst nodeType = this.getNodeType( builder );\r\n\r\n\t\t\toutput = buffer( array, 'vec4', object.count ).element( instanceIndex ).convert( nodeType );\r\n\t\t\t//output = bufferAttribute( array, 'vec4', 4, 0 ).convert( nodeType );\r\n\r\n\t\t} else {\r\n\r\n\t\t\toutput = float( 0 );\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default RangeNode;\r\n\r\nexport const range = nodeProxy( RangeNode );\r\n\r\naddNodeClass( 'RangeNode', RangeNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { addNodeElement, nodeObject } from '../shadernode/ShaderNode.js';\r\n\r\nclass ComputeNode extends Node {\r\n\r\n\tconstructor( computeNode, count, workgroupSize = [ 64 ] ) {\r\n\r\n\t\tsuper( 'void' );\r\n\r\n\t\tthis.isComputeNode = true;\r\n\r\n\t\tthis.computeNode = computeNode;\r\n\r\n\t\tthis.count = count;\r\n\t\tthis.workgroupSize = workgroupSize;\r\n\t\tthis.dispatchCount = 0;\r\n\r\n\t\tthis.version = 1;\r\n\t\tthis.updateBeforeType = NodeUpdateType.OBJECT;\r\n\r\n\t\tthis.updateDispatchCount();\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t}\r\n\r\n\tupdateDispatchCount() {\r\n\r\n\t\tconst { count, workgroupSize } = this;\r\n\r\n\t\tlet size = workgroupSize[ 0 ];\r\n\r\n\t\tfor ( let i = 1; i < workgroupSize.length; i ++ )\r\n\t\t\tsize *= workgroupSize[ i ];\r\n\r\n\t\tthis.dispatchCount = Math.ceil( count / size );\r\n\r\n\t}\r\n\r\n\tonInit() { }\r\n\r\n\tupdateBefore( { renderer } ) {\r\n\r\n\t\trenderer.compute( this );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst { shaderStage } = builder;\r\n\r\n\t\tif ( shaderStage === 'compute' ) {\r\n\r\n\t\t\tconst snippet = this.computeNode.build( builder, 'void' );\r\n\r\n\t\t\tif ( snippet !== '' ) {\r\n\r\n\t\t\t\tbuilder.addLineFlowCode( snippet );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ComputeNode;\r\n\r\nexport const compute = ( node, count, workgroupSize ) => nodeObject( new ComputeNode( nodeObject( node ), count, workgroupSize ) );\r\n\r\naddNodeElement( 'compute', compute );\r\n\r\naddNodeClass( 'ComputeNode', ComputeNode );\r\n", "import Node, { addNodeClass } from '../core/Node.js';\r\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\r\nimport { objectPosition } from '../accessors/Object3DNode.js';\r\nimport { cameraViewMatrix } from '../accessors/CameraNode.js';\r\n\r\nclass LightNode extends Node {\r\n\r\n\tconstructor( scope = LightNode.TARGET_DIRECTION, light = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scope = scope;\r\n\t\tthis.light = light;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst { scope, light } = this;\r\n\r\n\t\tlet output = null;\r\n\r\n\t\tif ( scope === LightNode.TARGET_DIRECTION ) {\r\n\r\n\t\t\toutput = cameraViewMatrix.transformDirection( objectPosition( light ).sub( objectPosition( light.target ) ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.scope = this.scope;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.scope = data.scope;\r\n\r\n\t}\r\n\r\n}\r\n\r\nLightNode.TARGET_DIRECTION = 'targetDirection';\r\n\r\nexport default LightNode;\r\n\r\nexport const lightTargetDirection = nodeProxy( LightNode, LightNode.TARGET_DIRECTION );\r\n\r\naddNodeClass( 'LightNode', LightNode );\r\n", "import { tslFn } from '../shadernode/ShaderNode.js';\r\n\r\nexport const getDistanceAttenuation = tslFn( ( inputs ) => {\r\n\r\n\tconst { lightDistance, cutoffDistance, decayExponent } = inputs;\r\n\r\n\t// based upon Frostbite 3 Moving to Physically-based Rendering\r\n\t// page 32, equation 26: E[window1]\r\n\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\tconst distanceFalloff = lightDistance.pow( decayExponent ).max( 0.01 ).reciprocal();\r\n\r\n\treturn cutoffDistance.greaterThan( 0 ).cond(\r\n\t\tdistanceFalloff.mul( lightDistance.div( cutoffDistance ).pow4().oneMinus().clamp().pow2() ),\r\n\t\tdistanceFalloff\r\n\t);\r\n\r\n} ); // validated\r\n", "import AnalyticLightNode from './AnalyticLightNode.js';\r\nimport { addLightNode } from './LightsNode.js';\r\nimport { getDistanceAttenuation } from './LightUtils.js';\r\nimport { uniform } from '../core/UniformNode.js';\r\nimport { objectViewPosition } from '../accessors/Object3DNode.js';\r\nimport { positionView } from '../accessors/PositionNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\n\r\nimport { PointLight } from 'three';\r\n\r\nclass PointLightNode extends AnalyticLightNode {\r\n\r\n\tconstructor( light = null ) {\r\n\r\n\t\tsuper( light );\r\n\r\n\t\tthis.cutoffDistanceNode = uniform( 0 );\r\n\t\tthis.decayExponentNode = uniform( 0 );\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tconst { light } = this;\r\n\r\n\t\tsuper.update( frame );\r\n\r\n\t\tthis.cutoffDistanceNode.value = light.distance;\r\n\t\tthis.decayExponentNode.value = light.decay;\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst { colorNode, cutoffDistanceNode, decayExponentNode, light } = this;\r\n\r\n\t\tconst lightingModel = builder.context.lightingModel;\r\n\r\n\t\tconst lVector = objectViewPosition( light ).sub( positionView ); // @TODO: Add it into LightNode\r\n\r\n\t\tconst lightDirection = lVector.normalize();\r\n\t\tconst lightDistance = lVector.length();\r\n\r\n\t\tconst lightAttenuation = getDistanceAttenuation( {\r\n\t\t\tlightDistance,\r\n\t\t\tcutoffDistance: cutoffDistanceNode,\r\n\t\t\tdecayExponent: decayExponentNode\r\n\t\t} );\r\n\r\n\t\tconst lightColor = colorNode.mul( lightAttenuation );\r\n\r\n\t\tconst reflectedLight = builder.context.reflectedLight;\r\n\r\n\t\tlightingModel.direct( {\r\n\t\t\tlightDirection,\r\n\t\t\tlightColor,\r\n\t\t\treflectedLight\r\n\t\t}, builder.stack, builder );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default PointLightNode;\r\n\r\naddNodeClass( 'PointLightNode', PointLightNode );\r\n\r\naddLightNode( PointLight, PointLightNode );\r\n", "import AnalyticLightNode from './AnalyticLightNode.js';\r\nimport { lightTargetDirection } from './LightNode.js';\r\nimport { addLightNode } from './LightsNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\n\r\nimport { DirectionalLight } from 'three';\r\n\r\nclass DirectionalLightNode extends AnalyticLightNode {\r\n\r\n\tconstructor( light = null ) {\r\n\r\n\t\tsuper( light );\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tsuper.setup( builder );\r\n\r\n\t\tconst lightingModel = builder.context.lightingModel;\r\n\r\n\t\tconst lightColor = this.colorNode;\r\n\t\tconst lightDirection = lightTargetDirection( this.light );\r\n\t\tconst reflectedLight = builder.context.reflectedLight;\r\n\r\n\t\tlightingModel.direct( {\r\n\t\t\tlightDirection,\r\n\t\t\tlightColor,\r\n\t\t\treflectedLight\r\n\t\t}, builder.stack, builder );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default DirectionalLightNode;\r\n\r\naddNodeClass( 'DirectionalLightNode', DirectionalLightNode );\r\n\r\naddLightNode( DirectionalLight, DirectionalLightNode );\r\n", "import AnalyticLightNode from './AnalyticLightNode.js';\r\nimport { lightTargetDirection } from './LightNode.js';\r\nimport { addLightNode } from './LightsNode.js';\r\nimport { getDistanceAttenuation } from './LightUtils.js';\r\nimport { uniform } from '../core/UniformNode.js';\r\nimport { smoothstep } from '../math/MathNode.js';\r\nimport { objectViewPosition } from '../accessors/Object3DNode.js';\r\nimport { positionView } from '../accessors/PositionNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\n\r\nimport { SpotLight } from 'three';\r\n\r\nclass SpotLightNode extends AnalyticLightNode {\r\n\r\n\tconstructor( light = null ) {\r\n\r\n\t\tsuper( light );\r\n\r\n\t\tthis.coneCosNode = uniform( 0 );\r\n\t\tthis.penumbraCosNode = uniform( 0 );\r\n\r\n\t\tthis.cutoffDistanceNode = uniform( 0 );\r\n\t\tthis.decayExponentNode = uniform( 0 );\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tsuper.update( frame );\r\n\r\n\t\tconst { light } = this;\r\n\r\n\t\tthis.coneCosNode.value = Math.cos( light.angle );\r\n\t\tthis.penumbraCosNode.value = Math.cos( light.angle * ( 1 - light.penumbra ) );\r\n\r\n\t\tthis.cutoffDistanceNode.value = light.distance;\r\n\t\tthis.decayExponentNode.value = light.decay;\r\n\r\n\t}\r\n\r\n\tgetSpotAttenuation( angleCosine ) {\r\n\r\n\t\tconst { coneCosNode, penumbraCosNode } = this;\r\n\r\n\t\treturn smoothstep( coneCosNode, penumbraCosNode, angleCosine );\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tsuper.setup( builder );\r\n\r\n\t\tconst lightingModel = builder.context.lightingModel;\r\n\r\n\t\tconst { colorNode, cutoffDistanceNode, decayExponentNode, light } = this;\r\n\r\n\t\tconst lVector = objectViewPosition( light ).sub( positionView ); // @TODO: Add it into LightNode\r\n\r\n\t\tconst lightDirection = lVector.normalize();\r\n\t\tconst angleCos = lightDirection.dot( lightTargetDirection( light ) );\r\n\t\tconst spotAttenuation = this.getSpotAttenuation( angleCos );\r\n\r\n\t\tconst lightDistance = lVector.length();\r\n\r\n\t\tconst lightAttenuation = getDistanceAttenuation( {\r\n\t\t\tlightDistance,\r\n\t\t\tcutoffDistance: cutoffDistanceNode,\r\n\t\t\tdecayExponent: decayExponentNode\r\n\t\t} );\r\n\r\n\t\tconst lightColor = colorNode.mul( spotAttenuation ).mul( lightAttenuation );\r\n\r\n\t\tconst reflectedLight = builder.context.reflectedLight;\r\n\r\n\t\tlightingModel.direct( {\r\n\t\t\tlightDirection,\r\n\t\t\tlightColor,\r\n\t\t\treflectedLight\r\n\t\t}, builder.stack, builder );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default SpotLightNode;\r\n\r\naddNodeClass( 'SpotLightNode', SpotLightNode );\r\n\r\naddLightNode( SpotLight, SpotLightNode );\r\n", "import { SpotLight } from 'three';\r\n\r\nclass IESSpotLight extends SpotLight {\r\n\r\n\tconstructor( color, intensity, distance, angle, penumbra, decay ) {\r\n\r\n\t\tsuper( color, intensity, distance, angle, penumbra, decay );\r\n\r\n\t\tthis.iesMap = null;\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.iesMap = source.iesMap;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default IESSpotLight;\r\n", "import SpotLightNode from './SpotLightNode.js';\r\nimport { addLightNode } from './LightsNode.js';\r\nimport { texture } from '../accessors/TextureNode.js';\r\nimport { vec2 } from '../shadernode/ShaderNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\n\r\nimport IESSpotLight from '../../lights/IESSpotLight.js';\r\n\r\nclass IESSpotLightNode extends SpotLightNode {\r\n\r\n\tgetSpotAttenuation( angleCosine ) {\r\n\r\n\t\tconst iesMap = this.light.iesMap;\r\n\r\n\t\tlet spotAttenuation = null;\r\n\r\n\t\tif ( iesMap && iesMap.isTexture === true ) {\r\n\r\n\t\t\tconst angle = angleCosine.acos().mul( 1.0 / Math.PI );\r\n\r\n\t\t\tspotAttenuation = texture( iesMap, vec2( angle, 0 ), 0 ).r;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tspotAttenuation = super.getSpotAttenuation( angleCosine );\r\n\r\n\t\t}\r\n\r\n\t\treturn spotAttenuation;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default IESSpotLightNode;\r\n\r\naddNodeClass( 'IESSpotLightNode', IESSpotLightNode );\r\n\r\naddLightNode( IESSpotLight, IESSpotLightNode );\r\n", "import AnalyticLightNode from './AnalyticLightNode.js';\r\nimport { addLightNode } from './LightsNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\n\r\nimport { AmbientLight } from 'three';\r\n\r\nclass AmbientLightNode extends AnalyticLightNode {\r\n\r\n\tconstructor( light = null ) {\r\n\r\n\t\tsuper( light );\r\n\r\n\t}\r\n\r\n\tsetup( { context } ) {\r\n\r\n\t\tcontext.irradiance.addAssign( this.colorNode );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default AmbientLightNode;\r\n\r\naddNodeClass( 'AmbientLightNode', AmbientLightNode );\r\n\r\naddLightNode( AmbientLight, AmbientLightNode );\r\n", "import AnalyticLightNode from './AnalyticLightNode.js';\r\nimport { addLightNode } from './LightsNode.js';\r\nimport { uniform } from '../core/UniformNode.js';\r\nimport { mix } from '../math/MathNode.js';\r\nimport { normalView } from '../accessors/NormalNode.js';\r\nimport { objectPosition } from '../accessors/Object3DNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\n\r\nimport { Color, HemisphereLight } from 'three';\r\n\r\nclass HemisphereLightNode extends AnalyticLightNode {\r\n\r\n\tconstructor( light = null ) {\r\n\r\n\t\tsuper( light );\r\n\r\n\t\tthis.lightPositionNode = objectPosition( light );\r\n\t\tthis.lightDirectionNode = this.lightPositionNode.normalize();\r\n\r\n\t\tthis.groundColorNode = uniform( new Color() );\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tconst { light } = this;\r\n\r\n\t\tsuper.update( frame );\r\n\r\n\t\tthis.lightPositionNode.object3d = light;\r\n\r\n\t\tthis.groundColorNode.value.copy( light.groundColor ).multiplyScalar( light.intensity );\r\n\r\n\t}\r\n\r\n\tsetup( builder ) {\r\n\r\n\t\tconst { colorNode, groundColorNode, lightDirectionNode } = this;\r\n\r\n\t\tconst dotNL = normalView.dot( lightDirectionNode );\r\n\t\tconst hemiDiffuseWeight = dotNL.mul( 0.5 ).add( 0.5 );\r\n\r\n\t\tconst irradiance = mix( groundColorNode, colorNode, hemiDiffuseWeight );\r\n\r\n\t\tbuilder.context.irradiance.addAssign( irradiance );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default HemisphereLightNode;\r\n\r\naddNodeClass( 'HemisphereLightNode', HemisphereLightNode );\r\n\r\naddLightNode( HemisphereLight, HemisphereLightNode );\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { uv } from '../accessors/UVNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, tslFn, nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nconst checkerShaderNode = tslFn( ( inputs ) => {\r\n\r\n\tconst uv = inputs.uv.mul( 2.0 );\r\n\r\n\tconst cx = uv.x.floor();\r\n\tconst cy = uv.y.floor();\r\n\tconst result = cx.add( cy ).mod( 2.0 );\r\n\r\n\treturn result.sign();\r\n\r\n} );\r\n\r\nclass CheckerNode extends TempNode {\r\n\r\n\tconstructor( uvNode = uv() ) {\r\n\r\n\t\tsuper( 'float' );\r\n\r\n\t\tthis.uvNode = uvNode;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\treturn checkerShaderNode( { uv: this.uvNode } );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default CheckerNode;\r\n\r\nexport const checker = nodeProxy( CheckerNode );\r\n\r\naddNodeElement( 'checker', checker );\r\n\r\naddNodeClass( 'CheckerNode', CheckerNode );\r\n", "import { createNodeFromType } from '../core/Node.js';\r\nimport { nodeObject } from '../shadernode/ShaderNode.js';\r\nimport { FileLoader, Loader } from 'three';\r\n\r\nclass NodeLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\tthis.textures = {};\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, ( text ) => {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( this.parse( JSON.parse( text ) ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tparseNodes( json ) {\r\n\r\n\t\tconst nodes = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( const nodeJSON of json ) {\r\n\r\n\t\t\t\tconst { uuid, type } = nodeJSON;\r\n\r\n\t\t\t\tnodes[ uuid ] = nodeObject( createNodeFromType( type ) ); // @TODO: Maybe nodeObjectify the node in createNodeFromType?\r\n\t\t\t\tnodes[ uuid ].uuid = uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst meta = { nodes, textures: this.textures };\r\n\r\n\t\t\tfor ( const nodeJSON of json ) {\r\n\r\n\t\t\t\tnodeJSON.meta = meta;\r\n\r\n\t\t\t\tconst node = nodes[ nodeJSON.uuid ];\r\n\t\t\t\tnode.deserialize( nodeJSON );\r\n\r\n\t\t\t\tdelete nodeJSON.meta;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn nodes;\r\n\r\n\t}\r\n\r\n\tparse( json ) {\r\n\r\n\t\tconst node = nodeObject( createNodeFromType( json.type ) );\r\n\t\tnode.uuid = json.uuid;\r\n\r\n\t\tconst nodes = this.parseNodes( json.nodes );\r\n\t\tconst meta = { nodes, textures: this.textures };\r\n\r\n\t\tjson.meta = meta;\r\n\r\n\t\tnode.deserialize( json );\r\n\r\n\t\tdelete json.meta;\r\n\r\n\t\treturn node;\r\n\r\n\t}\r\n\r\n\tsetTextures( value ) {\r\n\r\n\t\tthis.textures = value;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeLoader;\r\n", "import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\r\nimport { varying } from '../core/VaryingNode.js';\r\nimport { property } from '../core/PropertyNode.js';\r\nimport { attribute } from '../core/AttributeNode.js';\r\nimport { cameraProjectionMatrix } from '../accessors/CameraNode.js';\r\nimport { materialColor, materialPointWidth } from '../accessors/MaterialNode.js'; // or should this be a property, instead?\r\nimport { modelViewMatrix } from '../accessors/ModelNode.js';\r\nimport { positionGeometry } from '../accessors/PositionNode.js';\r\nimport { smoothstep } from '../math/MathNode.js';\r\nimport { tslFn, vec2, vec4 } from '../shadernode/ShaderNode.js';\r\nimport { uv } from '../accessors/UVNode.js';\r\nimport { viewport } from '../display/ViewportNode.js';\r\n\r\nimport { PointsMaterial } from 'three';\r\n\r\nconst defaultValues = new PointsMaterial();\r\n\r\nclass InstancedPointsNodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( params = {} ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.normals = false;\r\n\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.useAlphaToCoverage = true;\r\n\r\n\t\tthis.useColor = params.vertexColors;\r\n\r\n\t\tthis.pointWidth = 1;\r\n\r\n\t\tthis.pointColorNode = null;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setupShaders();\r\n\r\n\t\tthis.setValues( params );\r\n\r\n\t}\r\n\r\n\tsetupShaders() {\r\n\r\n\t\tconst useAlphaToCoverage = this.alphaToCoverage;\r\n\t\tconst useColor = this.useColor;\r\n\r\n\t\tthis.vertexNode = tslFn( () => {\r\n\r\n\t\t\t//vUv = uv;\r\n\t\t\tvarying( vec2(), 'vUv' ).assign( uv() ); // @TODO: Analyze other way to do this\r\n\r\n\t\t\tconst instancePosition = attribute( 'instancePosition' );\r\n\r\n\t\t\t// camera space\r\n\t\t\tconst mvPos = property( 'vec4', 'mvPos' );\r\n\t\t\tmvPos.assign( modelViewMatrix.mul( vec4( instancePosition, 1.0 ) ) );\r\n\r\n\t\t\tconst aspect = viewport.z.div( viewport.w );\r\n\r\n\t\t\t// clip space\r\n\t\t\tconst clipPos = cameraProjectionMatrix.mul( mvPos );\r\n\r\n\t\t\t// offset in ndc space\r\n\t\t\tconst offset = property( 'vec2', 'offset' );\r\n\t\t\toffset.assign( positionGeometry.xy );\r\n\t\t\toffset.assign( offset.mul( materialPointWidth ) );\r\n\t\t\toffset.assign( offset.div( viewport.z ) );\r\n\t\t\toffset.y.assign( offset.y.mul( aspect ) );\r\n\r\n\t\t\t// back to clip space\r\n\t\t\toffset.assign( offset.mul( clipPos.w ) );\r\n\r\n\t\t\t//clipPos.xy += offset;\r\n\t\t\tclipPos.assign( clipPos.add( vec4( offset, 0, 0 ) ) );\r\n\r\n\t\t\treturn clipPos;\r\n\r\n\t\t\t//vec4 mvPosition = mvPos; // this was used for somethihng...\r\n\r\n\t\t} )();\r\n\r\n\t\tthis.fragmentNode = tslFn( () => {\r\n\r\n\t\t\tconst vUv = varying( vec2(), 'vUv' );\r\n\r\n\t\t\t// force assignment into correct place in flow\r\n\t\t\tconst alpha = property( 'float', 'alpha' );\r\n\t\t\talpha.assign( 1 );\r\n\r\n\t\t\tconst a = vUv.x;\r\n\t\t\tconst b = vUv.y;\r\n\r\n\t\t\tconst len2 = a.mul( a ).add( b.mul( b ) );\r\n\r\n\t\t\tif ( useAlphaToCoverage ) {\r\n\r\n\t\t\t\t// force assignment out of following 'if' statement - to avoid uniform control flow errors\r\n\t\t\t\tconst dlen = property( 'float', 'dlen' );\r\n\t\t\t\tdlen.assign( len2.fwidth() );\r\n\r\n\t\t\t\talpha.assign( smoothstep( dlen.oneMinus(), dlen.add( 1 ), len2 ).oneMinus() );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlen2.greaterThan( 1.0 ).discard();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet pointColorNode;\r\n\r\n\t\t\tif ( this.pointColorNode ) {\r\n\r\n\t\t\t\tpointColorNode = this.pointColorNode;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( useColor ) {\r\n\r\n\t\t\t\t\tconst instanceColor = attribute( 'instanceColor' );\r\n\r\n\t\t\t\t\tpointColorNode = instanceColor.mul( materialColor );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tpointColorNode = materialColor;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn vec4( pointColorNode, alpha );\r\n\r\n\t\t} )();\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tget alphaToCoverage() {\r\n\r\n\t\treturn this.useAlphaToCoverage;\r\n\r\n\t}\r\n\r\n\tset alphaToCoverage( value ) {\r\n\r\n\t\tif ( this.useAlphaToCoverage !== value ) {\r\n\r\n\t\t\tthis.useAlphaToCoverage = value;\r\n\t\t\tthis.setupShaders();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default InstancedPointsNodeMaterial;\r\n\r\naddNodeMaterial( 'InstancedPointsNodeMaterial', InstancedPointsNodeMaterial );\r\n", "import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\r\n\r\nimport { LineBasicMaterial } from 'three';\r\n\r\nconst defaultValues = new LineBasicMaterial();\r\n\r\nclass LineBasicNodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isLineBasicNodeMaterial = true;\r\n\r\n\t\tthis.lights = false;\r\n\t\tthis.normals = false;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default LineBasicNodeMaterial;\r\n\r\naddNodeMaterial( 'LineBasicNodeMaterial', LineBasicNodeMaterial );\r\n", "import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\r\nimport { attribute } from '../core/AttributeNode.js';\r\nimport { varying } from '../core/VaryingNode.js';\r\nimport { materialLineDashSize, materialLineGapSize, materialLineScale } from '../accessors/MaterialNode.js';\r\nimport { dashSize, gapSize } from '../core/PropertyNode.js';\r\nimport { float } from '../shadernode/ShaderNode.js';\r\nimport { LineDashedMaterial } from 'three';\r\n\r\nconst defaultValues = new LineDashedMaterial();\r\n\r\nclass LineDashedNodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isLineDashedNodeMaterial = true;\r\n\r\n\t\tthis.lights = false;\r\n\t\tthis.normals = false;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.offsetNode = null;\r\n\t\tthis.dashScaleNode = null;\r\n\t\tthis.dashSizeNode = null;\r\n\t\tthis.gapSizeNode = null;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tsetupVariants() {\r\n\r\n\t\tconst offsetNode = this.offsetNode;\r\n\t\tconst dashScaleNode = this.dashScaleNode ? float( this.dashScaleNode ) : materialLineScale;\r\n\t\tconst dashSizeNode = this.dashSizeNode ? float( this.dashSizeNode ) : materialLineDashSize;\r\n\t\tconst gapSizeNode = this.dashSizeNode ? float( this.dashGapNode ) : materialLineGapSize;\r\n\r\n\t\tdashSize.assign( dashSizeNode );\r\n\t\tgapSize.assign( gapSizeNode );\r\n\r\n\t\tconst vLineDistance = varying( attribute( 'lineDistance' ).mul( dashScaleNode ) );\r\n\t\tconst vLineDistanceOffset = offsetNode ? vLineDistance.add( offsetNode ) : vLineDistance;\r\n\r\n\t\tvLineDistanceOffset.mod( dashSize.add( gapSize ) ).greaterThan( dashSize ).discard();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default LineDashedNodeMaterial;\r\n\r\naddNodeMaterial( 'LineDashedNodeMaterial', LineDashedNodeMaterial );\r\n", "import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\r\nimport { temp } from '../core/VarNode.js';\r\nimport { varying } from '../core/VaryingNode.js';\r\nimport { property, varyingProperty } from '../core/PropertyNode.js';\r\nimport { attribute } from '../core/AttributeNode.js';\r\nimport { cameraProjectionMatrix } from '../accessors/CameraNode.js';\r\nimport { materialColor, materialLineScale, materialLineDashSize, materialLineGapSize, materialLineDashOffset, materialLineWidth } from '../accessors/MaterialNode.js';\r\nimport { modelViewMatrix } from '../accessors/ModelNode.js';\r\nimport { positionGeometry } from '../accessors/PositionNode.js';\r\nimport { mix, smoothstep } from '../math/MathNode.js';\r\nimport { tslFn, float, vec2, vec3, vec4, If } from '../shadernode/ShaderNode.js';\r\nimport { uv } from '../accessors/UVNode.js';\r\nimport { viewport } from '../display/ViewportNode.js';\r\nimport { dashSize, gapSize } from '../core/PropertyNode.js';\r\n\r\nimport { LineDashedMaterial } from 'three';\r\n\r\nconst defaultValues = new LineDashedMaterial();\r\n\r\nclass Line2NodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( params = {} ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.normals = false;\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.useAlphaToCoverage = true;\r\n\t\tthis.useColor = params.vertexColors;\r\n\t\tthis.useDash = params.dashed;\r\n\t\tthis.useWorldUnits = false;\r\n\r\n\t\tthis.dashOffset = 0;\r\n\t\tthis.lineWidth = 1;\r\n\r\n\t\tthis.lineColorNode = null;\r\n\r\n\t\tthis.offsetNode = null;\r\n\t\tthis.dashScaleNode = null;\r\n\t\tthis.dashSizeNode = null;\r\n\t\tthis.gapSizeNode = null;\r\n\r\n\t\tthis.setupShaders();\r\n\r\n\t\tthis.setValues( params );\r\n\r\n\t}\r\n\r\n\tsetupShaders() {\r\n\r\n\t\tconst useAlphaToCoverage = this.alphaToCoverage;\r\n\t\tconst useColor = this.useColor;\r\n\t\tconst useDash = this.dashed;\r\n\t\tconst useWorldUnits = this.worldUnits;\r\n\r\n\t\tconst trimSegment = tslFn( ( { start, end } ) => {\r\n\r\n\t\t\tconst a = cameraProjectionMatrix.element( 2 ).element( 2 ); // 3nd entry in 3th column\r\n\t\t\tconst b = cameraProjectionMatrix.element( 3 ).element( 2 ); // 3nd entry in 4th column\r\n\t\t\tconst nearEstimate = b.mul( - 0.5 ).div( a );\r\n\r\n\t\t\tconst alpha = nearEstimate.sub( start.z ).div( end.z.sub( start.z ) );\r\n\r\n\t\t\treturn vec4( mix( start.xyz, end.xyz, alpha ), end.w );\r\n\r\n\t\t} );\r\n\r\n\t\tthis.vertexNode = tslFn( () => {\r\n\r\n\t\t\tvaryingProperty( 'vec2', 'vUv' ).assign( uv() );\r\n\r\n\t\t\tconst instanceStart = attribute( 'instanceStart' );\r\n\t\t\tconst instanceEnd = attribute( 'instanceEnd' );\r\n\r\n\t\t\t// camera space\r\n\r\n\t\t\tconst start = property( 'vec4', 'start' );\r\n\t\t\tconst end = property( 'vec4', 'end' );\r\n\r\n\t\t\tstart.assign( modelViewMatrix.mul( vec4( instanceStart, 1.0 ) ) ); // force assignment into correct place in flow\r\n\t\t\tend.assign( modelViewMatrix.mul( vec4( instanceEnd, 1.0 ) ) );\r\n\r\n\t\t\tif ( useWorldUnits ) {\r\n\r\n\t\t\t\tvaryingProperty( 'vec3', 'worldStart' ).assign( start.xyz );\r\n\t\t\t\tvaryingProperty( 'vec3', 'worldEnd' ).assign( end.xyz );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst aspect = viewport.z.div( viewport.w );\r\n\r\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\r\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\r\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\r\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\r\n\r\n\t\t\tconst perspective = cameraProjectionMatrix.element( 2 ).element( 3 ).equal( - 1.0 ); // 4th entry in the 3rd column\r\n\r\n\t\t\tIf( perspective, () => {\r\n\r\n\t\t\t\tIf( start.z.lessThan( 0.0 ).and( end.z.greaterThan( 0.0 ) ), () => {\r\n\r\n\t\t\t\t\tend.assign( trimSegment( { start: start, end: end } ) );\r\n\r\n\t\t\t\t} ).elseif( end.z.lessThan( 0.0 ).and( start.z.greaterThanEqual( 0.0 ) ), () => {\r\n\r\n\t\t\t\t\tstart.assign( trimSegment( { start: end, end: start } ) );\r\n\r\n\t\t\t \t} );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\t// clip space\r\n\t\t\tconst clipStart = cameraProjectionMatrix.mul( start );\r\n\t\t\tconst clipEnd = cameraProjectionMatrix.mul( end );\r\n\r\n\t\t\t// ndc space\r\n\t\t\tconst ndcStart = clipStart.xyz.div( clipStart.w );\r\n\t\t\tconst ndcEnd = clipEnd.xyz.div( clipEnd.w );\r\n\r\n\t\t\t// direction\r\n\t\t\tconst dir = ndcEnd.xy.sub( ndcStart.xy ).temp();\r\n\r\n\t\t\t// account for clip-space aspect ratio\r\n\t\t\tdir.x.assign( dir.x.mul( aspect ) );\r\n\t\t\tdir.assign( dir.normalize() );\r\n\r\n\t\t\tconst clip = temp( vec4() );\r\n\r\n\t\t\tif ( useWorldUnits ) {\r\n\r\n\t\t\t\t// get the offset direction as perpendicular to the view vector\r\n\r\n\t\t\t\tconst worldDir = end.xyz.sub( start.xyz ).normalize();\r\n\t\t\t\tconst tmpFwd = mix( start.xyz, end.xyz, 0.5 ).normalize();\r\n\t\t\t\tconst worldUp = worldDir.cross( tmpFwd ).normalize();\r\n\t\t\t\tconst worldFwd = worldDir.cross( worldUp );\r\n\r\n\t\t\t\tconst worldPos = varyingProperty( 'vec4', 'worldPos' );\r\n\r\n\t\t\t\tworldPos.assign( positionGeometry.y.lessThan( 0.5 ).cond( start, end) );\r\n\r\n\t\t\t\t// height offset\r\n\t\t\t\tconst hw = materialLineWidth.mul( 0.5 );\r\n\t\t\t\tworldPos.addAssign( vec4( positionGeometry.x.lessThan( 0.0 ).cond( worldUp.mul( hw ), worldUp.mul( hw ).negate() ), 0 ) );\r\n\r\n\t\t\t\t// don't extend the line if we're rendering dashes because we\r\n\t\t\t\t// won't be rendering the endcaps\r\n\t\t\t\tif ( ! useDash ) {\r\n\r\n\t\t\t\t\t// cap extension\r\n\t\t\t\t\tworldPos.addAssign( vec4( positionGeometry.y.lessThan( 0.5 ).cond( worldDir.mul( hw ).negate(), worldDir.mul( hw ) ), 0 ) );\r\n\r\n\t\t\t\t\t// add width to the box\r\n\t\t\t\t\tworldPos.addAssign( vec4( worldFwd.mul( hw ), 0 ) );\r\n\r\n\t\t\t\t\t// endcaps\r\n\t\t\t\t\tIf( positionGeometry.y.greaterThan( 1.0 ).or( positionGeometry.y.lessThan( 0.0 ) ), () => {\r\n\r\n\t\t\t\t\t\tworldPos.subAssign( vec4( worldFwd.mul( 2.0 ).mul( hw ), 0 ) );\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// project the worldpos\r\n\t\t\t\tclip.assign( cameraProjectionMatrix.mul( worldPos ) );\r\n\r\n\t\t\t\t// shift the depth of the projected points so the line\r\n\t\t\t\t// segments overlap neatly\r\n\t\t\t\tconst clipPose = temp( vec3() );\r\n\r\n\t\t\t\tclipPose.assign( positionGeometry.y.lessThan( 0.5 ).cond( ndcStart, ndcEnd ) );\r\n\t\t\t\tclip.z.assign( clipPose.z.mul( clip.w ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst offset = property( 'vec2', 'offset' );\r\n\r\n\t\t\t\toffset.assign( vec2( dir.y, dir.x.negate() ) );\r\n\r\n\t\t\t\t// undo aspect ratio adjustment\r\n\t\t\t\tdir.x.assign( dir.x.div( aspect ) );\r\n\t\t\t\toffset.x.assign( offset.x.div( aspect ) );\r\n\r\n\t\t\t\t// sign flip\r\n\t\t\t\toffset.assign( positionGeometry.x.lessThan( 0.0 ).cond( offset.negate(), offset ) );\r\n\r\n\t\t\t\t// endcaps\r\n\t\t\t\tIf( positionGeometry.y.lessThan( 0.0 ), () => {\r\n\r\n\t\t\t\t\toffset.assign( offset.sub( dir ) );\r\n\r\n\t\t\t\t} ).elseif( positionGeometry.y.greaterThan( 1.0 ), () => {\r\n\r\n\t\t\t\t\toffset.assign( offset.add( dir ) );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// adjust for linewidth\r\n\t\t\t\toffset.assign( offset.mul( materialLineWidth ) );\r\n\r\n\t\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\r\n\t\t\t\toffset.assign( offset.div( viewport.w ) );\r\n\r\n\t\t\t\t// select end\r\n\t\t\t\tclip.assign( positionGeometry.y.lessThan( 0.5 ).cond( clipStart, clipEnd ) );\r\n\r\n\t\t\t\t// back to clip space\r\n\t\t\t\toffset.assign( offset.mul( clip.w ) );\r\n\r\n\t\t\t\tclip.assign( clip.add( vec4( offset, 0, 0 ) ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn clip;\r\n\r\n\t\t} )();\r\n\r\n\t\tconst closestLineToLine = tslFn( ( { p1, p2, p3, p4 } ) => {\r\n\r\n\t\t\tconst p13 = p1.sub( p3 );\r\n\t\t\tconst p43 = p4.sub( p3 );\r\n\r\n\t\t\tconst p21 = p2.sub( p1 );\r\n\r\n\t\t\tconst d1343 = p13.dot( p43 );\r\n\t\t\tconst d4321 = p43.dot( p21 );\r\n\t\t\tconst d1321 = p13.dot( p21 );\r\n\t\t\tconst d4343 = p43.dot( p43 );\r\n\t\t\tconst d2121 = p21.dot( p21 );\r\n\r\n\t\t\tconst denom = d2121.mul( d4343 ).sub( d4321.mul( d4321 ) );\r\n\t\t\tconst numer = d1343.mul( d4321 ).sub( d1321.mul( d4343 ) );\r\n\r\n\t\t\tconst mua = numer.div( denom ).clamp();\r\n\t\t\tconst mub = d1343.add( d4321.mul( mua ) ).div( d4343 ).clamp();\r\n\r\n\t\t\treturn vec2( mua, mub );\r\n\r\n\t\t} );\r\n\r\n\t\tthis.fragmentNode = tslFn( () => {\r\n\r\n\t\t\tconst vUv = varyingProperty( 'vec2', 'vUv' );\r\n\r\n\t\t\tif ( useDash ) {\r\n\r\n\t\t\t\tconst offsetNode = this.offsetNode ? float( this.offsetNodeNode ) : materialLineDashOffset;\r\n\t\t\t\tconst dashScaleNode = this.dashScaleNode ? float( this.dashScaleNode ) : materialLineScale;\r\n\t\t\t\tconst dashSizeNode = this.dashSizeNode ? float( this.dashSizeNode ) : materialLineDashSize;\r\n\t\t\t\tconst gapSizeNode = this.dashSizeNode ? float( this.dashGapNode ) : materialLineGapSize;\r\n\r\n\t\t\t\tdashSize.assign( dashSizeNode );\r\n\t\t\t\tgapSize.assign( gapSizeNode );\r\n\r\n\t\t\t\tconst instanceDistanceStart = attribute( 'instanceDistanceStart' );\r\n\t\t\t\tconst instanceDistanceEnd = attribute( 'instanceDistanceEnd' );\r\n\r\n\t\t\t\tconst lineDistance = positionGeometry.y.lessThan( 0.5 ).cond( dashScaleNode.mul( instanceDistanceStart ), materialLineScale.mul( instanceDistanceEnd ) );\r\n\r\n\t\t\t\tconst vLineDistance = varying( lineDistance.add( materialLineDashOffset ) );\r\n\t\t\t\tconst vLineDistanceOffset = offsetNode ? vLineDistance.add( offsetNode ) : vLineDistance;\r\n\r\n\t\t\t\tvUv.y.lessThan( - 1.0 ).or( vUv.y.greaterThan( 1.0 ) ).discard(); // discard endcaps\r\n\t\t\t\tvLineDistanceOffset.mod( dashSize.add( gapSize ) ).greaterThan( dashSize ).discard(); // todo - FIX\r\n\r\n\t\t\t}\r\n\r\n\t\t\t // force assignment into correct place in flow\r\n\t\t\tconst alpha = property( 'float', 'alpha' );\r\n\t\t\talpha.assign( 1 );\r\n\r\n\t\t\tif ( useWorldUnits ) {\r\n\r\n\t\t\t\tconst worldStart = varyingProperty( 'vec3', 'worldStart' );\r\n\t\t\t\tconst worldEnd = varyingProperty( 'vec3', 'worldEnd' );\r\n\r\n\t\t\t\t// Find the closest points on the view ray and the line segment\r\n\t\t\t\tconst rayEnd = varyingProperty( 'vec4', 'worldPos' ).xyz.normalize().mul( 1e5 );\r\n\t\t\t\tconst lineDir = worldEnd.sub( worldStart );\r\n\t\t\t\tconst params = closestLineToLine( { p1: worldStart, p2: worldEnd, p3: vec3( 0.0, 0.0, 0.0 ), p4: rayEnd } );\r\n\r\n\t\t\t\tconst p1 = worldStart.add( lineDir.mul( params.x ) );\r\n\t\t\t\tconst p2 = rayEnd.mul( params.y );\r\n\t\t\t\tconst delta = p1.sub( p2 );\r\n\t\t\t\tconst len = delta.length();\r\n\t\t\t\tconst norm = len.div( materialLineWidth );\r\n\r\n\t\t\t\tif ( ! useDash ) {\r\n\r\n\t\t\t\t\tif ( useAlphaToCoverage ) {\r\n\r\n\t\t\t\t\t\tconst dnorm = norm.fwidth();\r\n\t\t\t\t\t\talpha.assign( smoothstep( dnorm.negate().add( 0.5 ), dnorm.add( 0.5 ), norm ).oneMinus() );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tnorm.greaterThan( 0.5 ).discard();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// round endcaps\r\n\r\n\t\t\t\tif ( useAlphaToCoverage ) {\r\n\r\n\t\t\t\t\tconst a = vUv.x;\r\n\t\t\t\t\tconst b = vUv.y.greaterThan( 0.0 ).cond( vUv.y.sub( 1.0 ), vUv.y.add( 1.0 ) );\r\n\r\n\t\t\t\t\tconst len2 = a.mul( a ).add( b.mul( b ) );\r\n\r\n\t\t\t\t\t// force assignment out of following 'if' statement - to avoid uniform control flow errors\r\n\t\t\t\t\tconst dlen = property( 'float', 'dlen' );\r\n\t\t\t\t\tdlen.assign( len2.fwidth() );\r\n\r\n\t\t\t\t\tIf( vUv.y.abs().greaterThan( 1.0 ), () => {\r\n\r\n\t\t\t\t\t\talpha.assign( smoothstep( dlen.oneMinus(), dlen.add( 1 ), len2 ).oneMinus() );\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tIf( vUv.y.abs().greaterThan( 1.0 ), () => {\r\n\r\n\t\t\t\t\t\tconst a = vUv.x;\r\n\t\t\t\t\t\tconst b = vUv.y.greaterThan( 0.0 ).cond( vUv.y.sub( 1.0 ), vUv.y.add( 1.0 ) );\r\n\t\t\t\t\t\tconst len2 = a.mul( a ).add( b.mul( b ) );\r\n\r\n\t\t\t\t\t\tlen2.greaterThan( 1.0 ).discard();\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet lineColorNode;\r\n\r\n\t\t\tif ( this.lineColorNode ) {\r\n\r\n\t\t\t\tlineColorNode = this.lineColorNode;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( useColor ) {\r\n\r\n\t\t\t\t\tconst instanceColorStart = attribute( 'instanceColorStart' );\r\n\t\t\t\t\tconst instanceColorEnd = attribute( 'instanceColorEnd' );\r\n\r\n\t\t\t\t\tconst instanceColor = positionGeometry.y.lessThan( 0.5 ).cond( instanceColorStart, instanceColorEnd );\r\n\r\n\t\t\t\t\tlineColorNode = instanceColor.mul( materialColor );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tlineColorNode = materialColor;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn vec4( lineColorNode, alpha );\r\n\r\n\t\t} )();\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\r\n\tget worldUnits() {\r\n\r\n\t\treturn this.useWorldUnits;\r\n\r\n\t}\r\n\r\n\tset worldUnits( value ) {\r\n\r\n\t\tif ( this.useWorldUnits !== value ) {\r\n\r\n\t\t\tthis.useWorldUnits = value;\r\n\t\t\tthis.setupShaders();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tget dashed() {\r\n\r\n\t\treturn this.useDash;\r\n\r\n\t}\r\n\r\n\tset dashed( value ) {\r\n\r\n\t\tif ( this.useDash !== value ) {\r\n\r\n\t\t\tthis.useDash = value;\r\n\t\t\tthis.setupShaders();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tget alphaToCoverage() {\r\n\r\n\t\treturn this.useAlphaToCoverage;\r\n\r\n\t}\r\n\r\n\tset alphaToCoverage( value ) {\r\n\r\n\t\tif ( this.useAlphaToCoverage !== value ) {\r\n\r\n\t\t\tthis.useAlphaToCoverage = value;\r\n\t\t\tthis.setupShaders();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default Line2NodeMaterial;\r\n\r\naddNodeMaterial( 'Line2NodeMaterial', Line2NodeMaterial );\r\n", "import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\r\nimport { diffuseColor } from '../core/PropertyNode.js';\r\nimport { directionToColor } from '../utils/PackingNode.js';\r\nimport { materialOpacity } from '../accessors/MaterialNode.js';\r\nimport { transformedNormalView } from '../accessors/NormalNode.js';\r\nimport { float, vec4 } from '../shadernode/ShaderNode.js';\r\n\r\nimport { MeshNormalMaterial } from 'three';\r\n\r\nconst defaultValues = new MeshNormalMaterial();\r\n\r\nclass MeshNormalNodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshNormalNodeMaterial = true;\r\n\r\n\t\tthis.colorSpaced = false;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tsetupDiffuseColor() {\r\n\r\n\t\tconst opacityNode = this.opacityNode ? float( this.opacityNode ) : materialOpacity;\r\n\r\n\t\tdiffuseColor.assign( vec4( directionToColor( transformedNormalView ), opacityNode ) );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default MeshNormalNodeMaterial;\r\n\r\naddNodeMaterial( 'MeshNormalNodeMaterial', MeshNormalNodeMaterial );\r\n", "import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\r\n\r\nimport { MeshBasicMaterial } from 'three';\r\n\r\nconst defaultValues = new MeshBasicMaterial();\r\n\r\nclass MeshBasicNodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshBasicNodeMaterial = true;\r\n\r\n\t\tthis.lights = false;\r\n\t\t//this.normals = false; @TODO: normals usage by context\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default MeshBasicNodeMaterial;\r\n\r\naddNodeMaterial( 'MeshBasicNodeMaterial', MeshBasicNodeMaterial );\r\n", "import { tslFn } from '../../shadernode/ShaderNode.js';\r\n\r\nconst F_Schlick = tslFn( ( { f0, f90, dotVH } ) => {\r\n\r\n\t// Original approximation by Christophe Schlick '94\r\n\t// float fresnel = pow( 1.0 - dotVH, 5.0 );\r\n\r\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\r\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\r\n\tconst fresnel = dotVH.mul( - 5.55473 ).sub( 6.98316 ).mul( dotVH ).exp2();\r\n\r\n\treturn f0.mul( fresnel.oneMinus() ).add( f90.mul( fresnel ) );\r\n\r\n} ); // validated\r\n\r\nexport default F_Schlick;\r\n", "import { tslFn } from '../../shadernode/ShaderNode.js';\r\n\r\nconst BRDF_Lambert = tslFn( ( inputs ) => {\r\n\r\n\treturn inputs.diffuseColor.mul( 1 / Math.PI ); // punctual light\r\n\r\n} ); // validated\r\n\r\nexport default BRDF_Lambert;\r\n", "import LightingModel from '../core/LightingModel.js';\r\nimport F_Schlick from './BSDF/F_Schlick.js';\r\nimport BRDF_Lambert from './BSDF/BRDF_Lambert.js';\r\nimport { diffuseColor } from '../core/PropertyNode.js';\r\nimport { transformedNormalView } from '../accessors/NormalNode.js';\r\nimport { materialSpecularStrength } from '../accessors/MaterialNode.js';\r\nimport { shininess, specularColor } from '../core/PropertyNode.js';\r\nimport { positionViewDirection } from '../accessors/PositionNode.js';\r\nimport { tslFn, float } from '../shadernode/ShaderNode.js';\r\n\r\nconst G_BlinnPhong_Implicit = () => float( 0.25 );\r\n\r\nconst D_BlinnPhong = tslFn( ( { dotNH } ) => {\r\n\r\n\treturn shininess.mul( 0.5 / Math.PI ).add( 1.0 ).mul( dotNH.pow( shininess ) );\r\n\r\n} );\r\n\r\nconst BRDF_BlinnPhong = tslFn( ( { lightDirection } ) => {\r\n\r\n\tconst halfDir = lightDirection.add( positionViewDirection ).normalize();\r\n\r\n\tconst dotNH = transformedNormalView.dot( halfDir ).clamp();\r\n\tconst dotVH = positionViewDirection.dot( halfDir ).clamp();\r\n\r\n\tconst F = F_Schlick( { f0: specularColor, f90: 1.0, dotVH } );\r\n\tconst G = G_BlinnPhong_Implicit();\r\n\tconst D = D_BlinnPhong( { dotNH } );\r\n\r\n\treturn F.mul( G ).mul( D );\r\n\r\n} );\r\n\r\nclass PhongLightingModel extends LightingModel {\r\n\r\n\tconstructor( specular = true ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.specular = specular;\r\n\r\n\t}\r\n\r\n\tdirect( { lightDirection, lightColor, reflectedLight } ) {\r\n\r\n\t\tconst dotNL = transformedNormalView.dot( lightDirection ).clamp();\r\n\t\tconst irradiance = dotNL.mul( lightColor );\r\n\r\n\t\treflectedLight.directDiffuse.addAssign( irradiance.mul( BRDF_Lambert( { diffuseColor: diffuseColor.rgb } ) ) );\r\n\r\n\t\tif ( this.specular === true ) {\r\n\r\n\t\t\treflectedLight.directSpecular.addAssign( irradiance.mul( BRDF_BlinnPhong( { lightDirection } ) ).mul( materialSpecularStrength ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tindirectDiffuse( { irradiance, reflectedLight } ) {\r\n\r\n\t\treflectedLight.indirectDiffuse.addAssign( irradiance.mul( BRDF_Lambert( { diffuseColor } ) ) );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default PhongLightingModel;\r\n", "import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\r\nimport PhongLightingModel from '../functions/PhongLightingModel.js';\r\n\r\nimport { MeshLambertMaterial } from 'three';\r\n\r\nconst defaultValues = new MeshLambertMaterial();\r\n\r\nclass MeshLambertNodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshLambertNodeMaterial = true;\r\n\r\n\t\tthis.lights = true;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tsetupLightingModel( /*builder*/ ) {\r\n\r\n\t\treturn new PhongLightingModel( false ); // ( specular ) -> force lambert\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default MeshLambertNodeMaterial;\r\n\r\naddNodeMaterial( 'MeshLambertNodeMaterial', MeshLambertNodeMaterial );\r\n", "import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\r\nimport { shininess, specularColor } from '../core/PropertyNode.js';\r\nimport { materialShininess, materialSpecularColor } from '../accessors/MaterialNode.js';\r\nimport { float } from '../shadernode/ShaderNode.js';\r\nimport PhongLightingModel from '../functions/PhongLightingModel.js';\r\n\r\nimport { MeshPhongMaterial } from 'three';\r\n\r\nconst defaultValues = new MeshPhongMaterial();\r\n\r\nclass MeshPhongNodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshPhongNodeMaterial = true;\r\n\r\n\t\tthis.lights = true;\r\n\r\n\t\tthis.shininessNode = null;\r\n\t\tthis.specularNode = null;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tsetupLightingModel( /*builder*/ ) {\r\n\r\n\t\treturn new PhongLightingModel();\r\n\r\n\t}\r\n\r\n\tsetupVariants() {\r\n\r\n\t\t// SHININESS\r\n\r\n\t\tconst shininessNode = ( this.shininessNode ? float( this.shininessNode ) : materialShininess ).max( 1e-4 ); // to prevent pow( 0.0, 0.0 )\r\n\r\n\t\tshininess.assign( shininessNode );\r\n\r\n\t\t// SPECULAR COLOR\r\n\r\n\t\tconst specularNode = this.specularNode || materialSpecularColor;\r\n\r\n\t\tspecularColor.assign( specularNode );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.shininessNode = source.shininessNode;\r\n\t\tthis.specularNode = source.specularNode;\r\n\r\n\t\treturn super.copy( source );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default MeshPhongNodeMaterial;\r\n\r\naddNodeMaterial( 'MeshPhongNodeMaterial', MeshPhongNodeMaterial );\r\n", "import { normalGeometry } from '../../accessors/NormalNode.js';\r\nimport { tslFn } from '../../shadernode/ShaderNode.js';\r\n\r\nconst getGeometryRoughness = tslFn( () => {\r\n\r\n\tconst dxy = normalGeometry.dFdx().abs().max( normalGeometry.dFdy().abs() );\r\n\tconst geometryRoughness = dxy.x.max( dxy.y ).max( dxy.z );\r\n\r\n\treturn geometryRoughness;\r\n\r\n} );\r\n\r\nexport default getGeometryRoughness;\r\n", "import getGeometryRoughness from './getGeometryRoughness.js';\r\nimport { tslFn } from '../../shadernode/ShaderNode.js';\r\n\r\nconst getRoughness = tslFn( ( inputs ) => {\r\n\r\n\tconst { roughness } = inputs;\r\n\r\n\tconst geometryRoughness = getGeometryRoughness();\r\n\r\n\tlet roughnessFactor = roughness.max( 0.0525 ); // 0.0525 corresponds to the base mip of a 256 cubemap.\r\n\troughnessFactor = roughnessFactor.add( geometryRoughness );\r\n\troughnessFactor = roughnessFactor.min( 1.0 );\r\n\r\n\treturn roughnessFactor;\r\n\r\n} );\r\n\r\nexport default getRoughness;\r\n", "import { div } from '../../math/OperatorNode.js';\r\nimport { EPSILON } from '../../math/MathNode.js';\r\nimport { tslFn } from '../../shadernode/ShaderNode.js';\r\n\r\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\r\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\nconst V_GGX_SmithCorrelated = tslFn( ( inputs ) => {\r\n\r\n\tconst { alpha, dotNL, dotNV } = inputs;\r\n\r\n\tconst a2 = alpha.pow2();\r\n\r\n\tconst gv = dotNL.mul( a2.add( a2.oneMinus().mul( dotNV.pow2() ) ).sqrt() );\r\n\tconst gl = dotNV.mul( a2.add( a2.oneMinus().mul( dotNL.pow2() ) ).sqrt() );\r\n\r\n\treturn div( 0.5, gv.add( gl ).max( EPSILON ) );\r\n\r\n} ).setLayout( {\r\n\tname: 'V_GGX_SmithCorrelated',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'alpha', type: 'float' },\r\n\t\t{ name: 'dotNL', type: 'float' },\r\n\t\t{ name: 'dotNV', type: 'float' }\r\n\t]\r\n} ); // validated\r\n\r\nexport default V_GGX_SmithCorrelated;\r\n", "import { tslFn } from '../../shadernode/ShaderNode.js';\r\n\r\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\r\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\r\n// alpha is \"roughness squared\" in Disney’s reparameterization\r\nconst D_GGX = tslFn( ( { alpha, dotNH } ) => {\r\n\r\n\tconst a2 = alpha.pow2();\r\n\r\n\tconst denom = dotNH.pow2().mul( a2.oneMinus() ).oneMinus(); // avoid alpha = 0 with dotNH = 1\r\n\r\n\treturn a2.div( denom.pow2() ).mul( 1 / Math.PI );\r\n\r\n} ).setLayout( {\r\n\tname: 'D_GGX',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'alpha', type: 'float' },\r\n\t\t{ name: 'dotNH', type: 'float' }\r\n\t]\r\n} ); // validated\r\n\r\nexport default D_GGX;\r\n", "import F_Schlick from './F_Schlick.js';\r\nimport V_GGX_SmithCorrelated from './V_GGX_SmithCorrelated.js';\r\nimport D_GGX from './D_GGX.js';\r\nimport { transformedNormalView } from '../../accessors/NormalNode.js';\r\nimport { positionViewDirection } from '../../accessors/PositionNode.js';\r\nimport { iridescence } from '../../core/PropertyNode.js';\r\nimport { tslFn } from '../../shadernode/ShaderNode.js';\r\n\r\n// GGX Distribution, Schlick Fresnel, GGX_SmithCorrelated Visibility\r\nconst BRDF_GGX = tslFn( ( inputs ) => {\r\n\r\n\tconst { lightDirection, f0, f90, roughness, iridescenceFresnel } = inputs;\r\n\r\n\tconst normalView = inputs.normalView || transformedNormalView;\r\n\r\n\tconst alpha = roughness.pow2(); // UE4's roughness\r\n\r\n\tconst halfDir = lightDirection.add( positionViewDirection ).normalize();\r\n\r\n\tconst dotNL = normalView.dot( lightDirection ).clamp();\r\n\tconst dotNV = normalView.dot( positionViewDirection ).clamp(); // @ TODO: Move to core dotNV\r\n\tconst dotNH = normalView.dot( halfDir ).clamp();\r\n\tconst dotVH = positionViewDirection.dot( halfDir ).clamp();\r\n\r\n\tlet F = F_Schlick( { f0, f90, dotVH } );\r\n\r\n\tif ( iridescenceFresnel ) {\r\n\r\n\t\tF = iridescence.mix( F, iridescenceFresnel );\r\n\r\n\t}\r\n\r\n\tconst V = V_GGX_SmithCorrelated( { alpha, dotNL, dotNV } );\r\n\tconst D = D_GGX( { alpha, dotNH } );\r\n\r\n\treturn F.mul( V ).mul( D );\r\n\r\n} ); // validated\r\n\r\nexport default BRDF_GGX;\r\n", "import { tslFn, vec2, vec4 } from '../../shadernode/ShaderNode.js';\r\n\r\n// Analytical approximation of the DFG LUT, one half of the\r\n// split-sum approximation used in indirect specular lighting.\r\n// via 'environmentBRDF' from \"Physically Based Shading on Mobile\"\r\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile\r\nconst DFGApprox = tslFn( ( { roughness, dotNV } ) => {\r\n\r\n\tconst c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\r\n\r\n\tconst c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\r\n\r\n\tconst r = roughness.mul( c0 ).add( c1 );\r\n\r\n\tconst a004 = r.x.mul( r.x ).min( dotNV.mul( - 9.28 ).exp2() ).mul( r.x ).add( r.y );\r\n\r\n\tconst fab = vec2( - 1.04, 1.04 ).mul( a004 ).add( r.zw );\r\n\r\n\treturn fab;\r\n\r\n} ).setLayout( {\r\n\tname: 'DFGApprox',\r\n\ttype: 'vec2',\r\n\tinputs: [\r\n\t\t{ name: 'roughness', type: 'float' },\r\n\t\t{ name: 'dotNV', type: 'vec3' }\r\n\t]\r\n} );\r\n\r\nexport default DFGApprox;\r\n", "import DFGApprox from './DFGApprox.js';\r\nimport { tslFn } from '../../shadernode/ShaderNode.js';\r\n\r\nconst EnvironmentBRDF = tslFn( ( inputs ) => {\r\n\r\n\tconst { dotNV, specularColor, specularF90, roughness } = inputs;\r\n\r\n\tconst fab = DFGApprox( { dotNV, roughness } );\r\n\treturn specularColor.mul( fab.x ).add( specularF90.mul( fab.y ) );\r\n\r\n} );\r\n\r\nexport default EnvironmentBRDF;\r\n", "import { tslFn, vec3 } from '../../shadernode/ShaderNode.js';\r\n\r\nconst Schlick_to_F0 = tslFn( ( { f, f90, dotVH } ) => {\r\n\r\n\tconst x = dotVH.oneMinus().saturate();\r\n\tconst x2 = x.mul( x );\r\n\tconst x5 = x.mul( x2, x2 ).clamp( 0, .9999 );\r\n\r\n\treturn f.sub( vec3( f90 ).mul( x5 ) ).div( x5.oneMinus() );\r\n\r\n} ).setLayout( {\r\n\tname: 'Schlick_to_F0',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'f', type: 'vec3' },\r\n\t\t{ name: 'f90', type: 'float' },\r\n\t\t{ name: 'dotVH', type: 'float' }\r\n\t]\r\n} );\r\n\r\nexport default Schlick_to_F0;\r\n", "import { transformedNormalView } from '../../accessors/NormalNode.js';\r\nimport { positionViewDirection } from '../../accessors/PositionNode.js';\r\nimport { sheen, sheenRoughness } from '../../core/PropertyNode.js';\r\nimport { tslFn, float } from '../../shadernode/ShaderNode.js';\r\n\r\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs\r\nconst D_Charlie = tslFn( ( { roughness, dotNH } ) => {\r\n\r\n\tconst alpha = roughness.pow2();\r\n\r\n\t// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\"\r\n\tconst invAlpha = float( 1.0 ).div( alpha );\r\n\tconst cos2h = dotNH.pow2();\r\n\tconst sin2h = cos2h.oneMinus().max( 0.0078125 ); // 2^(-14/2), so sin2h^2 > 0 in fp16\r\n\r\n\treturn float( 2.0 ).add( invAlpha ).mul( sin2h.pow( invAlpha.mul( 0.5 ) ) ).div( 2.0 * Math.PI );\r\n\r\n} ).setLayout( {\r\n\tname: 'D_Charlie',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'roughness', type: 'float' },\r\n\t\t{ name: 'dotNH', type: 'float' }\r\n\t]\r\n} );\r\n\r\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs\r\nconst V_Neubelt = tslFn( ( { dotNV, dotNL } ) => {\r\n\r\n\t// Neubelt and Pettineo 2013, \"Crafting a Next-gen Material Pipeline for The Order: 1886\"\r\n\treturn float( 1.0 ).div( float( 4.0 ).mul( dotNL.add( dotNV ).sub( dotNL.mul( dotNV ) ) ) );\r\n\r\n} ).setLayout( {\r\n\tname: 'V_Neubelt',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'dotNV', type: 'float' },\r\n\t\t{ name: 'dotNL', type: 'float' }\r\n\t]\r\n} );\r\n\r\nconst BRDF_Sheen = tslFn( ( { lightDirection } ) => {\r\n\r\n\tconst halfDir = lightDirection.add( positionViewDirection ).normalize();\r\n\r\n\tconst dotNL = transformedNormalView.dot( lightDirection ).clamp();\r\n\tconst dotNV = transformedNormalView.dot( positionViewDirection ).clamp();\r\n\tconst dotNH = transformedNormalView.dot( halfDir ).clamp();\r\n\r\n\tconst D = D_Charlie( { roughness: sheenRoughness, dotNH } );\r\n\tconst V = V_Neubelt( { dotNV, dotNL } );\r\n\r\n\treturn sheen.mul( D ).mul( V );\r\n\r\n} );\r\n\r\nexport default BRDF_Sheen;\r\n", "import BRDF_Lambert from './BSDF/BRDF_Lambert.js';\r\nimport BRDF_GGX from './BSDF/BRDF_GGX.js';\r\nimport DFGApprox from './BSDF/DFGApprox.js';\r\nimport EnvironmentBRDF from './BSDF/EnvironmentBRDF.js';\r\nimport F_Schlick from './BSDF/F_Schlick.js';\r\nimport Schlick_to_F0 from './BSDF/Schlick_to_F0.js';\r\nimport BRDF_Sheen from './BSDF/BRDF_Sheen.js';\r\nimport LightingModel from '../core/LightingModel.js';\r\nimport { diffuseColor, specularColor, roughness, clearcoat, clearcoatRoughness, sheen, sheenRoughness, iridescence, iridescenceIOR, iridescenceThickness } from '../core/PropertyNode.js';\r\nimport { transformedNormalView, transformedClearcoatNormalView } from '../accessors/NormalNode.js';\r\nimport { positionViewDirection } from '../accessors/PositionNode.js';\r\nimport { tslFn, float, vec3, mat3 } from '../shadernode/ShaderNode.js';\r\nimport { cond } from '../math/CondNode.js';\r\nimport { mix, smoothstep } from '../math/MathNode.js';\r\n\r\n//\r\n// Iridescence\r\n//\r\n\r\n// XYZ to linear-sRGB color space\r\nconst XYZ_TO_REC709 = mat3(\r\n\t3.2404542, - 0.9692660, 0.0556434,\r\n\t- 1.5371385, 1.8760108, - 0.2040259,\r\n\t- 0.4985314, 0.0415560, 1.0572252\r\n);\r\n\r\n// Assume air interface for top\r\n// Note: We don't handle the case fresnel0 == 1\r\nconst Fresnel0ToIor = ( fresnel0 ) => {\r\n\r\n\tconst sqrtF0 = fresnel0.sqrt();\r\n\treturn vec3( 1.0 ).add( sqrtF0 ).div( vec3( 1.0 ).sub( sqrtF0 ) );\r\n\r\n};\r\n\r\n// ior is a value between 1.0 and 3.0. 1.0 is air interface\r\nconst IorToFresnel0 = ( transmittedIor, incidentIor ) => {\r\n\r\n\treturn transmittedIor.sub( incidentIor ).div( transmittedIor.add( incidentIor ) ).pow2();\r\n\r\n};\r\n\r\n// Fresnel equations for dielectric/dielectric interfaces.\r\n// Ref: https://belcour.github.io/blog/research/2017/05/01/brdf-thin-film.html\r\n// Evaluation XYZ sensitivity curves in Fourier space\r\nconst evalSensitivity = ( OPD, shift ) => {\r\n\r\n\tconst phase = OPD.mul( 2.0 * Math.PI * 1.0e-9 );\r\n\tconst val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\r\n\tconst pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\r\n\tconst VAR = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\r\n\r\n\tconst x = float( 9.7470e-14 * Math.sqrt( 2.0 * Math.PI * 4.5282e+09 ) ).mul( phase.mul( 2.2399e+06 ).add( shift.x ).cos() ).mul( phase.pow2().mul( - 4.5282e+09 ).exp() );\r\n\r\n\tlet xyz = val.mul( VAR.mul( 2.0 * Math.PI ).sqrt() ).mul( pos.mul( phase ).add( shift ).cos() ).mul( phase.pow2().negate().mul( VAR ).exp() );\r\n\txyz = vec3( xyz.x.add( x ), xyz.y, xyz.z ).div( 1.0685e-7 );\r\n\r\n\tconst rgb = XYZ_TO_REC709.mul( xyz );\r\n\r\n\treturn rgb;\r\n\r\n};\r\n\r\nconst evalIridescence = tslFn( ( { outsideIOR, eta2, cosTheta1, thinFilmThickness, baseF0 } ) => {\r\n\r\n\t// Force iridescenceIOR -> outsideIOR when thinFilmThickness -> 0.0\r\n\tconst iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\r\n\t// Evaluate the cosTheta on the base layer (Snell law)\r\n\tconst sinTheta2Sq = outsideIOR.div( iridescenceIOR ).pow2().mul( float( 1 ).sub( cosTheta1.pow2() ) );\r\n\r\n\t// Handle TIR:\r\n\tconst cosTheta2Sq = float( 1 ).sub( sinTheta2Sq );\r\n\t/*if ( cosTheta2Sq < 0.0 ) {\r\n\r\n\t\t\treturn vec3( 1.0 );\r\n\r\n\t}*/\r\n\r\n\tconst cosTheta2 = cosTheta2Sq.sqrt();\r\n\r\n\t// First interface\r\n\tconst R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\r\n\tconst R12 = F_Schlick( { f0: R0, f90: 1.0, dotVH: cosTheta1 } );\r\n\t//const R21 = R12;\r\n\tconst T121 = R12.oneMinus();\r\n\tconst phi12 = iridescenceIOR.lessThan( outsideIOR ).cond( Math.PI, 0.0 );\r\n\tconst phi21 = float( Math.PI ).sub( phi12 );\r\n\r\n\t// Second interface\r\n\tconst baseIOR = Fresnel0ToIor( baseF0.clamp( 0.0, 0.9999 ) ); // guard against 1.0\r\n\tconst R1 = IorToFresnel0( baseIOR, iridescenceIOR.vec3() );\r\n\tconst R23 = F_Schlick( { f0: R1, f90: 1.0, dotVH: cosTheta2 } );\r\n\tconst phi23 = vec3(\r\n\t\tbaseIOR.x.lessThan( iridescenceIOR ).cond( Math.PI, 0.0 ),\r\n\t\tbaseIOR.y.lessThan( iridescenceIOR ).cond( Math.PI, 0.0 ),\r\n\t\tbaseIOR.z.lessThan( iridescenceIOR ).cond( Math.PI, 0.0 )\r\n\t);\r\n\r\n\t// Phase shift\r\n\tconst OPD = iridescenceIOR.mul( thinFilmThickness, cosTheta2, 2.0 );\r\n\tconst phi = vec3( phi21 ).add( phi23 );\r\n\r\n\t// Compound terms\r\n\tconst R123 = R12.mul( R23 ).clamp( 1e-5, 0.9999 );\r\n\tconst r123 = R123.sqrt();\r\n\tconst Rs = T121.pow2().mul( R23 ).div( vec3( 1.0 ).sub( R123 ) );\r\n\r\n\t// Reflectance term for m = 0 (DC term amplitude)\r\n\tconst C0 = R12.add( Rs );\r\n\tlet I = C0;\r\n\r\n\t// Reflectance term for m > 0 (pairs of diracs)\r\n\tlet Cm = Rs.sub( T121 );\r\n\tfor ( let m = 1; m <= 2; ++ m ) {\r\n\r\n\t\tCm = Cm.mul( r123 );\r\n\t\tconst Sm = evalSensitivity( float( m ).mul( OPD ), float( m ).mul( phi ) ).mul( 2.0 );\r\n\t\tI = I.add( Cm.mul( Sm ) );\r\n\r\n\t}\r\n\r\n\t// Since out of gamut colors might be produced, negative color values are clamped to 0.\r\n\treturn I.max( vec3( 0.0 ) );\r\n\r\n} ).setLayout( {\r\n\tname: 'evalIridescence',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'outsideIOR', type: 'float' },\r\n\t\t{ name: 'eta2', type: 'float' },\r\n\t\t{ name: 'cosTheta1', type: 'float' },\r\n\t\t{ name: 'thinFilmThickness', type: 'float' },\r\n\t\t{ name: 'baseF0', type: 'vec3' }\r\n\t]\r\n} );\r\n\r\n//\r\n//\tSheen\r\n//\r\n\r\n// This is a curve-fit approxmation to the \"Charlie sheen\" BRDF integrated over the hemisphere from\r\n// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\". The analysis can be found\r\n// in the Sheen section of https://drive.google.com/file/d/1T0D1VSyR4AllqIJTQAraEIzjlb5h4FKH/view?usp=sharing\r\nconst IBLSheenBRDF = tslFn( ( { normal, viewDir, roughness } ) => {\r\n\r\n\tconst dotNV = normal.dot( viewDir ).saturate();\r\n\r\n\tconst r2 = roughness.pow2();\r\n\r\n\tconst a = cond(\r\n\t\troughness.lessThan( 0.25 ),\r\n\t\tfloat( - 339.2 ).mul( r2 ).add( float( 161.4 ).mul( roughness ) ).sub( 25.9 ),\r\n\t\tfloat( - 8.48 ).mul( r2 ).add( float( 14.3 ).mul( roughness ) ).sub( 9.95 )\r\n\t);\r\n\r\n\tconst b = cond(\r\n\t\troughness.lessThan( 0.25 ),\r\n\t\tfloat( 44.0 ).mul( r2 ).sub( float( 23.7 ).mul( roughness ) ).add( 3.26 ),\r\n\t\tfloat( 1.97 ).mul( r2 ).sub( float( 3.27 ).mul( roughness ) ).add( 0.72 )\r\n\t);\r\n\r\n\tconst DG = cond( roughness.lessThan( 0.25 ), 0.0, float( 0.1 ).mul( roughness ).sub( 0.025 ) ).add( a.mul( dotNV ).add( b ).exp() );\r\n\r\n\treturn DG.mul( 1.0 / Math.PI ).saturate();\r\n\r\n} );\r\n\r\nconst clearcoatF0 = vec3( 0.04 );\r\nconst clearcoatF90 = vec3( 1 );\r\n\r\n//\r\n\r\nclass PhysicalLightingModel extends LightingModel {\r\n\r\n\tconstructor( clearcoat = false, sheen = false, iridescence = false ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.clearcoat = clearcoat;\r\n\t\tthis.sheen = sheen;\r\n\t\tthis.iridescence = iridescence;\r\n\r\n\t\tthis.clearcoatRadiance = null;\r\n\t\tthis.clearcoatSpecularDirect = null;\r\n\t\tthis.clearcoatSpecularIndirect = null;\r\n\t\tthis.sheenSpecularDirect = null;\r\n\t\tthis.sheenSpecularIndirect = null;\r\n\t\tthis.iridescenceFresnel = null;\r\n\t\tthis.iridescenceF0 = null;\r\n\r\n\t}\r\n\r\n\tstart( /*context*/ ) {\r\n\r\n\t\tif ( this.clearcoat === true ) {\r\n\r\n\t\t\tthis.clearcoatRadiance = vec3().temp( 'clearcoatRadiance' );\r\n\t\t\tthis.clearcoatSpecularDirect = vec3().temp( 'clearcoatSpecularDirect' );\r\n\t\t\tthis.clearcoatSpecularIndirect = vec3().temp( 'clearcoatSpecularIndirect' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.sheen === true ) {\r\n\r\n\t\t\tthis.sheenSpecularDirect = vec3().temp( 'sheenSpecularDirect' );\r\n\t\t\tthis.sheenSpecularIndirect = vec3().temp( 'sheenSpecularIndirect' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.iridescence === true ) {\r\n\r\n\t\t\tconst dotNVi = transformedNormalView.dot( positionViewDirection ).clamp();\r\n\r\n\t\t\tthis.iridescenceFresnel = evalIridescence( {\r\n\t\t\t\toutsideIOR: float( 1.0 ),\r\n\t\t\t\teta2: iridescenceIOR,\r\n\t\t\t\tcosTheta1: dotNVi,\r\n\t\t\t\tthinFilmThickness: iridescenceThickness,\r\n\t\t\t\tbaseF0: specularColor\r\n\t\t\t} );\r\n\r\n\t\t\tthis.iridescenceF0 = Schlick_to_F0( { f: this.iridescenceFresnel, f90: 1.0, dotVH: dotNVi } );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Fdez-Agüera's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\r\n\t// Approximates multiscattering in order to preserve energy.\r\n\t// http://www.jcgt.org/published/0008/01/03/\r\n\r\n\tcomputeMultiscattering( singleScatter, multiScatter, specularF90 = float( 1 ) ) {\r\n\r\n\t\tconst dotNV = transformedNormalView.dot( positionViewDirection ).clamp(); // @ TODO: Move to core dotNV\r\n\r\n\t\tconst fab = DFGApprox( { roughness, dotNV } );\r\n\r\n\t\tconst Fr = this.iridescenceF0 ? iridescence.mix( specularColor, this.iridescenceF0 ) : specularColor;\r\n\r\n\t\tconst FssEss = Fr.mul( fab.x ).add( specularF90.mul( fab.y ) );\r\n\r\n\t\tconst Ess = fab.x.add( fab.y );\r\n\t\tconst Ems = Ess.oneMinus();\r\n\r\n\t\tconst Favg = specularColor.add( specularColor.oneMinus().mul( 0.047619 ) ); // 1/21\r\n\t\tconst Fms = FssEss.mul( Favg ).div( Ems.mul( Favg ).oneMinus() );\r\n\r\n\t\tsingleScatter.addAssign( FssEss );\r\n\t\tmultiScatter.addAssign( Fms.mul( Ems ) );\r\n\r\n\t}\r\n\r\n\tdirect( { lightDirection, lightColor, reflectedLight } ) {\r\n\r\n\t\tconst dotNL = transformedNormalView.dot( lightDirection ).clamp();\r\n\t\tconst irradiance = dotNL.mul( lightColor );\r\n\r\n\t\tif ( this.sheen === true ) {\r\n\r\n\t\t\tthis.sheenSpecularDirect.addAssign( irradiance.mul( BRDF_Sheen( { lightDirection } ) ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearcoat === true ) {\r\n\r\n\t\t\tconst dotNLcc = transformedClearcoatNormalView.dot( lightDirection ).clamp();\r\n\t\t\tconst ccIrradiance = dotNLcc.mul( lightColor );\r\n\r\n\t\t\tthis.clearcoatSpecularDirect.addAssign( ccIrradiance.mul( BRDF_GGX( { lightDirection, f0: clearcoatF0, f90: clearcoatF90, roughness: clearcoatRoughness, normalView: transformedClearcoatNormalView } ) ) );\r\n\r\n\t\t}\r\n\r\n\t\treflectedLight.directDiffuse.addAssign( irradiance.mul( BRDF_Lambert( { diffuseColor: diffuseColor.rgb } ) ) );\r\n\r\n\t\treflectedLight.directSpecular.addAssign( irradiance.mul( BRDF_GGX( { lightDirection, f0: specularColor, f90: 1, roughness, iridescence: this.iridescence, iridescenceFresnel: this.iridescenceFresnel } ) ) );\r\n\r\n\t}\r\n\r\n\tindirectDiffuse( { irradiance, reflectedLight } ) {\r\n\r\n\t\treflectedLight.indirectDiffuse.addAssign( irradiance.mul( BRDF_Lambert( { diffuseColor } ) ) );\r\n\r\n\t}\r\n\r\n\tindirectSpecular( { radiance, iblIrradiance, reflectedLight } ) {\r\n\r\n\t\tif ( this.sheen === true ) {\r\n\r\n\t\t\tthis.sheenSpecularIndirect.addAssign( iblIrradiance.mul(\r\n\t\t\t\tsheen,\r\n\t\t\t\tIBLSheenBRDF( {\r\n\t\t\t\t\tnormal: transformedNormalView,\r\n\t\t\t\t\tviewDir: positionViewDirection,\r\n\t\t\t\t\troughness: sheenRoughness\r\n\t\t\t\t} )\r\n\t\t\t) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearcoat === true ) {\r\n\r\n\t\t\tconst dotNVcc = transformedClearcoatNormalView.dot( positionViewDirection ).clamp();\r\n\r\n\t\t\tconst clearcoatEnv = EnvironmentBRDF( {\r\n\t\t\t\tdotNV: dotNVcc,\r\n\t\t\t\tspecularColor: clearcoatF0,\r\n\t\t\t\tspecularF90: clearcoatF90,\r\n\t\t\t\troughness: clearcoatRoughness\r\n\t\t\t} );\r\n\r\n\t\t\tthis.clearcoatSpecularIndirect.addAssign( this.clearcoatRadiance.mul( clearcoatEnv ) );\r\n\r\n\t\t}\r\n\r\n\t\t// Both indirect specular and indirect diffuse light accumulate here\r\n\r\n\t\tconst singleScattering = vec3().temp( 'singleScattering' );\r\n\t\tconst multiScattering = vec3().temp( 'multiScattering' );\r\n\t\tconst cosineWeightedIrradiance = iblIrradiance.mul( 1 / Math.PI );\r\n\r\n\t\tthis.computeMultiscattering( singleScattering, multiScattering );\r\n\r\n\t\tconst totalScattering = singleScattering.add( multiScattering );\r\n\r\n\t\tconst diffuse = diffuseColor.mul( totalScattering.r.max( totalScattering.g ).max( totalScattering.b ).oneMinus() );\r\n\r\n\t\treflectedLight.indirectSpecular.addAssign( radiance.mul( singleScattering ) );\r\n\t\treflectedLight.indirectSpecular.addAssign( multiScattering.mul( cosineWeightedIrradiance ) );\r\n\r\n\t\treflectedLight.indirectDiffuse.addAssign( diffuse.mul( cosineWeightedIrradiance ) );\r\n\r\n\t}\r\n\r\n\tambientOcclusion( { ambientOcclusion, reflectedLight } ) {\r\n\r\n\t\tconst dotNV = transformedNormalView.dot( positionViewDirection ).clamp(); // @ TODO: Move to core dotNV\r\n\r\n\t\tconst aoNV = dotNV.add( ambientOcclusion );\r\n\t\tconst aoExp = roughness.mul( - 16.0 ).oneMinus().negate().exp2();\r\n\r\n\t\tconst aoNode = ambientOcclusion.sub( aoNV.pow( aoExp ).oneMinus() ).clamp();\r\n\r\n\t\tif ( this.clearcoat === true ) {\r\n\r\n\t\t\tthis.clearcoatSpecularIndirect.mulAssign( ambientOcclusion );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.sheen === true ) {\r\n\r\n\t\t\tthis.sheenSpecularIndirect.mulAssign( ambientOcclusion );\r\n\r\n\t\t}\r\n\r\n\t\treflectedLight.indirectDiffuse.mulAssign( ambientOcclusion );\r\n\t\treflectedLight.indirectSpecular.mulAssign( aoNode );\r\n\r\n\t}\r\n\r\n\tfinish( context ) {\r\n\r\n\t\tconst { outgoingLight } = context;\r\n\r\n\t\tif ( this.clearcoat === true ) {\r\n\r\n\t\t\tconst dotNVcc = transformedClearcoatNormalView.dot( positionViewDirection ).clamp();\r\n\r\n\t\t\tconst Fcc = F_Schlick( {\r\n\t\t\t\tdotVH: dotNVcc,\r\n\t\t\t\tf0: clearcoatF0,\r\n\t\t\t\tf90: clearcoatF90\r\n\t\t\t} );\r\n\r\n\t\t\tconst clearcoatLight = outgoingLight.mul( clearcoat.mul( Fcc ).oneMinus() ).add( this.clearcoatSpecularDirect.add( this.clearcoatSpecularIndirect ).mul( clearcoat ) );\r\n\r\n\t\t\toutgoingLight.assign( clearcoatLight );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.sheen === true ) {\r\n\r\n\t\t\tconst sheenEnergyComp = sheen.r.max( sheen.g ).max( sheen.b ).mul( 0.157 ).oneMinus();\r\n\t\t\tconst sheenLight = outgoingLight.mul( sheenEnergyComp ).add( this.sheenSpecularDirect, this.sheenSpecularIndirect );\r\n\r\n\t\t\toutgoingLight.assign( sheenLight );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default PhysicalLightingModel;\r\n", "import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\r\nimport { diffuseColor, metalness, roughness, specularColor } from '../core/PropertyNode.js';\r\nimport { mix } from '../math/MathNode.js';\r\nimport { materialRoughness, materialMetalness } from '../accessors/MaterialNode.js';\r\nimport getRoughness from '../functions/material/getRoughness.js';\r\nimport PhysicalLightingModel from '../functions/PhysicalLightingModel.js';\r\nimport { float, vec3, vec4 } from '../shadernode/ShaderNode.js';\r\n\r\nimport { MeshStandardMaterial } from 'three';\r\n\r\nconst defaultValues = new MeshStandardMaterial();\r\n\r\nclass MeshStandardNodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshStandardNodeMaterial = true;\r\n\r\n\t\tthis.emissiveNode = null;\r\n\r\n\t\tthis.metalnessNode = null;\r\n\t\tthis.roughnessNode = null;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tsetupLightingModel( /*builder*/ ) {\r\n\r\n\t\treturn new PhysicalLightingModel();\r\n\r\n\t}\r\n\r\n\tsetupVariants() {\r\n\r\n\t\t// METALNESS\r\n\r\n\t\tconst metalnessNode = this.metalnessNode ? float( this.metalnessNode ) : materialMetalness;\r\n\r\n\t\tmetalness.assign( metalnessNode );\r\n\r\n\t\t// ROUGHNESS\r\n\r\n\t\tlet roughnessNode = this.roughnessNode ? float( this.roughnessNode ) : materialRoughness;\r\n\t\troughnessNode = getRoughness( { roughness: roughnessNode } );\r\n\r\n\t\troughness.assign( roughnessNode );\r\n\r\n\t\t// SPECULAR COLOR\r\n\r\n\t\tconst specularColorNode = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessNode );\r\n\r\n\t\tspecularColor.assign( specularColorNode );\r\n\r\n\t\t// DIFFUSE COLOR\r\n\r\n\t\tdiffuseColor.assign( vec4( diffuseColor.rgb.mul( metalnessNode.oneMinus() ), diffuseColor.a ) );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.emissiveNode = source.emissiveNode;\r\n\r\n\t\tthis.metalnessNode = source.metalnessNode;\r\n\t\tthis.roughnessNode = source.roughnessNode;\r\n\r\n\t\treturn super.copy( source );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default MeshStandardNodeMaterial;\r\n\r\naddNodeMaterial( 'MeshStandardNodeMaterial', MeshStandardNodeMaterial );\r\n", "import { addNodeMaterial } from './NodeMaterial.js';\r\nimport { transformedClearcoatNormalView } from '../accessors/NormalNode.js';\r\nimport { clearcoat, clearcoatRoughness, sheen, sheenRoughness, iridescence, iridescenceIOR, iridescenceThickness } from '../core/PropertyNode.js';\r\nimport { materialClearcoat, materialClearcoatRoughness, materialClearcoatNormal, materialSheen, materialSheenRoughness, materialIridescence, materialIridescenceIOR, materialIridescenceThickness } from '../accessors/MaterialNode.js';\r\nimport { float, vec3 } from '../shadernode/ShaderNode.js';\r\nimport PhysicalLightingModel from '../functions/PhysicalLightingModel.js';\r\nimport MeshStandardNodeMaterial from './MeshStandardNodeMaterial.js';\r\n\r\nimport { MeshPhysicalMaterial } from 'three';\r\n\r\nconst defaultValues = new MeshPhysicalMaterial();\r\n\r\nclass MeshPhysicalNodeMaterial extends MeshStandardNodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshPhysicalNodeMaterial = true;\r\n\r\n\t\tthis.clearcoatNode = null;\r\n\t\tthis.clearcoatRoughnessNode = null;\r\n\t\tthis.clearcoatNormalNode = null;\r\n\r\n\t\tthis.sheenNode = null;\r\n\t\tthis.sheenRoughnessNode = null;\r\n\r\n\t\tthis.iridescenceNode = null;\r\n\t\tthis.iridescenceIORNode = null;\r\n\t\tthis.iridescenceThicknessNode = null;\r\n\r\n\t\tthis.specularIntensityNode = null;\r\n\t\tthis.specularColorNode = null;\r\n\r\n\t\tthis.transmissionNode = null;\r\n\t\tthis.thicknessNode = null;\r\n\t\tthis.attenuationDistanceNode = null;\r\n\t\tthis.attenuationColorNode = null;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tget useClearcoat() {\r\n\r\n\t\treturn this.clearcoat > 0 || this.clearcoatNode !== null;\r\n\r\n\t}\r\n\r\n\tget useIridescence() {\r\n\r\n\t\treturn this.iridescence > 0 || this.iridescenceNode !== null;\r\n\r\n\t}\r\n\r\n\tget useSheen() {\r\n\r\n\t\treturn this.sheen > 0 || this.sheenNode !== null;\r\n\r\n\t}\r\n\r\n\tsetupLightingModel( /*builder*/ ) {\r\n\r\n\t\treturn new PhysicalLightingModel( this.useClearcoat, this.useSheen, this.useIridescence );\r\n\r\n\t}\r\n\r\n\tsetupVariants( builder ) {\r\n\r\n\t\tsuper.setupVariants( builder );\r\n\r\n\t\t// CLEARCOAT\r\n\r\n\t\tif ( this.useClearcoat ) {\r\n\r\n\t\t\tconst clearcoatNode = this.clearcoatNode ? float( this.clearcoatNode ) : materialClearcoat;\r\n\t\t\tconst clearcoatRoughnessNode = this.clearcoatRoughnessNode ? float( this.clearcoatRoughnessNode ) : materialClearcoatRoughness;\r\n\r\n\t\t\tclearcoat.assign( clearcoatNode );\r\n\t\t\tclearcoatRoughness.assign( clearcoatRoughnessNode );\r\n\r\n\t\t}\r\n\r\n\t\t// SHEEN\r\n\r\n\t\tif ( this.useSheen ) {\r\n\r\n\t\t\tconst sheenNode = this.sheenNode ? vec3( this.sheenNode ) : materialSheen;\r\n\t\t\tconst sheenRoughnessNode = this.sheenRoughnessNode ? float( this.sheenRoughnessNode ) : materialSheenRoughness;\r\n\r\n\t\t\tsheen.assign( sheenNode );\r\n\t\t\tsheenRoughness.assign( sheenRoughnessNode );\r\n\r\n\t\t}\r\n\r\n\t\t// IRIDESCENCE\r\n\r\n\t\tif ( this.useIridescence ) {\r\n\r\n\t\t\tconst iridescenceNode = this.iridescenceNode ? float( this.iridescenceNode ) : materialIridescence;\r\n\t\t\tconst iridescenceIORNode = this.iridescenceIORNode ? float( this.iridescenceIORNode ) : materialIridescenceIOR;\r\n\t\t\tconst iridescenceThicknessNode = this.iridescenceThicknessNode ? float( this.iridescenceThicknessNode ) : materialIridescenceThickness;\r\n\r\n\t\t\tiridescence.assign( iridescenceNode );\r\n\t\t\tiridescenceIOR.assign( iridescenceIORNode );\r\n\t\t\tiridescenceThickness.assign( iridescenceThicknessNode );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetupNormal( builder ) {\r\n\r\n\t\tsuper.setupNormal( builder );\r\n\r\n\t\t// CLEARCOAT NORMAL\r\n\r\n\t\tconst clearcoatNormalNode = this.clearcoatNormalNode ? vec3( this.clearcoatNormalNode ) : materialClearcoatNormal;\r\n\r\n\t\ttransformedClearcoatNormalView.assign( clearcoatNormalNode );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.clearcoatNode = source.clearcoatNode;\r\n\t\tthis.clearcoatRoughnessNode = source.clearcoatRoughnessNode;\r\n\t\tthis.clearcoatNormalNode = source.clearcoatNormalNode;\r\n\r\n\t\tthis.sheenNode = source.sheenNode;\r\n\t\tthis.sheenRoughnessNode = source.sheenRoughnessNode;\r\n\r\n\t\tthis.iridescenceNode = source.iridescenceNode;\r\n\t\tthis.iridescenceIORNode = source.iridescenceIORNode;\r\n\t\tthis.iridescenceThicknessNode = source.iridescenceThicknessNode;\r\n\r\n\t\tthis.specularIntensityNode = source.specularIntensityNode;\r\n\t\tthis.specularColorNode = source.specularColorNode;\r\n\r\n\t\tthis.transmissionNode = source.transmissionNode;\r\n\t\tthis.thicknessNode = source.thicknessNode;\r\n\t\tthis.attenuationDistanceNode = source.attenuationDistanceNode;\r\n\t\tthis.attenuationColorNode = source.attenuationColorNode;\r\n\r\n\t\treturn super.copy( source );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default MeshPhysicalNodeMaterial;\r\n\r\naddNodeMaterial( 'MeshPhysicalNodeMaterial', MeshPhysicalNodeMaterial );\r\n", "import { addNodeMaterial } from './NodeMaterial.js';\r\nimport { transformedNormalView } from '../accessors/NormalNode.js';\r\nimport { positionViewDirection } from '../accessors/PositionNode.js';\r\nimport PhysicalLightingModel from '../functions/PhysicalLightingModel.js';\r\nimport MeshPhysicalNodeMaterial from './MeshPhysicalNodeMaterial.js';\r\nimport { float, vec3 } from '../shadernode/ShaderNode.js';\r\n\r\nclass SSSLightingModel extends PhysicalLightingModel {\r\n\r\n\tconstructor( useClearcoat, useSheen, useIridescence, useSSS ) {\r\n\r\n\t\tsuper( useClearcoat, useSheen, useIridescence );\r\n\r\n\t\tthis.useSSS = useSSS;\r\n\r\n\t}\r\n\r\n\tdirect( { lightDirection, lightColor, reflectedLight }, stack, builder ) {\r\n\r\n\t\tif ( this.useSSS === true ) {\r\n\r\n\t\t\tconst material = builder.material;\r\n\r\n\t\t\tconst { thicknessColorNode, thicknessDistortionNode, thicknessAmbientNode, thicknessAttenuationNode, thicknessPowerNode, thicknessScaleNode } = material;\r\n\r\n\t\t\tconst scatteringHalf = lightDirection.add( transformedNormalView.mul( thicknessDistortionNode ) ).normalize();\r\n\t\t\tconst scatteringDot = float( positionViewDirection.dot( scatteringHalf.negate() ).saturate().pow( thicknessPowerNode ).mul( thicknessScaleNode ) );\r\n\t\t\tconst scatteringIllu = vec3( scatteringDot.add( thicknessAmbientNode ).mul( thicknessColorNode ) );\r\n\r\n\t\t\treflectedLight.directDiffuse.addAssign( scatteringIllu.mul( thicknessAttenuationNode.mul( lightColor ) ) );\r\n\r\n\t\t}\r\n\r\n\t\tsuper.direct( { lightDirection, lightColor, reflectedLight }, stack, builder );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshSSSNodeMaterial extends MeshPhysicalNodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper( parameters );\r\n\r\n\t\tthis.thicknessColorNode = null;\r\n\t\tthis.thicknessDistortionNode = float( 0.1 );\r\n\t\tthis.thicknessAmbientNode = float( 0.0 );\r\n\t\tthis.thicknessAttenuationNode = float( .1 );\r\n\t\tthis.thicknessPowerNode = float( 2.0 );\r\n\t\tthis.thicknessScaleNode = float( 10.0 );\r\n\r\n\t}\r\n\r\n\tget useSSS() {\r\n\r\n\t\treturn this.thicknessColorNode !== null;\r\n\r\n\t}\r\n\r\n\tsetupLightingModel( /*builder*/ ) {\r\n\r\n\t\treturn new SSSLightingModel( this.useClearcoat, this.useSheen, this.useIridescence, this.useSSS );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.thicknessColorNode = source.thicknessColorNode;\r\n\t\tthis.thicknessDistortionNode = source.thicknessDistortionNode;\r\n\t\tthis.thicknessAmbientNode = source.thicknessAmbientNode;\r\n\t\tthis.thicknessAttenuationNode = source.thicknessAttenuationNode;\r\n\t\tthis.thicknessPowerNode = source.thicknessPowerNode;\r\n\t\tthis.thicknessScaleNode = source.thicknessScaleNode;\r\n\r\n\t\treturn super.copy( source );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default MeshSSSNodeMaterial;\r\n\r\naddNodeMaterial( 'MeshSSSNodeMaterial', MeshSSSNodeMaterial );\r\n", "import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\r\n\r\nimport { PointsMaterial } from 'three';\r\n\r\nconst defaultValues = new PointsMaterial();\r\n\r\nclass PointsNodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isPointsNodeMaterial = true;\r\n\r\n\t\tthis.lights = false;\r\n\t\tthis.normals = false;\r\n\t\tthis.transparent = true;\r\n\r\n\t\tthis.sizeNode = null;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.sizeNode = source.sizeNode;\r\n\r\n\t\treturn super.copy( source );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default PointsNodeMaterial;\r\n\r\naddNodeMaterial( 'PointsNodeMaterial', PointsNodeMaterial );\r\n", "import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\r\nimport { uniform } from '../core/UniformNode.js';\r\nimport { cameraProjectionMatrix } from '../accessors/CameraNode.js';\r\nimport { materialRotation } from '../accessors/MaterialNode.js';\r\nimport { modelViewMatrix, modelWorldMatrix } from '../accessors/ModelNode.js';\r\nimport { positionLocal } from '../accessors/PositionNode.js';\r\nimport { float, vec2, vec3, vec4 } from '../shadernode/ShaderNode.js';\r\n\r\nimport { SpriteMaterial } from 'three';\r\n\r\nconst defaultValues = new SpriteMaterial();\r\n\r\nclass SpriteNodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isSpriteNodeMaterial = true;\r\n\r\n\t\tthis.lights = false;\r\n\t\tthis.normals = false;\r\n\r\n\t\tthis.positionNode = null;\r\n\t\tthis.rotationNode = null;\r\n\t\tthis.scaleNode = null;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tsetupPosition( { object, context } ) {\r\n\r\n\t\t// < VERTEX STAGE >\r\n\r\n\t\tconst { positionNode, rotationNode, scaleNode } = this;\r\n\r\n\t\tconst vertex = positionLocal;\r\n\r\n\t\tlet mvPosition = modelViewMatrix.mul( vec3( positionNode || 0 ) );\r\n\r\n\t\tlet scale = vec2( modelWorldMatrix[ 0 ].xyz.length(), modelWorldMatrix[ 1 ].xyz.length() );\r\n\r\n\t\tif ( scaleNode !== null ) {\r\n\r\n\t\t\tscale = scale.mul( scaleNode );\r\n\r\n\t\t}\r\n\r\n\t\tlet alignedPosition = vertex.xy;\r\n\r\n\t\tif ( object.center && object.center.isVector2 === true ) {\r\n\r\n\t\t\talignedPosition = alignedPosition.sub( uniform( object.center ).sub( 0.5 ) );\r\n\r\n\t\t}\r\n\r\n\t\talignedPosition = alignedPosition.mul( scale );\r\n\r\n\t\tconst rotation = float( rotationNode || materialRotation );\r\n\r\n\t\tconst rotatedPosition = alignedPosition.rotate( rotation );\r\n\r\n\t\tmvPosition = vec4( mvPosition.xy.add( rotatedPosition ), mvPosition.zw );\r\n\r\n\t\tconst modelViewProjection = cameraProjectionMatrix.mul( mvPosition );\r\n\r\n\t\tcontext.vertex = vertex;\r\n\r\n\t\treturn modelViewProjection;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.positionNode = source.positionNode;\r\n\t\tthis.rotationNode = source.rotationNode;\r\n\t\tthis.scaleNode = source.scaleNode;\r\n\r\n\t\treturn super.copy( source );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default SpriteNodeMaterial;\r\n\r\naddNodeMaterial( 'SpriteNodeMaterial', SpriteNodeMaterial );\r\n", "import { MaterialLoader } from 'three';\r\nimport { createNodeMaterialFromType } from '../materials/Materials.js';\r\n\r\nconst superFromTypeFunction = MaterialLoader.createMaterialFromType;\r\n\r\nMaterialLoader.createMaterialFromType = function ( type ) {\r\n\r\n\tconst material = createNodeMaterialFromType( type );\r\n\r\n\tif ( material !== undefined ) {\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n\treturn superFromTypeFunction.call( this, type );\r\n\r\n};\r\n\r\nclass NodeMaterialLoader extends MaterialLoader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\tthis.nodes = {};\r\n\r\n\t}\r\n\r\n\tparse( json ) {\r\n\r\n\t\tconst material = super.parse( json );\r\n\r\n\t\tconst nodes = this.nodes;\r\n\t\tconst inputNodes = json.inputNodes;\r\n\r\n\t\tfor ( const property in inputNodes ) {\r\n\r\n\t\t\tconst uuid = inputNodes[ property ];\r\n\r\n\t\t\tmaterial[ property ] = nodes[ uuid ];\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n\tsetNodes( value ) {\r\n\r\n\t\tthis.nodes = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeMaterialLoader;\r\n", "import NodeLoader from './NodeLoader.js';\r\nimport NodeMaterialLoader from './NodeMaterialLoader.js';\r\nimport { ObjectLoader } from 'three';\r\n\r\nclass NodeObjectLoader extends ObjectLoader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\tthis._nodesJSON = null;\r\n\r\n\t}\r\n\r\n\tparse( json, onLoad ) {\r\n\r\n\t\tthis._nodesJSON = json.nodes;\r\n\r\n\t\tconst data = super.parse( json, onLoad );\r\n\r\n\t\tthis._nodesJSON = null; // dispose\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tparseNodes( json, textures ) {\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tconst loader = new NodeLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\treturn loader.parseNodes( json );\r\n\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\r\n\t}\r\n\r\n\tparseMaterials( json, textures ) {\r\n\r\n\t\tconst materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tconst nodes = this.parseNodes( this._nodesJSON, textures );\r\n\r\n\t\t\tconst loader = new NodeMaterialLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\t\t\tloader.setNodes( nodes );\r\n\r\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst data = json[ i ];\r\n\r\n\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeObjectLoader;\r\n", "class NodeParser {\r\n\r\n\tparseFunction( /*source*/ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeParser;\r\n", "class NodeFunction {\r\n\r\n\tconstructor( type, inputs, name = '', presicion = '' ) {\r\n\r\n\t\tthis.type = type;\r\n\t\tthis.inputs = inputs;\r\n\t\tthis.name = name;\r\n\t\tthis.presicion = presicion;\r\n\r\n\t}\r\n\r\n\tgetCode( /*name = this.name*/ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n}\r\n\r\nNodeFunction.isNodeFunction = true;\r\n\r\nexport default NodeFunction;\r\n", "import NodeFunction from '../core/NodeFunction.js';\r\nimport NodeFunctionInput from '../core/NodeFunctionInput.js';\r\n\r\nconst declarationRegexp = /^\\s*(highp|mediump|lowp)?\\s*([a-z_0-9]+)\\s*([a-z_0-9]+)?\\s*\\(([\\s\\S]*?)\\)/i;\r\nconst propertiesRegexp = /[a-z_0-9]+/ig;\r\n\r\nconst pragmaMain = '#pragma main';\r\n\r\nconst parse = ( source ) => {\r\n\r\n\tsource = source.trim();\r\n\r\n\tconst pragmaMainIndex = source.indexOf( pragmaMain );\r\n\r\n\tconst mainCode = pragmaMainIndex !== - 1 ? source.slice( pragmaMainIndex + pragmaMain.length ) : source;\r\n\r\n\tconst declaration = mainCode.match( declarationRegexp );\r\n\r\n\tif ( declaration !== null && declaration.length === 5 ) {\r\n\r\n\t\t// tokenizer\r\n\r\n\t\tconst inputsCode = declaration[ 4 ];\r\n\t\tconst propsMatches = [];\r\n\r\n\t\tlet nameMatch = null;\r\n\r\n\t\twhile ( ( nameMatch = propertiesRegexp.exec( inputsCode ) ) !== null ) {\r\n\r\n\t\t\tpropsMatches.push( nameMatch );\r\n\r\n\t\t}\r\n\r\n\t\t// parser\r\n\r\n\t\tconst inputs = [];\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\twhile ( i < propsMatches.length ) {\r\n\r\n\t\t\tconst isConst = propsMatches[ i ][ 0 ] === 'const';\r\n\r\n\t\t\tif ( isConst === true ) {\r\n\r\n\t\t\t\ti ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet qualifier = propsMatches[ i ][ 0 ];\r\n\r\n\t\t\tif ( qualifier === 'in' || qualifier === 'out' || qualifier === 'inout' ) {\r\n\r\n\t\t\t\ti ++;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tqualifier = '';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst type = propsMatches[ i ++ ][ 0 ];\r\n\r\n\t\t\tlet count = Number.parseInt( propsMatches[ i ][ 0 ] );\r\n\r\n\t\t\tif ( Number.isNaN( count ) === false ) i ++;\r\n\t\t\telse count = null;\r\n\r\n\t\t\tconst name = propsMatches[ i ++ ][ 0 ];\r\n\r\n\t\t\tinputs.push( new NodeFunctionInput( type, name, count, qualifier, isConst ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tconst blockCode = mainCode.substring( declaration[ 0 ].length );\r\n\r\n\t\tconst name = declaration[ 3 ] !== undefined ? declaration[ 3 ] : '';\r\n\t\tconst type = declaration[ 2 ];\r\n\r\n\t\tconst presicion = declaration[ 1 ] !== undefined ? declaration[ 1 ] : '';\r\n\r\n\t\tconst headerCode = pragmaMainIndex !== - 1 ? source.slice( 0, pragmaMainIndex ) : '';\r\n\r\n\t\treturn {\r\n\t\t\ttype,\r\n\t\t\tinputs,\r\n\t\t\tname,\r\n\t\t\tpresicion,\r\n\t\t\tinputsCode,\r\n\t\t\tblockCode,\r\n\t\t\theaderCode\r\n\t\t};\r\n\r\n\t} else {\r\n\r\n\t\tthrow new Error( 'FunctionNode: Function is not a GLSL code.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nclass GLSLNodeFunction extends NodeFunction {\r\n\r\n\tconstructor( source ) {\r\n\r\n\t\tconst { type, inputs, name, presicion, inputsCode, blockCode, headerCode } = parse( source );\r\n\r\n\t\tsuper( type, inputs, name, presicion );\r\n\r\n\t\tthis.inputsCode = inputsCode;\r\n\t\tthis.blockCode = blockCode;\r\n\t\tthis.headerCode = headerCode;\r\n\r\n\t}\r\n\r\n\tgetCode( name = this.name ) {\r\n\r\n\t\tlet code;\r\n\r\n\t\tconst blockCode = this.blockCode;\r\n\r\n\t\tif ( blockCode !== '' ) {\r\n\r\n\t\t\tconst { type, inputsCode, headerCode, presicion } = this;\r\n\r\n\t\t\tlet declarationCode = `${ type } ${ name } ( ${ inputsCode.trim() } )`;\r\n\r\n\t\t\tif ( presicion !== '' ) {\r\n\r\n\t\t\t\tdeclarationCode = `${ presicion } ${ declarationCode }`;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcode = headerCode + declarationCode + blockCode;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// interface function\r\n\r\n\t\t\tcode = '';\r\n\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default GLSLNodeFunction;\r\n", "import NodeParser from '../core/NodeParser.js';\r\nimport GLSLNodeFunction from './GLSLNodeFunction.js';\r\n\r\nclass GLSLNodeParser extends NodeParser {\r\n\r\n\tparseFunction( source ) {\r\n\r\n\t\treturn new GLSLNodeFunction( source );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default GLSLNodeParser;\r\n", "// Three.js Transpiler\r\n// https://raw.githubusercontent.com/AcademySoftwareFoundation/MaterialX/main/libraries/stdlib/genglsl/lib/mx_noise.glsl\r\n\r\nimport { int, uint, float, vec3, bool, uvec3, vec2, vec4, If, tslFn } from '../../shadernode/ShaderNode.js';\r\nimport { cond } from '../../math/CondNode.js';\r\nimport { sub, mul } from '../../math/OperatorNode.js';\r\nimport { floor, abs, max, dot, min, sqrt } from '../../math/MathNode.js';\r\nimport { overloadingFn } from '../../utils/FunctionOverloadingNode.js';\r\nimport { loop } from '../../utils/LoopNode.js';\r\n\r\nconst mx_select = tslFn( ( [ b_immutable, t_immutable, f_immutable ] ) => {\r\n\r\n\tconst f = float( f_immutable ).toVar();\r\n\tconst t = float( t_immutable ).toVar();\r\n\tconst b = bool( b_immutable ).toVar();\r\n\r\n\treturn cond( b, t, f );\r\n\r\n} );\r\n\r\nconst mx_negate_if = tslFn( ( [ val_immutable, b_immutable ] ) => {\r\n\r\n\tconst b = bool( b_immutable ).toVar();\r\n\tconst val = float( val_immutable ).toVar();\r\n\r\n\treturn cond( b, val.negate(), val );\r\n\r\n} );\r\n\r\nconst mx_floor = tslFn( ( [ x_immutable ] ) => {\r\n\r\n\tconst x = float( x_immutable ).toVar();\r\n\r\n\treturn int( floor( x ) );\r\n\r\n} );\r\n\r\nconst mx_floorfrac = tslFn( ( [ x_immutable, i ] ) => {\r\n\r\n\tconst x = float( x_immutable ).toVar();\r\n\ti.assign( mx_floor( x ) );\r\n\r\n\treturn x.sub( float( i ) );\r\n\r\n} );\r\n\r\nconst mx_bilerp_0 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable ] ) => {\r\n\r\n\tconst t = float( t_immutable ).toVar();\r\n\tconst s = float( s_immutable ).toVar();\r\n\tconst v3 = float( v3_immutable ).toVar();\r\n\tconst v2 = float( v2_immutable ).toVar();\r\n\tconst v1 = float( v1_immutable ).toVar();\r\n\tconst v0 = float( v0_immutable ).toVar();\r\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\r\n\r\n\treturn sub( 1.0, t ).mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) );\r\n\r\n} );\r\n\r\nconst mx_bilerp_1 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable ] ) => {\r\n\r\n\tconst t = float( t_immutable ).toVar();\r\n\tconst s = float( s_immutable ).toVar();\r\n\tconst v3 = vec3( v3_immutable ).toVar();\r\n\tconst v2 = vec3( v2_immutable ).toVar();\r\n\tconst v1 = vec3( v1_immutable ).toVar();\r\n\tconst v0 = vec3( v0_immutable ).toVar();\r\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\r\n\r\n\treturn sub( 1.0, t ).mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) );\r\n\r\n} );\r\n\r\nconst mx_bilerp = overloadingFn( [ mx_bilerp_0, mx_bilerp_1 ] );\r\n\r\nconst mx_trilerp_0 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable ] ) => {\r\n\r\n\tconst r = float( r_immutable ).toVar();\r\n\tconst t = float( t_immutable ).toVar();\r\n\tconst s = float( s_immutable ).toVar();\r\n\tconst v7 = float( v7_immutable ).toVar();\r\n\tconst v6 = float( v6_immutable ).toVar();\r\n\tconst v5 = float( v5_immutable ).toVar();\r\n\tconst v4 = float( v4_immutable ).toVar();\r\n\tconst v3 = float( v3_immutable ).toVar();\r\n\tconst v2 = float( v2_immutable ).toVar();\r\n\tconst v1 = float( v1_immutable ).toVar();\r\n\tconst v0 = float( v0_immutable ).toVar();\r\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\r\n\tconst t1 = float( sub( 1.0, t ) ).toVar();\r\n\tconst r1 = float( sub( 1.0, r ) ).toVar();\r\n\r\n\treturn r1.mul( t1.mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) ) ).add( r.mul( t1.mul( v4.mul( s1 ).add( v5.mul( s ) ) ).add( t.mul( v6.mul( s1 ).add( v7.mul( s ) ) ) ) ) );\r\n\r\n} );\r\n\r\nconst mx_trilerp_1 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable ] ) => {\r\n\r\n\tconst r = float( r_immutable ).toVar();\r\n\tconst t = float( t_immutable ).toVar();\r\n\tconst s = float( s_immutable ).toVar();\r\n\tconst v7 = vec3( v7_immutable ).toVar();\r\n\tconst v6 = vec3( v6_immutable ).toVar();\r\n\tconst v5 = vec3( v5_immutable ).toVar();\r\n\tconst v4 = vec3( v4_immutable ).toVar();\r\n\tconst v3 = vec3( v3_immutable ).toVar();\r\n\tconst v2 = vec3( v2_immutable ).toVar();\r\n\tconst v1 = vec3( v1_immutable ).toVar();\r\n\tconst v0 = vec3( v0_immutable ).toVar();\r\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\r\n\tconst t1 = float( sub( 1.0, t ) ).toVar();\r\n\tconst r1 = float( sub( 1.0, r ) ).toVar();\r\n\r\n\treturn r1.mul( t1.mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) ) ).add( r.mul( t1.mul( v4.mul( s1 ).add( v5.mul( s ) ) ).add( t.mul( v6.mul( s1 ).add( v7.mul( s ) ) ) ) ) );\r\n\r\n} );\r\n\r\nconst mx_trilerp = overloadingFn( [ mx_trilerp_0, mx_trilerp_1 ] );\r\n\r\nconst mx_gradient_float_0 = tslFn( ( [ hash_immutable, x_immutable, y_immutable ] ) => {\r\n\r\n\tconst y = float( y_immutable ).toVar();\r\n\tconst x = float( x_immutable ).toVar();\r\n\tconst hash = uint( hash_immutable ).toVar();\r\n\tconst h = uint( hash.bitAnd( uint( 7 ) ) ).toVar();\r\n\tconst u = float( mx_select( h.lessThan( uint( 4 ) ), x, y ) ).toVar();\r\n\tconst v = float( mul( 2.0, mx_select( h.lessThan( uint( 4 ) ), y, x ) ) ).toVar();\r\n\r\n\treturn mx_negate_if( u, bool( h.bitAnd( uint( 1 ) ) ) ).add( mx_negate_if( v, bool( h.bitAnd( uint( 2 ) ) ) ) );\r\n\r\n} );\r\n\r\nconst mx_gradient_float_1 = tslFn( ( [ hash_immutable, x_immutable, y_immutable, z_immutable ] ) => {\r\n\r\n\tconst z = float( z_immutable ).toVar();\r\n\tconst y = float( y_immutable ).toVar();\r\n\tconst x = float( x_immutable ).toVar();\r\n\tconst hash = uint( hash_immutable ).toVar();\r\n\tconst h = uint( hash.bitAnd( uint( 15 ) ) ).toVar();\r\n\tconst u = float( mx_select( h.lessThan( uint( 8 ) ), x, y ) ).toVar();\r\n\tconst v = float( mx_select( h.lessThan( uint( 4 ) ), y, mx_select( h.equal( uint( 12 ) ).or( h.equal( uint( 14 ) ) ), x, z ) ) ).toVar();\r\n\r\n\treturn mx_negate_if( u, bool( h.bitAnd( uint( 1 ) ) ) ).add( mx_negate_if( v, bool( h.bitAnd( uint( 2 ) ) ) ) );\r\n\r\n} );\r\n\r\nconst mx_gradient_float = overloadingFn( [ mx_gradient_float_0, mx_gradient_float_1 ] );\r\n\r\nconst mx_gradient_vec3_0 = tslFn( ( [ hash_immutable, x_immutable, y_immutable ] ) => {\r\n\r\n\tconst y = float( y_immutable ).toVar();\r\n\tconst x = float( x_immutable ).toVar();\r\n\tconst hash = uvec3( hash_immutable ).toVar();\r\n\r\n\treturn vec3( mx_gradient_float( hash.x, x, y ), mx_gradient_float( hash.y, x, y ), mx_gradient_float( hash.z, x, y ) );\r\n\r\n} );\r\n\r\nconst mx_gradient_vec3_1 = tslFn( ( [ hash_immutable, x_immutable, y_immutable, z_immutable ] ) => {\r\n\r\n\tconst z = float( z_immutable ).toVar();\r\n\tconst y = float( y_immutable ).toVar();\r\n\tconst x = float( x_immutable ).toVar();\r\n\tconst hash = uvec3( hash_immutable ).toVar();\r\n\r\n\treturn vec3( mx_gradient_float( hash.x, x, y, z ), mx_gradient_float( hash.y, x, y, z ), mx_gradient_float( hash.z, x, y, z ) );\r\n\r\n} );\r\n\r\nconst mx_gradient_vec3 = overloadingFn( [ mx_gradient_vec3_0, mx_gradient_vec3_1 ] );\r\n\r\nconst mx_gradient_scale2d_0 = tslFn( ( [ v_immutable ] ) => {\r\n\r\n\tconst v = float( v_immutable ).toVar();\r\n\r\n\treturn mul( 0.6616, v );\r\n\r\n} );\r\n\r\nconst mx_gradient_scale3d_0 = tslFn( ( [ v_immutable ] ) => {\r\n\r\n\tconst v = float( v_immutable ).toVar();\r\n\r\n\treturn mul( 0.9820, v );\r\n\r\n} );\r\n\r\nconst mx_gradient_scale2d_1 = tslFn( ( [ v_immutable ] ) => {\r\n\r\n\tconst v = vec3( v_immutable ).toVar();\r\n\r\n\treturn mul( 0.6616, v );\r\n\r\n} );\r\n\r\nconst mx_gradient_scale2d = overloadingFn( [ mx_gradient_scale2d_0, mx_gradient_scale2d_1 ] );\r\n\r\nconst mx_gradient_scale3d_1 = tslFn( ( [ v_immutable ] ) => {\r\n\r\n\tconst v = vec3( v_immutable ).toVar();\r\n\r\n\treturn mul( 0.9820, v );\r\n\r\n} );\r\n\r\nconst mx_gradient_scale3d = overloadingFn( [ mx_gradient_scale3d_0, mx_gradient_scale3d_1 ] );\r\n\r\nconst mx_rotl32 = tslFn( ( [ x_immutable, k_immutable ] ) => {\r\n\r\n\tconst k = int( k_immutable ).toVar();\r\n\tconst x = uint( x_immutable ).toVar();\r\n\r\n\treturn x.shiftLeft( k ).bitOr( x.shiftRight( int( 32 ).sub( k ) ) );\r\n\r\n} );\r\n\r\nconst mx_bjmix = tslFn( ( [ a, b, c ] ) => {\r\n\r\n\ta.subAssign( c );\r\n\ta.bitXorAssign( mx_rotl32( c, int( 4 ) ) );\r\n\tc.addAssign( b );\r\n\tb.subAssign( a );\r\n\tb.bitXorAssign( mx_rotl32( a, int( 6 ) ) );\r\n\ta.addAssign( c );\r\n\tc.subAssign( b );\r\n\tc.bitXorAssign( mx_rotl32( b, int( 8 ) ) );\r\n\tb.addAssign( a );\r\n\ta.subAssign( c );\r\n\ta.bitXorAssign( mx_rotl32( c, int( 16 ) ) );\r\n\tc.addAssign( b );\r\n\tb.subAssign( a );\r\n\tb.bitXorAssign( mx_rotl32( a, int( 19 ) ) );\r\n\ta.addAssign( c );\r\n\tc.subAssign( b );\r\n\tc.bitXorAssign( mx_rotl32( b, int( 4 ) ) );\r\n\tb.addAssign( a );\r\n\r\n} );\r\n\r\nconst mx_bjfinal = tslFn( ( [ a_immutable, b_immutable, c_immutable ] ) => {\r\n\r\n\tconst c = uint( c_immutable ).toVar();\r\n\tconst b = uint( b_immutable ).toVar();\r\n\tconst a = uint( a_immutable ).toVar();\r\n\tc.bitXorAssign( b );\r\n\tc.subAssign( mx_rotl32( b, int( 14 ) ) );\r\n\ta.bitXorAssign( c );\r\n\ta.subAssign( mx_rotl32( c, int( 11 ) ) );\r\n\tb.bitXorAssign( a );\r\n\tb.subAssign( mx_rotl32( a, int( 25 ) ) );\r\n\tc.bitXorAssign( b );\r\n\tc.subAssign( mx_rotl32( b, int( 16 ) ) );\r\n\ta.bitXorAssign( c );\r\n\ta.subAssign( mx_rotl32( c, int( 4 ) ) );\r\n\tb.bitXorAssign( a );\r\n\tb.subAssign( mx_rotl32( a, int( 14 ) ) );\r\n\tc.bitXorAssign( b );\r\n\tc.subAssign( mx_rotl32( b, int( 24 ) ) );\r\n\r\n\treturn c;\r\n\r\n} );\r\n\r\nconst mx_bits_to_01 = tslFn( ( [ bits_immutable ] ) => {\r\n\r\n\tconst bits = uint( bits_immutable ).toVar();\r\n\r\n\treturn float( bits ).div( float( uint( int( 0xffffffff ) ) ) );\r\n\r\n} );\r\n\r\nconst mx_fade = tslFn( ( [ t_immutable ] ) => {\r\n\r\n\tconst t = float( t_immutable ).toVar();\r\n\r\n\treturn t.mul( t.mul( t.mul( t.mul( t.mul( 6.0 ).sub( 15.0 ) ).add( 10.0 ) ) ) );\r\n\r\n} );\r\n\r\nconst mx_hash_int_0 = tslFn( ( [ x_immutable ] ) => {\r\n\r\n\tconst x = int( x_immutable ).toVar();\r\n\tconst len = uint( uint( 1 ) ).toVar();\r\n\tconst seed = uint( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ).toVar();\r\n\r\n\treturn mx_bjfinal( seed.add( uint( x ) ), seed, seed );\r\n\r\n} );\r\n\r\nconst mx_hash_int_1 = tslFn( ( [ x_immutable, y_immutable ] ) => {\r\n\r\n\tconst y = int( y_immutable ).toVar();\r\n\tconst x = int( x_immutable ).toVar();\r\n\tconst len = uint( uint( 2 ) ).toVar();\r\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\r\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\r\n\ta.addAssign( uint( x ) );\r\n\tb.addAssign( uint( y ) );\r\n\r\n\treturn mx_bjfinal( a, b, c );\r\n\r\n} );\r\n\r\nconst mx_hash_int_2 = tslFn( ( [ x_immutable, y_immutable, z_immutable ] ) => {\r\n\r\n\tconst z = int( z_immutable ).toVar();\r\n\tconst y = int( y_immutable ).toVar();\r\n\tconst x = int( x_immutable ).toVar();\r\n\tconst len = uint( uint( 3 ) ).toVar();\r\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\r\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\r\n\ta.addAssign( uint( x ) );\r\n\tb.addAssign( uint( y ) );\r\n\tc.addAssign( uint( z ) );\r\n\r\n\treturn mx_bjfinal( a, b, c );\r\n\r\n} );\r\n\r\nconst mx_hash_int_3 = tslFn( ( [ x_immutable, y_immutable, z_immutable, xx_immutable ] ) => {\r\n\r\n\tconst xx = int( xx_immutable ).toVar();\r\n\tconst z = int( z_immutable ).toVar();\r\n\tconst y = int( y_immutable ).toVar();\r\n\tconst x = int( x_immutable ).toVar();\r\n\tconst len = uint( uint( 4 ) ).toVar();\r\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\r\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\r\n\ta.addAssign( uint( x ) );\r\n\tb.addAssign( uint( y ) );\r\n\tc.addAssign( uint( z ) );\r\n\tmx_bjmix( a, b, c );\r\n\ta.addAssign( uint( xx ) );\r\n\r\n\treturn mx_bjfinal( a, b, c );\r\n\r\n} );\r\n\r\nconst mx_hash_int_4 = tslFn( ( [ x_immutable, y_immutable, z_immutable, xx_immutable, yy_immutable ] ) => {\r\n\r\n\tconst yy = int( yy_immutable ).toVar();\r\n\tconst xx = int( xx_immutable ).toVar();\r\n\tconst z = int( z_immutable ).toVar();\r\n\tconst y = int( y_immutable ).toVar();\r\n\tconst x = int( x_immutable ).toVar();\r\n\tconst len = uint( uint( 5 ) ).toVar();\r\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\r\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\r\n\ta.addAssign( uint( x ) );\r\n\tb.addAssign( uint( y ) );\r\n\tc.addAssign( uint( z ) );\r\n\tmx_bjmix( a, b, c );\r\n\ta.addAssign( uint( xx ) );\r\n\tb.addAssign( uint( yy ) );\r\n\r\n\treturn mx_bjfinal( a, b, c );\r\n\r\n} );\r\n\r\nconst mx_hash_int = overloadingFn( [ mx_hash_int_0, mx_hash_int_1, mx_hash_int_2, mx_hash_int_3, mx_hash_int_4 ] );\r\n\r\nconst mx_hash_vec3_0 = tslFn( ( [ x_immutable, y_immutable ] ) => {\r\n\r\n\tconst y = int( y_immutable ).toVar();\r\n\tconst x = int( x_immutable ).toVar();\r\n\tconst h = uint( mx_hash_int( x, y ) ).toVar();\r\n\tconst result = uvec3().toVar();\r\n\tresult.x.assign( h.bitAnd( int( 0xFF ) ) );\r\n\tresult.y.assign( h.shiftRight( int( 8 ) ).bitAnd( int( 0xFF ) ) );\r\n\tresult.z.assign( h.shiftRight( int( 16 ) ).bitAnd( int( 0xFF ) ) );\r\n\r\n\treturn result;\r\n\r\n} );\r\n\r\nconst mx_hash_vec3_1 = tslFn( ( [ x_immutable, y_immutable, z_immutable ] ) => {\r\n\r\n\tconst z = int( z_immutable ).toVar();\r\n\tconst y = int( y_immutable ).toVar();\r\n\tconst x = int( x_immutable ).toVar();\r\n\tconst h = uint( mx_hash_int( x, y, z ) ).toVar();\r\n\tconst result = uvec3().toVar();\r\n\tresult.x.assign( h.bitAnd( int( 0xFF ) ) );\r\n\tresult.y.assign( h.shiftRight( int( 8 ) ).bitAnd( int( 0xFF ) ) );\r\n\tresult.z.assign( h.shiftRight( int( 16 ) ).bitAnd( int( 0xFF ) ) );\r\n\r\n\treturn result;\r\n\r\n} );\r\n\r\nconst mx_hash_vec3 = overloadingFn( [ mx_hash_vec3_0, mx_hash_vec3_1 ] );\r\n\r\nconst mx_perlin_noise_float_0 = tslFn( ( [ p_immutable ] ) => {\r\n\r\n\tconst p = vec2( p_immutable ).toVar();\r\n\tconst X = int().toVar(), Y = int().toVar();\r\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\r\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\r\n\tconst u = float( mx_fade( fx ) ).toVar();\r\n\tconst v = float( mx_fade( fy ) ).toVar();\r\n\tconst result = float( mx_bilerp( mx_gradient_float( mx_hash_int( X, Y ), fx, fy ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y ), fx.sub( 1.0 ), fy ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ) ), fx, fy.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ) ), u, v ) ).toVar();\r\n\r\n\treturn mx_gradient_scale2d( result );\r\n\r\n} );\r\n\r\nconst mx_perlin_noise_float_1 = tslFn( ( [ p_immutable ] ) => {\r\n\r\n\tconst p = vec3( p_immutable ).toVar();\r\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\r\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\r\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\r\n\tconst fz = float( mx_floorfrac( p.z, Z ) ).toVar();\r\n\tconst u = float( mx_fade( fx ) ).toVar();\r\n\tconst v = float( mx_fade( fy ) ).toVar();\r\n\tconst w = float( mx_fade( fz ) ).toVar();\r\n\tconst result = float( mx_trilerp( mx_gradient_float( mx_hash_int( X, Y, Z ), fx, fy, fz ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y, Z ), fx.sub( 1.0 ), fy, fz ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ), Z ), fx, fy.sub( 1.0 ), fz ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz ), mx_gradient_float( mx_hash_int( X, Y, Z.add( int( 1 ) ) ), fx, fy, fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y, Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy, fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx, fy.sub( 1.0 ), fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz.sub( 1.0 ) ), u, v, w ) ).toVar();\r\n\r\n\treturn mx_gradient_scale3d( result );\r\n\r\n} );\r\n\r\nconst mx_perlin_noise_float = overloadingFn( [ mx_perlin_noise_float_0, mx_perlin_noise_float_1 ] );\r\n\r\nconst mx_perlin_noise_vec3_0 = tslFn( ( [ p_immutable ] ) => {\r\n\r\n\tconst p = vec2( p_immutable ).toVar();\r\n\tconst X = int().toVar(), Y = int().toVar();\r\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\r\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\r\n\tconst u = float( mx_fade( fx ) ).toVar();\r\n\tconst v = float( mx_fade( fy ) ).toVar();\r\n\tconst result = vec3( mx_bilerp( mx_gradient_vec3( mx_hash_vec3( X, Y ), fx, fy ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y ), fx.sub( 1.0 ), fy ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ) ), fx, fy.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ) ), u, v ) ).toVar();\r\n\r\n\treturn mx_gradient_scale2d( result );\r\n\r\n} );\r\n\r\nconst mx_perlin_noise_vec3_1 = tslFn( ( [ p_immutable ] ) => {\r\n\r\n\tconst p = vec3( p_immutable ).toVar();\r\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\r\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\r\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\r\n\tconst fz = float( mx_floorfrac( p.z, Z ) ).toVar();\r\n\tconst u = float( mx_fade( fx ) ).toVar();\r\n\tconst v = float( mx_fade( fy ) ).toVar();\r\n\tconst w = float( mx_fade( fz ) ).toVar();\r\n\tconst result = vec3( mx_trilerp( mx_gradient_vec3( mx_hash_vec3( X, Y, Z ), fx, fy, fz ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y, Z ), fx.sub( 1.0 ), fy, fz ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ), Z ), fx, fy.sub( 1.0 ), fz ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz ), mx_gradient_vec3( mx_hash_vec3( X, Y, Z.add( int( 1 ) ) ), fx, fy, fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y, Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy, fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx, fy.sub( 1.0 ), fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz.sub( 1.0 ) ), u, v, w ) ).toVar();\r\n\r\n\treturn mx_gradient_scale3d( result );\r\n\r\n} );\r\n\r\nconst mx_perlin_noise_vec3 = overloadingFn( [ mx_perlin_noise_vec3_0, mx_perlin_noise_vec3_1 ] );\r\n\r\nconst mx_cell_noise_float_0 = tslFn( ( [ p_immutable ] ) => {\r\n\r\n\tconst p = float( p_immutable ).toVar();\r\n\tconst ix = int( mx_floor( p ) ).toVar();\r\n\r\n\treturn mx_bits_to_01( mx_hash_int( ix ) );\r\n\r\n} );\r\n\r\nconst mx_cell_noise_float_1 = tslFn( ( [ p_immutable ] ) => {\r\n\r\n\tconst p = vec2( p_immutable ).toVar();\r\n\tconst ix = int( mx_floor( p.x ) ).toVar();\r\n\tconst iy = int( mx_floor( p.y ) ).toVar();\r\n\r\n\treturn mx_bits_to_01( mx_hash_int( ix, iy ) );\r\n\r\n} );\r\n\r\nconst mx_cell_noise_float_2 = tslFn( ( [ p_immutable ] ) => {\r\n\r\n\tconst p = vec3( p_immutable ).toVar();\r\n\tconst ix = int( mx_floor( p.x ) ).toVar();\r\n\tconst iy = int( mx_floor( p.y ) ).toVar();\r\n\tconst iz = int( mx_floor( p.z ) ).toVar();\r\n\r\n\treturn mx_bits_to_01( mx_hash_int( ix, iy, iz ) );\r\n\r\n} );\r\n\r\nconst mx_cell_noise_float_3 = tslFn( ( [ p_immutable ] ) => {\r\n\r\n\tconst p = vec4( p_immutable ).toVar();\r\n\tconst ix = int( mx_floor( p.x ) ).toVar();\r\n\tconst iy = int( mx_floor( p.y ) ).toVar();\r\n\tconst iz = int( mx_floor( p.z ) ).toVar();\r\n\tconst iw = int( mx_floor( p.w ) ).toVar();\r\n\r\n\treturn mx_bits_to_01( mx_hash_int( ix, iy, iz, iw ) );\r\n\r\n} );\r\n\r\nconst mx_cell_noise_float = overloadingFn( [ mx_cell_noise_float_0, mx_cell_noise_float_1, mx_cell_noise_float_2, mx_cell_noise_float_3 ] );\r\n\r\nconst mx_cell_noise_vec3_0 = tslFn( ( [ p_immutable ] ) => {\r\n\r\n\tconst p = float( p_immutable ).toVar();\r\n\tconst ix = int( mx_floor( p ) ).toVar();\r\n\r\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, int( 2 ) ) ) );\r\n\r\n} );\r\n\r\nconst mx_cell_noise_vec3_1 = tslFn( ( [ p_immutable ] ) => {\r\n\r\n\tconst p = vec2( p_immutable ).toVar();\r\n\tconst ix = int( mx_floor( p.x ) ).toVar();\r\n\tconst iy = int( mx_floor( p.y ) ).toVar();\r\n\r\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, int( 2 ) ) ) );\r\n\r\n} );\r\n\r\nconst mx_cell_noise_vec3_2 = tslFn( ( [ p_immutable ] ) => {\r\n\r\n\tconst p = vec3( p_immutable ).toVar();\r\n\tconst ix = int( mx_floor( p.x ) ).toVar();\r\n\tconst iy = int( mx_floor( p.y ) ).toVar();\r\n\tconst iz = int( mx_floor( p.z ) ).toVar();\r\n\r\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 2 ) ) ) );\r\n\r\n} );\r\n\r\nconst mx_cell_noise_vec3_3 = tslFn( ( [ p_immutable ] ) => {\r\n\r\n\tconst p = vec4( p_immutable ).toVar();\r\n\tconst ix = int( mx_floor( p.x ) ).toVar();\r\n\tconst iy = int( mx_floor( p.y ) ).toVar();\r\n\tconst iz = int( mx_floor( p.z ) ).toVar();\r\n\tconst iw = int( mx_floor( p.w ) ).toVar();\r\n\r\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 2 ) ) ) );\r\n\r\n} );\r\n\r\nconst mx_cell_noise_vec3 = overloadingFn( [ mx_cell_noise_vec3_0, mx_cell_noise_vec3_1, mx_cell_noise_vec3_2, mx_cell_noise_vec3_3 ] );\r\n\r\nconst mx_fractal_noise_float = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\r\n\r\n\tconst diminish = float( diminish_immutable ).toVar();\r\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\r\n\tconst octaves = int( octaves_immutable ).toVar();\r\n\tconst p = vec3( p_immutable ).toVar();\r\n\tconst result = float( 0.0 ).toVar();\r\n\tconst amplitude = float( 1.0 ).toVar();\r\n\r\n\tloop( { start: int( 0 ), end: octaves }, ( { i } ) => {\r\n\r\n\t\tresult.addAssign( amplitude.mul( mx_perlin_noise_float( p ) ) );\r\n\t\tamplitude.mulAssign( diminish );\r\n\t\tp.mulAssign( lacunarity );\r\n\r\n\t} );\r\n\r\n\treturn result;\r\n\r\n} );\r\n\r\nconst mx_fractal_noise_vec3 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\r\n\r\n\tconst diminish = float( diminish_immutable ).toVar();\r\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\r\n\tconst octaves = int( octaves_immutable ).toVar();\r\n\tconst p = vec3( p_immutable ).toVar();\r\n\tconst result = vec3( 0.0 ).toVar();\r\n\tconst amplitude = float( 1.0 ).toVar();\r\n\r\n\tloop( { start: int( 0 ), end: octaves }, ( { i } ) => {\r\n\r\n\t\tresult.addAssign( amplitude.mul( mx_perlin_noise_vec3( p ) ) );\r\n\t\tamplitude.mulAssign( diminish );\r\n\t\tp.mulAssign( lacunarity );\r\n\r\n\t} );\r\n\r\n\treturn result;\r\n\r\n} );\r\n\r\nconst mx_fractal_noise_vec2 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\r\n\r\n\tconst diminish = float( diminish_immutable ).toVar();\r\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\r\n\tconst octaves = int( octaves_immutable ).toVar();\r\n\tconst p = vec3( p_immutable ).toVar();\r\n\r\n\treturn vec2( mx_fractal_noise_float( p, octaves, lacunarity, diminish ), mx_fractal_noise_float( p.add( vec3( int( 19 ), int( 193 ), int( 17 ) ) ), octaves, lacunarity, diminish ) );\r\n\r\n} );\r\n\r\nconst mx_fractal_noise_vec4 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\r\n\r\n\tconst diminish = float( diminish_immutable ).toVar();\r\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\r\n\tconst octaves = int( octaves_immutable ).toVar();\r\n\tconst p = vec3( p_immutable ).toVar();\r\n\tconst c = vec3( mx_fractal_noise_vec3( p, octaves, lacunarity, diminish ) ).toVar();\r\n\tconst f = float( mx_fractal_noise_float( p.add( vec3( int( 19 ), int( 193 ), int( 17 ) ) ), octaves, lacunarity, diminish ) ).toVar();\r\n\r\n\treturn vec4( c, f );\r\n\r\n} );\r\n\r\nconst mx_worley_distance_0 = tslFn( ( [ p_immutable, x_immutable, y_immutable, xoff_immutable, yoff_immutable, jitter_immutable, metric_immutable ] ) => {\r\n\r\n\tconst metric = int( metric_immutable ).toVar();\r\n\tconst jitter = float( jitter_immutable ).toVar();\r\n\tconst yoff = int( yoff_immutable ).toVar();\r\n\tconst xoff = int( xoff_immutable ).toVar();\r\n\tconst y = int( y_immutable ).toVar();\r\n\tconst x = int( x_immutable ).toVar();\r\n\tconst p = vec2( p_immutable ).toVar();\r\n\tconst tmp = vec3( mx_cell_noise_vec3( vec2( x.add( xoff ), y.add( yoff ) ) ) ).toVar();\r\n\tconst off = vec2( tmp.x, tmp.y ).toVar();\r\n\toff.subAssign( 0.5 );\r\n\toff.mulAssign( jitter );\r\n\toff.addAssign( 0.5 );\r\n\tconst cellpos = vec2( vec2( float( x ), float( y ) ).add( off ) ).toVar();\r\n\tconst diff = vec2( cellpos.sub( p ) ).toVar();\r\n\r\n\tIf( metric.equal( int( 2 ) ), () => {\r\n\r\n\t\treturn abs( diff.x ).add( abs( diff.y ) );\r\n\r\n\t} );\r\n\r\n\tIf( metric.equal( int( 3 ) ), () => {\r\n\r\n\t\treturn max( abs( diff.x ), abs( diff.y ) );\r\n\r\n\t} );\r\n\r\n\treturn dot( diff, diff );\r\n\r\n} );\r\n\r\nconst mx_worley_distance_1 = tslFn( ( [ p_immutable, x_immutable, y_immutable, z_immutable, xoff_immutable, yoff_immutable, zoff_immutable, jitter_immutable, metric_immutable ] ) => {\r\n\r\n\tconst metric = int( metric_immutable ).toVar();\r\n\tconst jitter = float( jitter_immutable ).toVar();\r\n\tconst zoff = int( zoff_immutable ).toVar();\r\n\tconst yoff = int( yoff_immutable ).toVar();\r\n\tconst xoff = int( xoff_immutable ).toVar();\r\n\tconst z = int( z_immutable ).toVar();\r\n\tconst y = int( y_immutable ).toVar();\r\n\tconst x = int( x_immutable ).toVar();\r\n\tconst p = vec3( p_immutable ).toVar();\r\n\tconst off = vec3( mx_cell_noise_vec3( vec3( x.add( xoff ), y.add( yoff ), z.add( zoff ) ) ) ).toVar();\r\n\toff.subAssign( 0.5 );\r\n\toff.mulAssign( jitter );\r\n\toff.addAssign( 0.5 );\r\n\tconst cellpos = vec3( vec3( float( x ), float( y ), float( z ) ).add( off ) ).toVar();\r\n\tconst diff = vec3( cellpos.sub( p ) ).toVar();\r\n\r\n\tIf( metric.equal( int( 2 ) ), () => {\r\n\r\n\t\treturn abs( diff.x ).add( abs( diff.y ).add( abs( diff.z ) ) );\r\n\r\n\t} );\r\n\r\n\tIf( metric.equal( int( 3 ) ), () => {\r\n\r\n\t\treturn max( max( abs( diff.x ), abs( diff.y ) ), abs( diff.z ) );\r\n\r\n\t} );\r\n\r\n\treturn dot( diff, diff );\r\n\r\n} );\r\n\r\nconst mx_worley_distance = overloadingFn( [ mx_worley_distance_0, mx_worley_distance_1 ] );\r\n\r\nconst mx_worley_noise_float_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\r\n\r\n\tconst metric = int( metric_immutable ).toVar();\r\n\tconst jitter = float( jitter_immutable ).toVar();\r\n\tconst p = vec2( p_immutable ).toVar();\r\n\tconst X = int().toVar(), Y = int().toVar();\r\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\r\n\tconst sqdist = float( 1e6 ).toVar();\r\n\r\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\r\n\r\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\r\n\r\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\r\n\t\t\tsqdist.assign( min( sqdist, dist ) );\r\n\r\n\t\t} );\r\n\r\n\t} );\r\n\r\n\tIf( metric.equal( int( 0 ) ), () => {\r\n\r\n\t\tsqdist.assign( sqrt( sqdist ) );\r\n\r\n\t} );\r\n\r\n\treturn sqdist;\r\n\r\n} );\r\n\r\nconst mx_worley_noise_vec2_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\r\n\r\n\tconst metric = int( metric_immutable ).toVar();\r\n\tconst jitter = float( jitter_immutable ).toVar();\r\n\tconst p = vec2( p_immutable ).toVar();\r\n\tconst X = int().toVar(), Y = int().toVar();\r\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\r\n\tconst sqdist = vec2( 1e6, 1e6 ).toVar();\r\n\r\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\r\n\r\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\r\n\r\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\r\n\r\n\t\t\tIf( dist.lessThan( sqdist.x ), () => {\r\n\r\n\t\t\t\tsqdist.y.assign( sqdist.x );\r\n\t\t\t\tsqdist.x.assign( dist );\r\n\r\n\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\r\n\r\n\t\t\t\tsqdist.y.assign( dist );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t} );\r\n\r\n\tIf( metric.equal( int( 0 ) ), () => {\r\n\r\n\t\tsqdist.assign( sqrt( sqdist ) );\r\n\r\n\t} );\r\n\r\n\treturn sqdist;\r\n\r\n} );\r\n\r\nconst mx_worley_noise_vec3_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\r\n\r\n\tconst metric = int( metric_immutable ).toVar();\r\n\tconst jitter = float( jitter_immutable ).toVar();\r\n\tconst p = vec2( p_immutable ).toVar();\r\n\tconst X = int().toVar(), Y = int().toVar();\r\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\r\n\tconst sqdist = vec3( 1e6, 1e6, 1e6 ).toVar();\r\n\r\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\r\n\r\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\r\n\r\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\r\n\r\n\t\t\tIf( dist.lessThan( sqdist.x ), () => {\r\n\r\n\t\t\t\tsqdist.z.assign( sqdist.y );\r\n\t\t\t\tsqdist.y.assign( sqdist.x );\r\n\t\t\t\tsqdist.x.assign( dist );\r\n\r\n\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\r\n\r\n\t\t\t\tsqdist.z.assign( sqdist.y );\r\n\t\t\t\tsqdist.y.assign( dist );\r\n\r\n\t\t\t} ).elseif( dist.lessThan( sqdist.z ), () => {\r\n\r\n\t\t\t\tsqdist.z.assign( dist );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t} );\r\n\r\n\tIf( metric.equal( int( 0 ) ), () => {\r\n\r\n\t\tsqdist.assign( sqrt( sqdist ) );\r\n\r\n\t} );\r\n\r\n\treturn sqdist;\r\n\r\n} );\r\n\r\nconst mx_worley_noise_float_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\r\n\r\n\tconst metric = int( metric_immutable ).toVar();\r\n\tconst jitter = float( jitter_immutable ).toVar();\r\n\tconst p = vec3( p_immutable ).toVar();\r\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\r\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\r\n\tconst sqdist = float( 1e6 ).toVar();\r\n\r\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\r\n\r\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\r\n\r\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\r\n\r\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\r\n\t\t\t\tsqdist.assign( min( sqdist, dist ) );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t} );\r\n\r\n\tIf( metric.equal( int( 0 ) ), () => {\r\n\r\n\t\tsqdist.assign( sqrt( sqdist ) );\r\n\r\n\t} );\r\n\r\n\treturn sqdist;\r\n\r\n} );\r\n\r\nconst mx_worley_noise_float = overloadingFn( [ mx_worley_noise_float_0, mx_worley_noise_float_1 ] );\r\n\r\nconst mx_worley_noise_vec2_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\r\n\r\n\tconst metric = int( metric_immutable ).toVar();\r\n\tconst jitter = float( jitter_immutable ).toVar();\r\n\tconst p = vec3( p_immutable ).toVar();\r\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\r\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\r\n\tconst sqdist = vec2( 1e6, 1e6 ).toVar();\r\n\r\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\r\n\r\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\r\n\r\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\r\n\r\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\r\n\r\n\t\t\t\tIf( dist.lessThan( sqdist.x ), () => {\r\n\r\n\t\t\t\t\tsqdist.y.assign( sqdist.x );\r\n\t\t\t\t\tsqdist.x.assign( dist );\r\n\r\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\r\n\r\n\t\t\t\t\tsqdist.y.assign( dist );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t} );\r\n\r\n\tIf( metric.equal( int( 0 ) ), () => {\r\n\r\n\t\tsqdist.assign( sqrt( sqdist ) );\r\n\r\n\t} );\r\n\r\n\treturn sqdist;\r\n\r\n} );\r\n\r\nconst mx_worley_noise_vec2 = overloadingFn( [ mx_worley_noise_vec2_0, mx_worley_noise_vec2_1 ] );\r\n\r\nconst mx_worley_noise_vec3_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\r\n\r\n\tconst metric = int( metric_immutable ).toVar();\r\n\tconst jitter = float( jitter_immutable ).toVar();\r\n\tconst p = vec3( p_immutable ).toVar();\r\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\r\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\r\n\tconst sqdist = vec3( 1e6, 1e6, 1e6 ).toVar();\r\n\r\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\r\n\r\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\r\n\r\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\r\n\r\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\r\n\r\n\t\t\t\tIf( dist.lessThan( sqdist.x ), () => {\r\n\r\n\t\t\t\t\tsqdist.z.assign( sqdist.y );\r\n\t\t\t\t\tsqdist.y.assign( sqdist.x );\r\n\t\t\t\t\tsqdist.x.assign( dist );\r\n\r\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\r\n\r\n\t\t\t\t\tsqdist.z.assign( sqdist.y );\r\n\t\t\t\t\tsqdist.y.assign( dist );\r\n\r\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.z ), () => {\r\n\r\n\t\t\t\t\tsqdist.z.assign( dist );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t} );\r\n\r\n\tIf( metric.equal( int( 0 ) ), () => {\r\n\r\n\t\tsqdist.assign( sqrt( sqdist ) );\r\n\r\n\t} );\r\n\r\n\treturn sqdist;\r\n\r\n} );\r\n\r\nconst mx_worley_noise_vec3 = overloadingFn( [ mx_worley_noise_vec3_0, mx_worley_noise_vec3_1 ] );\r\n\r\n// layouts\r\n\r\nmx_select.setLayout( {\r\n\tname: 'mx_select',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'b', type: 'bool' },\r\n\t\t{ name: 't', type: 'float' },\r\n\t\t{ name: 'f', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_negate_if.setLayout( {\r\n\tname: 'mx_negate_if',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'val', type: 'float' },\r\n\t\t{ name: 'b', type: 'bool' }\r\n\t]\r\n} );\r\n\r\nmx_floor.setLayout( {\r\n\tname: 'mx_floor',\r\n\ttype: 'int',\r\n\tinputs: [\r\n\t\t{ name: 'x', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_bilerp_0.setLayout( {\r\n\tname: 'mx_bilerp_0',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'v0', type: 'float' },\r\n\t\t{ name: 'v1', type: 'float' },\r\n\t\t{ name: 'v2', type: 'float' },\r\n\t\t{ name: 'v3', type: 'float' },\r\n\t\t{ name: 's', type: 'float' },\r\n\t\t{ name: 't', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_bilerp_1.setLayout( {\r\n\tname: 'mx_bilerp_1',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'v0', type: 'vec3' },\r\n\t\t{ name: 'v1', type: 'vec3' },\r\n\t\t{ name: 'v2', type: 'vec3' },\r\n\t\t{ name: 'v3', type: 'vec3' },\r\n\t\t{ name: 's', type: 'float' },\r\n\t\t{ name: 't', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_trilerp_0.setLayout( {\r\n\tname: 'mx_trilerp_0',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'v0', type: 'float' },\r\n\t\t{ name: 'v1', type: 'float' },\r\n\t\t{ name: 'v2', type: 'float' },\r\n\t\t{ name: 'v3', type: 'float' },\r\n\t\t{ name: 'v4', type: 'float' },\r\n\t\t{ name: 'v5', type: 'float' },\r\n\t\t{ name: 'v6', type: 'float' },\r\n\t\t{ name: 'v7', type: 'float' },\r\n\t\t{ name: 's', type: 'float' },\r\n\t\t{ name: 't', type: 'float' },\r\n\t\t{ name: 'r', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_trilerp_1.setLayout( {\r\n\tname: 'mx_trilerp_1',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'v0', type: 'vec3' },\r\n\t\t{ name: 'v1', type: 'vec3' },\r\n\t\t{ name: 'v2', type: 'vec3' },\r\n\t\t{ name: 'v3', type: 'vec3' },\r\n\t\t{ name: 'v4', type: 'vec3' },\r\n\t\t{ name: 'v5', type: 'vec3' },\r\n\t\t{ name: 'v6', type: 'vec3' },\r\n\t\t{ name: 'v7', type: 'vec3' },\r\n\t\t{ name: 's', type: 'float' },\r\n\t\t{ name: 't', type: 'float' },\r\n\t\t{ name: 'r', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_gradient_float_0.setLayout( {\r\n\tname: 'mx_gradient_float_0',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'hash', type: 'uint' },\r\n\t\t{ name: 'x', type: 'float' },\r\n\t\t{ name: 'y', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_gradient_float_1.setLayout( {\r\n\tname: 'mx_gradient_float_1',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'hash', type: 'uint' },\r\n\t\t{ name: 'x', type: 'float' },\r\n\t\t{ name: 'y', type: 'float' },\r\n\t\t{ name: 'z', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_gradient_vec3_0.setLayout( {\r\n\tname: 'mx_gradient_vec3_0',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'hash', type: 'uvec3' },\r\n\t\t{ name: 'x', type: 'float' },\r\n\t\t{ name: 'y', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_gradient_vec3_1.setLayout( {\r\n\tname: 'mx_gradient_vec3_1',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'hash', type: 'uvec3' },\r\n\t\t{ name: 'x', type: 'float' },\r\n\t\t{ name: 'y', type: 'float' },\r\n\t\t{ name: 'z', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_gradient_scale2d_0.setLayout( {\r\n\tname: 'mx_gradient_scale2d_0',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'v', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_gradient_scale3d_0.setLayout( {\r\n\tname: 'mx_gradient_scale3d_0',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'v', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_gradient_scale2d_1.setLayout( {\r\n\tname: 'mx_gradient_scale2d_1',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'v', type: 'vec3' }\r\n\t]\r\n} );\r\n\r\nmx_gradient_scale3d_1.setLayout( {\r\n\tname: 'mx_gradient_scale3d_1',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'v', type: 'vec3' }\r\n\t]\r\n} );\r\n\r\nmx_rotl32.setLayout( {\r\n\tname: 'mx_rotl32',\r\n\ttype: 'uint',\r\n\tinputs: [\r\n\t\t{ name: 'x', type: 'uint' },\r\n\t\t{ name: 'k', type: 'int' }\r\n\t]\r\n} );\r\n\r\nmx_bjfinal.setLayout( {\r\n\tname: 'mx_bjfinal',\r\n\ttype: 'uint',\r\n\tinputs: [\r\n\t\t{ name: 'a', type: 'uint' },\r\n\t\t{ name: 'b', type: 'uint' },\r\n\t\t{ name: 'c', type: 'uint' }\r\n\t]\r\n} );\r\n\r\nmx_bits_to_01.setLayout( {\r\n\tname: 'mx_bits_to_01',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'bits', type: 'uint' }\r\n\t]\r\n} );\r\n\r\nmx_fade.setLayout( {\r\n\tname: 'mx_fade',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 't', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_hash_int_0.setLayout( {\r\n\tname: 'mx_hash_int_0',\r\n\ttype: 'uint',\r\n\tinputs: [\r\n\t\t{ name: 'x', type: 'int' }\r\n\t]\r\n} );\r\n\r\nmx_hash_int_1.setLayout( {\r\n\tname: 'mx_hash_int_1',\r\n\ttype: 'uint',\r\n\tinputs: [\r\n\t\t{ name: 'x', type: 'int' },\r\n\t\t{ name: 'y', type: 'int' }\r\n\t]\r\n} );\r\n\r\nmx_hash_int_2.setLayout( {\r\n\tname: 'mx_hash_int_2',\r\n\ttype: 'uint',\r\n\tinputs: [\r\n\t\t{ name: 'x', type: 'int' },\r\n\t\t{ name: 'y', type: 'int' },\r\n\t\t{ name: 'z', type: 'int' }\r\n\t]\r\n} );\r\n\r\nmx_hash_int_3.setLayout( {\r\n\tname: 'mx_hash_int_3',\r\n\ttype: 'uint',\r\n\tinputs: [\r\n\t\t{ name: 'x', type: 'int' },\r\n\t\t{ name: 'y', type: 'int' },\r\n\t\t{ name: 'z', type: 'int' },\r\n\t\t{ name: 'xx', type: 'int' }\r\n\t]\r\n} );\r\n\r\nmx_hash_int_4.setLayout( {\r\n\tname: 'mx_hash_int_4',\r\n\ttype: 'uint',\r\n\tinputs: [\r\n\t\t{ name: 'x', type: 'int' },\r\n\t\t{ name: 'y', type: 'int' },\r\n\t\t{ name: 'z', type: 'int' },\r\n\t\t{ name: 'xx', type: 'int' },\r\n\t\t{ name: 'yy', type: 'int' }\r\n\t]\r\n} );\r\n\r\nmx_hash_vec3_0.setLayout( {\r\n\tname: 'mx_hash_vec3_0',\r\n\ttype: 'uvec3',\r\n\tinputs: [\r\n\t\t{ name: 'x', type: 'int' },\r\n\t\t{ name: 'y', type: 'int' }\r\n\t]\r\n} );\r\n\r\nmx_hash_vec3_1.setLayout( {\r\n\tname: 'mx_hash_vec3_1',\r\n\ttype: 'uvec3',\r\n\tinputs: [\r\n\t\t{ name: 'x', type: 'int' },\r\n\t\t{ name: 'y', type: 'int' },\r\n\t\t{ name: 'z', type: 'int' }\r\n\t]\r\n} );\r\n\r\nmx_perlin_noise_float_0.setLayout( {\r\n\tname: 'mx_perlin_noise_float_0',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec2' }\r\n\t]\r\n} );\r\n\r\nmx_perlin_noise_float_1.setLayout( {\r\n\tname: 'mx_perlin_noise_float_1',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec3' }\r\n\t]\r\n} );\r\n\r\nmx_perlin_noise_vec3_0.setLayout( {\r\n\tname: 'mx_perlin_noise_vec3_0',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec2' }\r\n\t]\r\n} );\r\n\r\nmx_perlin_noise_vec3_1.setLayout( {\r\n\tname: 'mx_perlin_noise_vec3_1',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec3' }\r\n\t]\r\n} );\r\n\r\nmx_cell_noise_float_0.setLayout( {\r\n\tname: 'mx_cell_noise_float_0',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_cell_noise_float_1.setLayout( {\r\n\tname: 'mx_cell_noise_float_1',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec2' }\r\n\t]\r\n} );\r\n\r\nmx_cell_noise_float_2.setLayout( {\r\n\tname: 'mx_cell_noise_float_2',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec3' }\r\n\t]\r\n} );\r\n\r\nmx_cell_noise_float_3.setLayout( {\r\n\tname: 'mx_cell_noise_float_3',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec4' }\r\n\t]\r\n} );\r\n\r\nmx_cell_noise_vec3_0.setLayout( {\r\n\tname: 'mx_cell_noise_vec3_0',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_cell_noise_vec3_1.setLayout( {\r\n\tname: 'mx_cell_noise_vec3_1',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec2' }\r\n\t]\r\n} );\r\n\r\nmx_cell_noise_vec3_2.setLayout( {\r\n\tname: 'mx_cell_noise_vec3_2',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec3' }\r\n\t]\r\n} );\r\n\r\nmx_cell_noise_vec3_3.setLayout( {\r\n\tname: 'mx_cell_noise_vec3_3',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec4' }\r\n\t]\r\n} );\r\n\r\nmx_fractal_noise_float.setLayout( {\r\n\tname: 'mx_fractal_noise_float',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec3' },\r\n\t\t{ name: 'octaves', type: 'int' },\r\n\t\t{ name: 'lacunarity', type: 'float' },\r\n\t\t{ name: 'diminish', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_fractal_noise_vec3.setLayout( {\r\n\tname: 'mx_fractal_noise_vec3',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec3' },\r\n\t\t{ name: 'octaves', type: 'int' },\r\n\t\t{ name: 'lacunarity', type: 'float' },\r\n\t\t{ name: 'diminish', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_fractal_noise_vec2.setLayout( {\r\n\tname: 'mx_fractal_noise_vec2',\r\n\ttype: 'vec2',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec3' },\r\n\t\t{ name: 'octaves', type: 'int' },\r\n\t\t{ name: 'lacunarity', type: 'float' },\r\n\t\t{ name: 'diminish', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_fractal_noise_vec4.setLayout( {\r\n\tname: 'mx_fractal_noise_vec4',\r\n\ttype: 'vec4',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec3' },\r\n\t\t{ name: 'octaves', type: 'int' },\r\n\t\t{ name: 'lacunarity', type: 'float' },\r\n\t\t{ name: 'diminish', type: 'float' }\r\n\t]\r\n} );\r\n\r\nmx_worley_distance_0.setLayout( {\r\n\tname: 'mx_worley_distance_0',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec2' },\r\n\t\t{ name: 'x', type: 'int' },\r\n\t\t{ name: 'y', type: 'int' },\r\n\t\t{ name: 'xoff', type: 'int' },\r\n\t\t{ name: 'yoff', type: 'int' },\r\n\t\t{ name: 'jitter', type: 'float' },\r\n\t\t{ name: 'metric', type: 'int' }\r\n\t]\r\n} );\r\n\r\nmx_worley_distance_1.setLayout( {\r\n\tname: 'mx_worley_distance_1',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec3' },\r\n\t\t{ name: 'x', type: 'int' },\r\n\t\t{ name: 'y', type: 'int' },\r\n\t\t{ name: 'z', type: 'int' },\r\n\t\t{ name: 'xoff', type: 'int' },\r\n\t\t{ name: 'yoff', type: 'int' },\r\n\t\t{ name: 'zoff', type: 'int' },\r\n\t\t{ name: 'jitter', type: 'float' },\r\n\t\t{ name: 'metric', type: 'int' }\r\n\t]\r\n} );\r\n\r\nmx_worley_noise_float_0.setLayout( {\r\n\tname: 'mx_worley_noise_float_0',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec2' },\r\n\t\t{ name: 'jitter', type: 'float' },\r\n\t\t{ name: 'metric', type: 'int' }\r\n\t]\r\n} );\r\n\r\nmx_worley_noise_vec2_0.setLayout( {\r\n\tname: 'mx_worley_noise_vec2_0',\r\n\ttype: 'vec2',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec2' },\r\n\t\t{ name: 'jitter', type: 'float' },\r\n\t\t{ name: 'metric', type: 'int' }\r\n\t]\r\n} );\r\n\r\nmx_worley_noise_vec3_0.setLayout( {\r\n\tname: 'mx_worley_noise_vec3_0',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec2' },\r\n\t\t{ name: 'jitter', type: 'float' },\r\n\t\t{ name: 'metric', type: 'int' }\r\n\t]\r\n} );\r\n\r\nmx_worley_noise_float_1.setLayout( {\r\n\tname: 'mx_worley_noise_float_1',\r\n\ttype: 'float',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec3' },\r\n\t\t{ name: 'jitter', type: 'float' },\r\n\t\t{ name: 'metric', type: 'int' }\r\n\t]\r\n} );\r\n\r\nmx_worley_noise_vec2_1.setLayout( {\r\n\tname: 'mx_worley_noise_vec2_1',\r\n\ttype: 'vec2',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec3' },\r\n\t\t{ name: 'jitter', type: 'float' },\r\n\t\t{ name: 'metric', type: 'int' }\r\n\t]\r\n} );\r\n\r\nmx_worley_noise_vec3_1.setLayout( {\r\n\tname: 'mx_worley_noise_vec3_1',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'p', type: 'vec3' },\r\n\t\t{ name: 'jitter', type: 'float' },\r\n\t\t{ name: 'metric', type: 'int' }\r\n\t]\r\n} );\r\n\r\nexport { mx_select, mx_negate_if, mx_floor, mx_floorfrac, mx_bilerp, mx_trilerp, mx_gradient_float, mx_gradient_vec3, mx_gradient_scale2d, mx_gradient_scale3d, mx_rotl32, mx_bjmix, mx_bjfinal, mx_bits_to_01, mx_fade, mx_hash_int, mx_hash_vec3, mx_perlin_noise_float, mx_perlin_noise_vec3, mx_cell_noise_float, mx_cell_noise_vec3, mx_fractal_noise_float, mx_fractal_noise_vec3, mx_fractal_noise_vec2, mx_fractal_noise_vec4, mx_worley_distance, mx_worley_noise_float, mx_worley_noise_vec2, mx_worley_noise_vec3 };\r\n", "// Three.js Transpiler\r\n// https://github.com/AcademySoftwareFoundation/MaterialX/blob/main/libraries/stdlib/genglsl/lib/mx_hsv.glsl\r\n\r\nimport { int, float, vec3, If, tslFn } from '../../shadernode/ShaderNode.js';\r\nimport { add, sub, mul } from '../../math/OperatorNode.js';\r\nimport { floor, trunc, max, min } from '../../math/MathNode.js';\r\n\r\nconst mx_hsvtorgb = tslFn( ( [ hsv_immutable ] ) => {\r\n\r\n\tconst hsv = vec3( hsv_immutable ).toVar();\r\n\tconst h = float( hsv.x ).toVar();\r\n\tconst s = float( hsv.y ).toVar();\r\n\tconst v = float( hsv.z ).toVar();\r\n\r\n\tIf( s.lessThan( 0.0001 ), () => {\r\n\r\n\t\treturn vec3( v, v, v );\r\n\r\n\t} ).else( () => {\r\n\r\n\t\th.assign( mul( 6.0, h.sub( floor( h ) ) ) );\r\n\t\tconst hi = int( trunc( h ) ).toVar();\r\n\t\tconst f = float( h.sub( float( hi ) ) ).toVar();\r\n\t\tconst p = float( v.mul( sub( 1.0, s ) ) ).toVar();\r\n\t\tconst q = float( v.mul( sub( 1.0, s.mul( f ) ) ) ).toVar();\r\n\t\tconst t = float( v.mul( sub( 1.0, s.mul( sub( 1.0, f ) ) ) ) ).toVar();\r\n\r\n\t\tIf( hi.equal( int( 0 ) ), () => {\r\n\r\n\t\t\treturn vec3( v, t, p );\r\n\r\n\t\t} ).elseif( hi.equal( int( 1 ) ), () => {\r\n\r\n\t\t\treturn vec3( q, v, p );\r\n\r\n\t\t} ).elseif( hi.equal( int( 2 ) ), () => {\r\n\r\n\t\t\treturn vec3( p, v, t );\r\n\r\n\t\t} ).elseif( hi.equal( int( 3 ) ), () => {\r\n\r\n\t\t\treturn vec3( p, q, v );\r\n\r\n\t\t} ).elseif( hi.equal( int( 4 ) ), () => {\r\n\r\n\t\t\treturn vec3( t, p, v );\r\n\r\n\t\t} );\r\n\r\n\t\treturn vec3( v, p, q );\r\n\r\n\t} );\r\n\r\n} );\r\n\r\nconst mx_rgbtohsv = tslFn( ( [ c_immutable ] ) => {\r\n\r\n\tconst c = vec3( c_immutable ).toVar();\r\n\tconst r = float( c.x ).toVar();\r\n\tconst g = float( c.y ).toVar();\r\n\tconst b = float( c.z ).toVar();\r\n\tconst mincomp = float( min( r, min( g, b ) ) ).toVar();\r\n\tconst maxcomp = float( max( r, max( g, b ) ) ).toVar();\r\n\tconst delta = float( maxcomp.sub( mincomp ) ).toVar();\r\n\tconst h = float().toVar(), s = float().toVar(), v = float().toVar();\r\n\tv.assign( maxcomp );\r\n\r\n\tIf( maxcomp.greaterThan( 0.0 ), () => {\r\n\r\n\t\ts.assign( delta.div( maxcomp ) );\r\n\r\n\t} ).else( () => {\r\n\r\n\t\ts.assign( 0.0 );\r\n\r\n\t} );\r\n\r\n\tIf( s.lessThanEqual( 0.0 ), () => {\r\n\r\n\t\th.assign( 0.0 );\r\n\r\n\t} ).else( () => {\r\n\r\n\t\tIf( r.greaterThanEqual( maxcomp ), () => {\r\n\r\n\t\t\th.assign( g.sub( b ).div( delta ) );\r\n\r\n\t\t} ).elseif( g.greaterThanEqual( maxcomp ), () => {\r\n\r\n\t\t\th.assign( add( 2.0, b.sub( r ).div( delta ) ) );\r\n\r\n\t\t} ).else( () => {\r\n\r\n\t\t\th.assign( add( 4.0, r.sub( g ).div( delta ) ) );\r\n\r\n\t\t} );\r\n\r\n\t\th.mulAssign( 1.0 / 6.0 );\r\n\r\n\t\tIf( h.lessThan( 0.0 ), () => {\r\n\r\n\t\t\th.addAssign( 1.0 );\r\n\r\n\t\t} );\r\n\r\n\t} );\r\n\r\n\treturn vec3( h, s, v );\r\n\r\n} );\r\n\r\n// layouts\r\n\r\nmx_hsvtorgb.setLayout( {\r\n\tname: 'mx_hsvtorgb',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'hsv', type: 'vec3' }\r\n\t]\r\n} );\r\n\r\nmx_rgbtohsv.setLayout( {\r\n\tname: 'mx_rgbtohsv',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'c', type: 'vec3' }\r\n\t]\r\n} );\r\n\r\nexport { mx_hsvtorgb, mx_rgbtohsv };\r\n", "// Three.js Transpiler\r\n// https://github.com/AcademySoftwareFoundation/MaterialX/blob/main/libraries/stdlib/genglsl/lib/mx_transform_color.glsl\r\n\r\nimport { bvec3, vec3, tslFn } from '../../shadernode/ShaderNode.js';\r\nimport { greaterThan } from '../../math/OperatorNode.js';\r\nimport { max, pow, mix } from '../../math/MathNode.js';\r\n\r\nconst mx_srgb_texture_to_lin_rec709 = tslFn( ( [ color_immutable ] ) => {\r\n\r\n\tconst color = vec3( color_immutable ).toVar();\r\n\tconst isAbove = bvec3( greaterThan( color, vec3( 0.04045 ) ) ).toVar();\r\n\tconst linSeg = vec3( color.div( 12.92 ) ).toVar();\r\n\tconst powSeg = vec3( pow( max( color.add( vec3( 0.055 ) ), vec3( 0.0 ) ).div( 1.055 ), vec3( 2.4 ) ) ).toVar();\r\n\r\n\treturn mix( linSeg, powSeg, isAbove );\r\n\r\n} );\r\n\r\n// layouts\r\n\r\nmx_srgb_texture_to_lin_rec709.setLayout( {\r\n\tname: 'mx_srgb_texture_to_lin_rec709',\r\n\ttype: 'vec3',\r\n\tinputs: [\r\n\t\t{ name: 'color', type: 'vec3' }\r\n\t]\r\n} );\r\n\r\nexport { mx_srgb_texture_to_lin_rec709 };\r\n", "import {\r\n\tmx_perlin_noise_float, mx_perlin_noise_vec3,\r\n\tmx_worley_noise_float as worley_noise_float, mx_worley_noise_vec2 as worley_noise_vec2, mx_worley_noise_vec3 as worley_noise_vec3,\r\n\tmx_cell_noise_float as cell_noise_float,\r\n\tmx_fractal_noise_float as fractal_noise_float, mx_fractal_noise_vec2 as fractal_noise_vec2, mx_fractal_noise_vec3 as fractal_noise_vec3, mx_fractal_noise_vec4 as fractal_noise_vec4\r\n} from './lib/mx_noise.js';\r\nimport { mx_hsvtorgb, mx_rgbtohsv } from './lib/mx_hsv.js';\r\nimport { mx_srgb_texture_to_lin_rec709 } from './lib/mx_transform_color.js';\r\nimport { mix, smoothstep } from '../math/MathNode.js';\r\nimport { uv } from '../accessors/UVNode.js';\r\nimport { float, vec2, vec4, int } from '../shadernode/ShaderNode.js';\r\n\r\nexport const mx_aastep = ( threshold, value ) => {\r\n\r\n\tthreshold = float( threshold );\r\n\tvalue = float( value );\r\n\r\n\tconst afwidth = vec2( value.dFdx(), value.dFdy() ).length().mul( 0.70710678118654757 );\r\n\r\n\treturn smoothstep( threshold.sub( afwidth ), threshold.add( afwidth ), value );\r\n\r\n};\r\n\r\nconst _ramp = ( a, b, uv, p ) => mix( a, b, uv[ p ].clamp() );\r\nexport const mx_ramplr = ( valuel, valuer, texcoord = uv() ) => _ramp( valuel, valuer, texcoord, 'x' );\r\nexport const mx_ramptb = ( valuet, valueb, texcoord = uv() ) => _ramp( valuet, valueb, texcoord, 'y' );\r\n\r\nconst _split = ( a, b, center, uv, p ) => mix( a, b, mx_aastep( center, uv[ p ] ) );\r\nexport const mx_splitlr = ( valuel, valuer, center, texcoord = uv() ) => _split( valuel, valuer, center, texcoord, 'x' );\r\nexport const mx_splittb = ( valuet, valueb, center, texcoord = uv() ) => _split( valuet, valueb, center, texcoord, 'y' );\r\n\r\nexport const mx_transform_uv = ( uv_scale = 1, uv_offset = 0, uv_geo = uv() ) => uv_geo.mul( uv_scale ).add( uv_offset );\r\n\r\nexport const mx_safepower = ( in1, in2 = 1 ) => {\r\n\r\n\tin1 = float( in1 );\r\n\r\n\treturn in1.abs().pow( in2 ).mul( in1.sign() );\r\n\r\n};\r\n\r\nexport const mx_contrast = ( input, amount = 1, pivot = .5 ) => float( input ).sub( pivot ).mul( amount ).add( pivot );\r\n\r\nexport const mx_noise_float = ( texcoord = uv(), amplitude = 1, pivot = 0 ) => mx_perlin_noise_float( texcoord.convert( 'vec2|vec3' ) ).mul( amplitude ).add( pivot );\r\n//export const mx_noise_vec2 = ( texcoord = uv(), amplitude = 1, pivot = 0 ) => mx_perlin_noise_vec3( texcoord.convert( 'vec2|vec3' ) ).mul( amplitude ).add( pivot );\r\nexport const mx_noise_vec3 = ( texcoord = uv(), amplitude = 1, pivot = 0 ) => mx_perlin_noise_vec3( texcoord.convert( 'vec2|vec3' ) ).mul( amplitude ).add( pivot );\r\nexport const mx_noise_vec4 = ( texcoord = uv(), amplitude = 1, pivot = 0 ) => {\r\n\r\n\ttexcoord = texcoord.convert( 'vec2|vec3' ); // overloading type\r\n\r\n\tconst noise_vec4 = vec4( mx_perlin_noise_vec3( texcoord ), mx_perlin_noise_float( texcoord.add( vec2( 19, 73 ) ) ) );\r\n\r\n\treturn noise_vec4.mul( amplitude ).add( pivot );\r\n\r\n};\r\n\r\nexport const mx_worley_noise_float = ( texcoord = uv(), jitter = 1 ) => worley_noise_float( texcoord.convert( 'vec2|vec3' ), jitter, int( 1 ) );\r\nexport const mx_worley_noise_vec2 = ( texcoord = uv(), jitter = 1 ) => worley_noise_vec2( texcoord.convert( 'vec2|vec3' ), jitter, int( 1 ) );\r\nexport const mx_worley_noise_vec3 = ( texcoord = uv(), jitter = 1 ) => worley_noise_vec3( texcoord.convert( 'vec2|vec3' ), jitter, int( 1 ) );\r\n\r\nexport const mx_cell_noise_float = ( texcoord = uv() ) => cell_noise_float( texcoord.convert( 'vec2|vec3' ) );\r\n\r\nexport const mx_fractal_noise_float = ( position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1 ) => fractal_noise_float( position, int( octaves ), lacunarity, diminish ).mul( amplitude );\r\nexport const mx_fractal_noise_vec2 = ( position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1 ) => fractal_noise_vec2( position, int( octaves ), lacunarity, diminish ).mul( amplitude );\r\nexport const mx_fractal_noise_vec3 = ( position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1 ) => fractal_noise_vec3( position, int( octaves ), lacunarity, diminish ).mul( amplitude );\r\nexport const mx_fractal_noise_vec4 = ( position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1 ) => fractal_noise_vec4( position, int( octaves ), lacunarity, diminish ).mul( amplitude );\r\n\r\nexport { mx_hsvtorgb, mx_rgbtohsv, mx_srgb_texture_to_lin_rec709 };\r\n"],
  "mappings": "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",
  "names": ["property", "arrayBuffer", "hash", "output", "property", "cache", "data", "output", "output", "output", "output", "length", "output", "nodeObject", "output", "bool", "uint", "int", "float", "stack", "output", "attribute", "cache", "context", "output", "output", "code", "code", "varying", "code", "code", "output", "property", "output", "hash", "output", "output", "output", "output", "texture", "texture", "output", "snippet", "arrayBuffer", "length", "property", "property", "property", "buffer", "bufferAttribute", "output", "buffer", "output", "depth", "buffer", "texture", "depthTexture", "shadowCoord", "lights", "hash", "context", "stack", "id", "context", "texture", "output", "resolution", "texture", "depth", "lights", "lightsNode", "property", "cache", "data", "Material", "output", "context", "texture", "hash", "context", "cache", "value", "attribute", "length", "bufferAttribute", "code", "output", "reference", "output", "output", "_size", "resolution", "uv", "uv", "output", "output", "output", "property", "userData", "uv", "color", "threshold", "uv", "normalMap", "color", "toneMapping", "texture", "depthTexture", "cameraNear", "cameraFar", "pass", "uv", "uv", "temp", "uv", "uv", "color", "pass", "threshold", "id", "element", "output", "code", "min", "max", "output", "length", "output", "color", "distance", "context", "uv", "defaultValues", "defaultValues", "defaultValues", "defaultValues", "defaultValues", "defaultValues", "defaultValues", "roughness", "roughness", "normalView", "roughness", "specularColor", "roughness", "roughness", "iridescenceIOR", "roughness", "clearcoat", "sheen", "iridescence", "context", "defaultValues", "defaultValues", "stack", "defaultValues", "defaultValues", "context", "modelViewProjection", "property", "type", "name", "code", "hash", "color", "threshold", "uv", "mx_worley_noise_float", "mx_worley_noise_vec2", "mx_worley_noise_vec3", "mx_cell_noise_float", "mx_fractal_noise_float", "mx_fractal_noise_vec2", "mx_fractal_noise_vec3", "mx_fractal_noise_vec4"]
}
